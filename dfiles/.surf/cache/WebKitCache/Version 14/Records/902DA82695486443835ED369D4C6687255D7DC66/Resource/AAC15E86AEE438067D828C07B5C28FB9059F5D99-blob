<!DOCTYPE html><html lang="en-US" class="no-js"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1"><script data-cfasync="false" id="ao_optimized_gfonts_config" type="text/javascript">WebFontConfig={google:{families:["Merriweather:400,700,900,400italic,700italic,900italic:latin,latin-ext","Montserrat:400,700:latin,latin-ext","Inconsolata:400:latin,latin-ext"] },classes:false, events:false, timeout:1500};</script><link rel="profile" href="https://gmpg.org/xfn/11"><link rel="apple-touch-icon" sizes="57x57" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-57x57.png"><link rel="apple-touch-icon" sizes="60x60" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-60x60.png"><link rel="apple-touch-icon" sizes="72x72" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-72x72.png"><link rel="apple-touch-icon" sizes="76x76" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-76x76.png"><link rel="apple-touch-icon" sizes="114x114" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-114x114.png"><link rel="apple-touch-icon" sizes="120x120" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-120x120.png"><link rel="apple-touch-icon" sizes="144x144" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-144x144.png"><link rel="apple-touch-icon" sizes="152x152" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-152x152.png"><link rel="apple-touch-icon" sizes="180x180" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/apple-icon-180x180.png"><link rel="icon" type="image/png" sizes="192x192" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/android-icon-192x192.png"><link rel="icon" type="image/png" sizes="32x32" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/favicon-32x32.png"><link rel="icon" type="image/png" sizes="96x96" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/favicon-96x96.png"><link rel="icon" type="image/png" sizes="16x16" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/favicon-16x16.png"><link rel="manifest" href="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/manifest.json"><meta name="msapplication-TileColor" content="#ffffff"><meta name="msapplication-TileImage" content="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icon/ms-icon-144x144.png"><meta name="msapplication-config" content="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/icons/browserconfig.xml"><meta name="revised" content="Monday, December 17, 2018, 5:02 am" /> <script type="1df16c32f4a4f0b9555eba57-text/javascript">(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script> <title>Bash For Loop Examples - nixCraft</title> <meta name="description" content="Explains how to use a Bash for loop control flow statement on Linux / UNIX / *BSD / macOS bash shell with various programming examples." /><link rel="canonical" href="https://www.cyberciti.biz/faq/bash-for-loop/" /><meta property="og:locale" content="en_US" /><meta property="og:type" content="article" /><meta property="og:title" content="Bash For Loop Examples - nixCraft" /><meta property="og:description" content="Explains how to use a Bash for loop control flow statement on Linux / UNIX / *BSD / macOS bash shell with various programming examples." /><meta property="og:url" content="https://www.cyberciti.biz/faq/bash-for-loop/" /><meta property="og:site_name" content="nixCraft" /><meta property="article:publisher" content="https://www.facebook.com/nixcraft" /><meta property="article:tag" content="bash control expression" /><meta property="article:tag" content="bash for infinite loops" /><meta property="article:tag" content="control flow" /><meta property="article:tag" content="echo command" /><meta property="article:tag" content="flow statement" /><meta property="article:tag" content="for command" /><meta property="article:tag" content="for loop syntax" /><meta property="article:tag" content="for syntax" /><meta property="article:tag" content="for three-expression bash loop" /><meta property="article:tag" content="shell code" /><meta property="article:section" content="BASH Shell" /><meta property="article:published_time" content="2008-10-31T06:21:02+00:00" /><meta property="article:modified_time" content="2018-12-17T05:02:19+00:00" /><meta property="og:updated_time" content="2018-12-17T05:02:19+00:00" /><meta property="og:image" content="https://www.cyberciti.biz/media/new/faq/2008/10/bash-for-loop-examples.jpg" /><meta property="og:image:secure_url" content="https://www.cyberciti.biz/media/new/faq/2008/10/bash-for-loop-examples.jpg" /><meta name="twitter:card" content="summary_large_image" /><meta name="twitter:description" content="Explains how to use a Bash for loop control flow statement on Linux / UNIX / *BSD / macOS bash shell with various programming examples." /><meta name="twitter:title" content="Bash For Loop Examples - nixCraft" /><meta name="twitter:site" content="@nixcraft" /><meta name="twitter:image" content="https://www.cyberciti.biz/media/new/faq/2008/10/bash-for-loop-examples.jpg" /><meta name="twitter:creator" content="@nixcraft" /> <script type='application/ld+json' class='yoast-schema-graph yoast-schema-graph--main'>{"@context":"https://schema.org","@graph":[{"@type":["Person","Organization"],"@id":"https://www.cyberciti.biz/faq/#person","name":"Vivek Gite","logo":{"@id":"https://www.cyberciti.biz/faq/#personlogo"},"description":"The author is the creator of nixCraft and a seasoned sysadmin, DevOps engineer,  and a trainer for the Linux operating system/Unix shell scripting. Get the <strong>latest tutorials on SysAdmin, Linux/Unix and open source topics via <a href=\"https://www.cyberciti.biz/atom/atom.xml\">RSS/XML feed</a></strong> or <a href=\"https://www.cyberciti.biz/subscribe-to-weekly-linux-unix-newsletter-for-sysadmin/\">weekly email newsletter</a>.","sameAs":["https://twitter.com/https://twitter.com/nixcraft"]},{"@type":"WebSite","@id":"https://www.cyberciti.biz/faq/#website","url":"https://www.cyberciti.biz/faq/","name":"nixCraft","publisher":{"@id":"https://www.cyberciti.biz/faq/#person"},"potentialAction":{"@type":"SearchAction","target":"https://www.cyberciti.biz/faq/?s={search_term_string}","query-input":"required name=search_term_string"}},{"@type":"WebPage","@id":"https://www.cyberciti.biz/faq/bash-for-loop/#webpage","url":"https://www.cyberciti.biz/faq/bash-for-loop/","inLanguage":"en-US","name":"Bash For Loop Examples - nixCraft","isPartOf":{"@id":"https://www.cyberciti.biz/faq/#website"},"image":{"@type":"ImageObject","@id":"https://www.cyberciti.biz/faq/bash-for-loop/#primaryimage","url":"https://www.cyberciti.biz/media/new/faq/2008/10/bash-for-loop-examples.jpg","width":599,"height":233,"caption":"Bash for loop exampls for Macos/Linux and Unix"},"primaryImageOfPage":{"@id":"https://www.cyberciti.biz/faq/bash-for-loop/#primaryimage"},"datePublished":"2008-10-31T06:21:02+00:00","dateModified":"2018-12-17T05:02:19+00:00","description":"Explains how to use a Bash for loop control flow statement on Linux / UNIX / *BSD / macOS bash shell with various programming examples."},{"@type":"Article","@id":"https://www.cyberciti.biz/faq/bash-for-loop/#article","isPartOf":{"@id":"https://www.cyberciti.biz/faq/bash-for-loop/#webpage"},"author":{"@id":"https://www.cyberciti.biz/faq/#person"},"headline":"Bash For Loop Examples","datePublished":"2008-10-31T06:21:02+00:00","dateModified":"2018-12-17T05:02:19+00:00","commentCount":"254","mainEntityOfPage":"https://www.cyberciti.biz/faq/bash-for-loop/#webpage","publisher":{"@id":"https://www.cyberciti.biz/faq/#person"},"keywords":"bash control expression,bash for infinite loops,control flow,echo command,flow statement,for command,for loop syntax,for syntax,for three-expression bash loop,shell code","articleSection":"BASH Shell,CentOS,Debian / Ubuntu,FreeBSD,Linux,Solaris-Unix,Suse,Ubuntu Linux,UNIX"}]}</script> <link href='https://fonts.gstatic.com' crossorigin='anonymous' rel='preconnect' /><link href='https://ajax.googleapis.com' rel='preconnect' /><link href='https://fonts.googleapis.com' rel='preconnect' /><link rel="alternate" type="application/rss+xml" title="nixCraft &raquo; Feed" href="https://www.cyberciti.biz/faq/feed/" /><link rel="alternate" type="application/rss+xml" title="nixCraft &raquo; Comments Feed" href="https://www.cyberciti.biz/faq/comments/feed/" /><link rel="alternate" type="application/rss+xml" title="nixCraft &raquo; Bash For Loop Examples Comments Feed" href="https://www.cyberciti.biz/faq/bash-for-loop/feed/" /><link rel='stylesheet' id='wp-block-library-css' href='https://www.cyberciti.biz/faq/wp-includes/css/dist/block-library/style.min.css?ver=5.2.1' type='text/css' media='all' /><link rel='stylesheet' id='wp-block-library-theme-css' href='https://www.cyberciti.biz/faq/wp-includes/css/dist/block-library/theme.min.css?ver=5.2.1' type='text/css' media='all' /><link rel='stylesheet' id='wp-syntax-css-css' href='https://www.cyberciti.biz/faq/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.1' type='text/css' media='all' /><link rel='stylesheet' id='parent-style-css' href='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/style.css?ver=5.2.1' type='text/css' media='all' /><link rel='stylesheet' id='twentysixteen-style-css' href='https://www.cyberciti.biz/faq/wp-content/themes/cybercity/style.css?ver=cf1.7' type='text/css' media='all' /><link rel='stylesheet' id='genericons-css' href='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/genericons/genericons.css?ver=3.4.1' type='text/css' media='all' /><link rel='stylesheet' id='twentysixteen-block-style-css' href='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/css/blocks.css?ver=20181230' type='text/css' media='all' /> <!--[if lt IE 10]><link rel='stylesheet' id='twentysixteen-ie-css'  href='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/css/ie.css?ver=20160816' type='text/css' media='all' /> <![endif]--> <!--[if lt IE 9]><link rel='stylesheet' id='twentysixteen-ie8-css'  href='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/css/ie8.css?ver=20160816' type='text/css' media='all' /> <![endif]--> <!--[if lt IE 8]><link rel='stylesheet' id='twentysixteen-ie7-css'  href='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/css/ie7.css?ver=20160816' type='text/css' media='all' /> <![endif]--> <script type="1df16c32f4a4f0b9555eba57-text/javascript" src='https://www.cyberciti.biz/faq/wp-includes/js/jquery/jquery.js?ver=1.12.4-wp'></script> <script type="1df16c32f4a4f0b9555eba57-text/javascript" src='https://www.cyberciti.biz/faq/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script> <!--[if lt IE 9]> <script type='text/javascript' src='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/js/html5.js?ver=3.7.3'></script> <![endif]--><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.cyberciti.biz/faq/xmlrpc.php?rsd" /><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.cyberciti.biz/faq/wp-includes/wlwmanifest.xml" /><meta name="generator" content="WordPress 5.2.1" /><link rel='shortlink' href='https://www.cyberciti.biz/faq/?p=2284' /><link rel="alternate" type="application/json+oembed" href="https://www.cyberciti.biz/faq/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.cyberciti.biz%2Ffaq%2Fbash-for-loop%2F" /><link rel="alternate" type="text/xml+oembed" href="https://www.cyberciti.biz/faq/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.cyberciti.biz%2Ffaq%2Fbash-for-loop%2F&#038;format=xml" /><style type="text/css">.broken_link, a.broken_link {
	text-decoration: line-through;
}</style><link rel="amphtml" href="https://www.cyberciti.biz/faq/bash-for-loop/amp/"><link rel="icon" href="https://www.cyberciti.biz/media/new/faq/2018/11/new_icon_amp.png" sizes="32x32" /><link rel="icon" href="https://www.cyberciti.biz/media/new/faq/2018/11/new_icon_amp.png" sizes="192x192" /><link rel="apple-touch-icon-precomposed" href="https://www.cyberciti.biz/media/new/faq/2018/11/new_icon_amp.png" /><meta name="msapplication-TileImage" content="https://www.cyberciti.biz/media/new/faq/2018/11/new_icon_amp.png" /> <script type="1df16c32f4a4f0b9555eba57-text/javascript">(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-108650-1', 'auto');
  ga('send', 'pageview');</script> <script language="javascript" type="1df16c32f4a4f0b9555eba57-text/javascript" src="https://www.cyberciti.biz/js/ads.js"></script> <script data-cfasync="false" id="ao_optimized_gfonts_webfontloader" type="text/javascript">(function() {var wf = document.createElement('script');wf.src='https://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';wf.type='text/javascript';wf.async='true';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(wf, s);})();</script></head><body class="post-template-default single single-post postid-2284 single-format-standard wp-custom-logo wp-embed-responsive group-blog"><div id="page" class="site"><div class="site-inner"> <a class="skip-link screen-reader-text" href="#content">Skip to content</a><header id="masthead" class="site-header" role="banner"><div class="site-header-main"><div class="site-branding"> <a href="https://www.cyberciti.biz/faq/" class="custom-logo-link"><img src="https://www.cyberciti.biz/media/new/cms/2017/06/new-nixcraft-logo-cyberciti.biz_.png" class="custom-logo" /></a><div class="header-site-info"><div><h1 class="site-title"><a href="https://www.cyberciti.biz/faq/" rel="home"><span class="colored">nix</span>Craft</a></h1><p class="site-description">Linux and Unix tutorials for new and seasoned sysadmin</p></div></div></div><div id="site-header-menu" class="site-header-menu"><nav id="site-navigation" class="main-navigation" role="navigation" aria-label="Primary Menu"><div class="menu-faq-container"><ul id="menu-faq" class="primary-menu"><li id="menu-item-145282" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-145282"><a title="nixCraft &#8211; Home Page " href="https://www.cyberciti.biz/">Home</a></li><li id="menu-item-145280" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-145280"><a title="About us" href="https://www.cyberciti.biz/tips/about-us">About</a></li><li id="menu-item-145283" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-145283"><a href="https://bash.cyberciti.biz/guide/Main_Page">Linux Shell Scripting TutoriaL</a></li><li id="menu-item-145281" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-145281"><a title="Rss Feed" href="https://www.cyberciti.biz/nixcraft-rss-feed-syndication/">RSS/Feed</a></li><li id="menu-item-145817" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-145817"><a title="Help support nixCraft" href="https://www.cyberciti.biz/tips/donate">Donations</a></li><li id="menu-item-147031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147031"><a href="https://www.cyberciti.biz/search/">Search</a></li></ul></div></nav></div><div class="mobile-buttons"> <button id="menu-toggle" class="menu-toggle">Menu</button></div></div><div class="header-image"><div class="header-site-info"><div><h1 class="site-title"><a href="https://www.cyberciti.biz/faq/" rel="home"><span class="colored">nix</span>Craft</a></h1><p class="site-description">Linux and Unix tutorials for new and seasoned sysadmin</p></div></div> <img src="https://www.cyberciti.biz/media/new/cms/2017/06/new-nixcraft-illustration-cyberciti.biz_.png" sizes="(max-width: 709px) 85vw, (max-width: 909px) 81vw, (max-width: 1362px) 88vw, 1200px" width="1041" height="194" alt="nixCraft"></div></header><div id="content" class="site-content"><div id="primary" class="content-area"><main id="main" class="site-main" role="main"><article id="post-2284" class="post-2284 post type-post status-publish format-standard hentry category-bash-shell category-centos category-debian-ubuntu category-freebsd category-linux category-solaris-unix category-suse category-ubuntu-linux category-unix tag-bash-control-expression tag-bash-for-infinite-loops tag-control-flow tag-echo-command tag-flow-statement tag-for-command tag-for-loop-syntax tag-for-syntax tag-for-three-expression-bash-loop tag-shell-code tutoriallevel-easy"><header class="entry-header"><h1 class="entry-title">Bash For Loop Examples</h1> <span class="last-updated">last updated <time class="entry-modified-time" itemprop="dateModified" datetime="2018-12-17T05:02:19+00:00">December 17, 2018</time></span> <span class="cat-links">in <span class="screen-reader-text">Categories </span><a href="https://www.cyberciti.biz/faq/category/bash-shell/" rel="tag">BASH Shell</a>, <a href="https://www.cyberciti.biz/faq/category/centos/" rel="tag">CentOS</a>, <a href="https://www.cyberciti.biz/faq/category/debian-ubuntu/" rel="tag">Debian / Ubuntu</a>, <a href="https://www.cyberciti.biz/faq/category/freebsd/" rel="tag">FreeBSD</a>, <a href="https://www.cyberciti.biz/faq/category/linux/" rel="tag">Linux</a>, <a href="https://www.cyberciti.biz/faq/category/solaris-unix/" rel="tag">Solaris-Unix</a>, <a href="https://www.cyberciti.biz/faq/category/suse/" rel="tag">Suse</a>, <a href="https://www.cyberciti.biz/faq/category/ubuntu-linux/" rel="tag">Ubuntu Linux</a>, <a href="https://www.cyberciti.biz/faq/category/unix/" rel="tag">UNIX</a></span></header><div class="entry-content"><p><div class="my_story"><a title="See all Bash/Shell scripting related FAQ" href="//www.cyberciti.biz/faq/category/bash-shell/"><img src="https://www.cyberciti.biz/media/new/category/old/terminal.png" alt="" border="0" /></a></div><span class="drop_cap">H</span>ow do I use bash for loop to repeat certain task under Linux / UNIX operating system? How do I set infinite loops using for statement? How do I use three-parameter for loop control expression?<br /> <span id="more-2284"></span><br /> A &#8216;for loop&#8217; is a bash programming language statement which allows code to be repeatedly executed. A for loop is classified as an iteration statement i.e. it is the repetition of a process within a bash script. For example, you can run UNIX command or task 5 times or read and process list of files using a for loop. A for loop can be used at a shell prompt or within a shell script itself.<br /> <img src="https://www.cyberciti.biz/media/new/faq/2008/10/bash-for-loop-examples.jpg" alt="Bash for loop examples for Macos/Linux and Unix" width="599" height="233" class="aligncenter size-full wp-image-146093" srcset="https://www.cyberciti.biz/media/new/faq/2008/10/bash-for-loop-examples.jpg 599w, https://www.cyberciti.biz/media/new/faq/2008/10/bash-for-loop-examples-300x117.jpg 300w" sizes="(max-width: 599px) 85vw, 599px" /><p><center><div id="blocker7a1003a" style="display:none;margin-bottom: 30px;padding: 20px 10px;background: #ffcccc; "><h5>Adblock detected 😱</h5><div style="text-align: center;border-radius: 5px; ">My website is made possible by displaying online advertisements to my visitors. I get it! Ads are annoying but they help keep this website running. It is hard to keep the site running and producing new content when so many people block ads. Please consider donating money to the nixCraft via <strong><a rel="noopener" target="_blank" rel="nofollow" href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=LJF8UGD7QKF3U">PayPal</a></strong>/<strong><a href="https://www.cyberciti.biz/tips/donate#BTC">Bitcoin</a></strong>, or become a <strong><a rel="noopener" target="_blank" rel="nofollow" href="https://www.patreon.com/nixcraft">supporter using Patreon</a></strong>.</div></div> <script type="1df16c32f4a4f0b9555eba57-text/javascript">if (typeof window.canRunAds === "undefined") {
 document.getElementById("blocker7a1003a").style.display = "";
}</script> <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" data-cfasync="false"></script>  <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-7825705102693166" data-ad-slot="8594278667"></ins> <script type="1df16c32f4a4f0b9555eba57-text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script> </center></p></p><h2>for loop syntax</h2><p>Numeric ranges for syntax is as follows:</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">for</span> VARIABLE <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #000000;">1</span> <span style="color: #000000;">2</span> <span style="color: #000000;">3</span> <span style="color: #000000;">4</span> <span style="color: #000000;">5</span> .. N
<span style="color: #000000; font-weight: bold;">do</span>
	command1
	command2
	commandN
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">for VARIABLE in 1 2 3 4 5 .. N
do
command1
command2
commandN
done</p></div><p>OR</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">for</span> VARIABLE <span style="color: #000000; font-weight: bold;">in</span> file1 file2 file3
<span style="color: #000000; font-weight: bold;">do</span>
	command1 on <span style="color: #007800;">$VARIABLE</span>
	command2
	commandN
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">for VARIABLE in file1 file2 file3
do
command1 on $VARIABLE
command2
commandN
done</p></div><p>OR</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">for</span> OUTPUT <span style="color: #000000; font-weight: bold;">in</span> $<span style="color: #7a0874; font-weight: bold;">&#40;</span>Linux-Or-Unix-Command-Here<span style="color: #7a0874; font-weight: bold;">&#41;</span>
<span style="color: #000000; font-weight: bold;">do</span>
	command1 on <span style="color: #007800;">$OUTPUT</span>
	command2 on <span style="color: #007800;">$OUTPUT</span>
	commandN
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">for OUTPUT in $(Linux-Or-Unix-Command-Here)
do
command1 on $OUTPUT
command2 on $OUTPUT
commandN
done</p></div><h2>Examples</h2><p><div class="my_story"><a title="See all UNIX related articles/faq" href="//www.cyberciti.biz/faq/category/unix/"><img src="https://www.cyberciti.biz/media/new/category/old/unix-logo.gif" alt="" border="0" /></a></div>This type of for loop is characterized by counting. The range is specified by a beginning (#1) and ending number (#5). The for loop executes a sequence of commands for each member in a list of items. A representative example in BASH is as follows to display welcome message 5 times with for loop:</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash</span>
<span style="color: #000000; font-weight: bold;">for</span> i <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #000000;">1</span> <span style="color: #000000;">2</span> <span style="color: #000000;">3</span> <span style="color: #000000;">4</span> <span style="color: #000000;">5</span>
<span style="color: #000000; font-weight: bold;">do</span>
   <span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Welcome <span style="color: #007800;">$i</span> times&quot;</span>
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash
for i in 1 2 3 4 5
do
echo &quot;Welcome $i times&quot;
done</p></div><p>Sometimes you may need to set a step value (allowing one to count by two&#8217;s or to count backwards for instance). Latest <strong>bash version 3.0+</strong> has inbuilt support for setting up ranges:</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash</span>
<span style="color: #000000; font-weight: bold;">for</span> i <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #000000;">1</span>..<span style="color: #000000;">5</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>
<span style="color: #000000; font-weight: bold;">do</span>
   <span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Welcome <span style="color: #007800;">$i</span> times&quot;</span>
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash
for i in {1..5}
do
echo &quot;Welcome $i times&quot;
done</p></div><p>Bash v4.0+ has inbuilt support for setting up a step value using {<span style="color: #993399;">START</span><strong>..</strong><span style="color: #993399;">END</span><strong>..</strong><span style="color: #993399;">INCREMENT</span>} syntax:</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash</span>
<span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Bash version <span style="color: #007800;">${BASH_VERSION}</span>...&quot;</span>
<span style="color: #000000; font-weight: bold;">for</span> i <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #000000;">0</span>..<span style="color: #000000;">10</span>..<span style="color: #000000;">2</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>
  <span style="color: #000000; font-weight: bold;">do</span> 
     <span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Welcome <span style="color: #007800;">$i</span> times&quot;</span>
 <span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash
echo &quot;Bash version ${BASH_VERSION}...&quot;
for i in {0..10..2}
do
echo &quot;Welcome $i times&quot;
done</p></div><p>Sample outputs:</p><pre>Bash version 4.0.33(0)-release...
Welcome 0 times
Welcome 2 times
Welcome 4 times
Welcome 6 times
Welcome 8 times
Welcome 10 times</pre><h3>The seq command (outdated)</h3><div style="padding: 2px 0px 2px 0.5em; background: #fbfbfb; border: 1px solid #aaa; border-left: 10px solid #b22222;"><img style="vertical-align: middle;" title="Warning seq command is not recommended" src="//www.cyberciti.biz/media/images/misc/warning-40px.png" alt="" /><strong>WARNING!</strong> The seq command print a sequence of numbers and it is here due to historical reasons. The following examples is only recommend for older bash version. All users (bash v3.x+) are recommended to use the above syntax.</div><p>The <a href="//www.cyberciti.biz/tips/how-to-generating-print-range-sequence-of-numbers.html">seq command</a> can be used as follows. A representative example in seq is as follows:</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash</span>
<span style="color: #000000; font-weight: bold;">for</span> i <span style="color: #000000; font-weight: bold;">in</span> $<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #c20cb9; font-weight: bold;">seq</span> <span style="color: #000000;">1</span> <span style="color: #000000;">2</span> <span style="color: #000000;">20</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
<span style="color: #000000; font-weight: bold;">do</span>
   <span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Welcome <span style="color: #007800;">$i</span> times&quot;</span>
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash
for i in $(seq 1 2 20)
do
echo &quot;Welcome $i times&quot;
done</p></div><p>There is no good reason to use an external command such as seq to count and increment numbers in the for loop, hence it is recommend that you avoid using seq. The builtin command are fast.</p><h2><span style="color: #3366ff;">Three-expression </span>bash for loops syntax</h2><p>This type of for loop share a common heritage with the C programming language. It is characterized by a three-parameter loop control expression; consisting of an initializer (EXP1), a loop-test or condition (EXP2), and a counting expression (EXP3).</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">for</span> <span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #7a0874; font-weight: bold;">&#40;</span> EXP1; EXP2; EXP3 <span style="color: #7a0874; font-weight: bold;">&#41;</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
<span style="color: #000000; font-weight: bold;">do</span>
	command1
	command2
	command3
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">for (( EXP1; EXP2; EXP3 ))
do
command1
command2
command3
done</p></div><p>A representative three-expression example in bash as follows:</p><pre>#!/bin/bash
for (( c=1; c&lt;=5; c++ ))
do  
   echo "Welcome $c times"
done
</pre><p>Sample output:</p><pre>Welcome 1 times
Welcome 2 times
Welcome 3 times
Welcome 4 times
Welcome 5 times</pre><h2>How do I use for as <span style="color: #808000;">infinite loops</span>?</h2><p>Infinite for loop can be created with empty expressions, such as:</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash</span>
<span style="color: #000000; font-weight: bold;">for</span> <span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #7a0874; font-weight: bold;">&#40;</span> ; ; <span style="color: #7a0874; font-weight: bold;">&#41;</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
<span style="color: #000000; font-weight: bold;">do</span>
   <span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;infinite loops [ hit CTRL+C to stop]&quot;</span>
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash
for (( ; ; ))
do
echo &quot;infinite loops [ hit CTRL+C to stop]&quot;
done</p></div><h2><span style="color: #0000ff;">Conditional exit with break</span></h2><p>You can do early exit with break statement inside the for loop. You can exit from within a FOR, WHILE or UNTIL loop using break. General break statement inside the for loop:</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">for</span> I <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #000000;">1</span> <span style="color: #000000;">2</span> <span style="color: #000000;">3</span> <span style="color: #000000;">4</span> <span style="color: #000000;">5</span>
<span style="color: #000000; font-weight: bold;">do</span>
  statements1      <span style="color: #666666; font-style: italic;">#Executed for all values of ''I'', up to a disaster-condition if any.</span>
  statements2
  <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #7a0874; font-weight: bold;">&#40;</span>disaster-condition<span style="color: #7a0874; font-weight: bold;">&#41;</span>
  <span style="color: #000000; font-weight: bold;">then</span>
	<span style="color: #7a0874; font-weight: bold;">break</span>       	   <span style="color: #666666; font-style: italic;">#Abandon the loop.</span>
  <span style="color: #000000; font-weight: bold;">fi</span>
  statements3          <span style="color: #666666; font-style: italic;">#While good and, no disaster-condition.</span>
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">for I in 1 2 3 4 5
do
statements1 #Executed for all values of ''I'', up to a disaster-condition if any.
statements2
if (disaster-condition)
then
break #Abandon the loop.
fi
statements3 #While good and, no disaster-condition.
done</p></div><p>Following shell script will go though all files stored in /etc directory. The for loop will be abandon when /etc/resolv.conf file found.</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash</span>
<span style="color: #000000; font-weight: bold;">for</span> <span style="color: #c20cb9; font-weight: bold;">file</span> <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #000000; font-weight: bold;">/</span>etc<span style="color: #000000; font-weight: bold;">/*</span>
<span style="color: #000000; font-weight: bold;">do</span>
	<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #7a0874; font-weight: bold;">&#91;</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">${file}</span>&quot;</span> == <span style="color: #ff0000;">&quot;/etc/resolv.conf&quot;</span> <span style="color: #7a0874; font-weight: bold;">&#93;</span>
	<span style="color: #000000; font-weight: bold;">then</span>
		<span style="color: #007800;">countNameservers</span>=$<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #c20cb9; font-weight: bold;">grep</span> <span style="color: #660033;">-c</span> nameserver <span style="color: #000000; font-weight: bold;">/</span>etc<span style="color: #000000; font-weight: bold;">/</span>resolv.conf<span style="color: #7a0874; font-weight: bold;">&#41;</span>
		<span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Total  <span style="color: #007800;">${countNameservers}</span> nameservers defined in <span style="color: #007800;">${file}</span>&quot;</span>
		<span style="color: #7a0874; font-weight: bold;">break</span>
	<span style="color: #000000; font-weight: bold;">fi</span>
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash
for file in /etc/*
do
if [ &quot;${file}&quot; == &quot;/etc/resolv.conf&quot; ]
then
countNameservers=$(grep -c nameserver /etc/resolv.conf)
echo &quot;Total ${countNameservers} nameservers defined in ${file}&quot;
break
fi
done</p></div><h3>Early <span style="color: #3366ff;">continuation with continue</span> statement</h3><p>To resume the next iteration of the enclosing FOR, WHILE or UNTIL loop use continue statement.</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">for</span> I <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #000000;">1</span> <span style="color: #000000;">2</span> <span style="color: #000000;">3</span> <span style="color: #000000;">4</span> <span style="color: #000000;">5</span>
<span style="color: #000000; font-weight: bold;">do</span>
  statements1      <span style="color: #666666; font-style: italic;">#Executed for all values of ''I'', up to a disaster-condition if any.</span>
  statements2
  <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #7a0874; font-weight: bold;">&#40;</span>condition<span style="color: #7a0874; font-weight: bold;">&#41;</span>
  <span style="color: #000000; font-weight: bold;">then</span>
	<span style="color: #7a0874; font-weight: bold;">continue</span>   <span style="color: #666666; font-style: italic;">#Go to next iteration of I in the loop and skip statements3</span>
  <span style="color: #000000; font-weight: bold;">fi</span>
  statements3
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">for I in 1 2 3 4 5
do
statements1 #Executed for all values of ''I'', up to a disaster-condition if any.
statements2
if (condition)
then
continue #Go to next iteration of I in the loop and skip statements3
fi
statements3
done</p></div><p>This script make backup of all file names specified on command line. If .bak file exists, it will skip the cp command.</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash</span>
<span style="color: #007800;">FILES</span>=<span style="color: #ff0000;">&quot;$@&quot;</span>
<span style="color: #000000; font-weight: bold;">for</span> f <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #007800;">$FILES</span>
<span style="color: #000000; font-weight: bold;">do</span>
        <span style="color: #666666; font-style: italic;"># if .bak backup file exists, read next file</span>
	<span style="color: #000000; font-weight: bold;">if</span> <span style="color: #7a0874; font-weight: bold;">&#91;</span> <span style="color: #660033;">-f</span> <span style="color: #800000;">${f}</span>.bak <span style="color: #7a0874; font-weight: bold;">&#93;</span>
	<span style="color: #000000; font-weight: bold;">then</span>
		<span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;Skiping <span style="color: #007800;">$f</span> file...&quot;</span>
		<span style="color: #7a0874; font-weight: bold;">continue</span>  <span style="color: #666666; font-style: italic;"># read next file and skip the cp command</span>
	<span style="color: #000000; font-weight: bold;">fi</span>
        <span style="color: #666666; font-style: italic;"># we are here means no backup file exists, just use cp command to copy file</span>
	<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span><span style="color: #c20cb9; font-weight: bold;">cp</span> <span style="color: #007800;">$f</span> <span style="color: #007800;">$f</span>.bak
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash
FILES=&quot;$@&quot;
for f in $FILES
do
# if .bak backup file exists, read next file
if [ -f ${f}.bak ]
then
echo &quot;Skiping $f file...&quot;
continue # read next file and skip the cp command
fi
# we are here means no backup file exists, just use cp command to copy file
/bin/cp $f $f.bak
done</p></div><h2>Check out related media</h2><p>This tutorial is also available in a quick video format. The video shows some additional and practical examples such as converting all flac music files to mp3 format, all avi files to mp4 video format, unzipping multiple zip files or tar balls, gathering uptime information from multiple Linux/Unix servers, detecting remote web-server using domain names and much more.<br /><center><br /> <iframe width="594" height="334" src="https://www.youtube.com/embed/ocXb3qeg7Es?rel=0" frameborder="0" allowfullscreen></iframe><br /> <small><a href="https://youtu.be/ocXb3qeg7Es">Video 01: 15 Bash For Loop Examples for Linux / Unix / OS X Shell Scripting </a></small><br /></center></p><h4>Conclusion</h4><p>You learned how to use the bash for loop with various example. See the following resources for more info.</p><ul><li>See all sample for loop shell <a href="https://bash.cyberciti.biz/script/for-loop/">script in our</a> bash shell directory</li><li>Bash for loop <a href="https://bash.cyberciti.biz/guide/For_loop">syntax and usage page</a> from the Linux shell scripting wiki</li><li>man bash</li><li>help for</li><li>help {</li><li>help break</li><li>help continue</li></ul><p><div class="share-social"><span class="share-label">Share on </span> <a class="share-link share-facebook" rel="nofollow" rel="noopener" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https://www.cyberciti.biz/faq/bash-for-loop/" title="Share this tutorial/post on Facebook">Facebook</a> <a class="share-link share-twitter" rel="nofollow" rel="noopener" target="_blank" href="https://twitter.com/intent/tweet?text=Bash+For+Loop+Examples&url=https://www.cyberciti.biz/faq/bash-for-loop/&via=nixcraft" title="Tweet this tutorial/page">Twitter</a></div></p><p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" data-cfasync="false"></script> <ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-7825705102693166" data-ad-slot="7939549758"></ins> <script type="1df16c32f4a4f0b9555eba57-text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></p><div class="author-info"><div class="author-avatar"></div><div class="author-description"><h2 class="author-title"><span class="author-heading">Posted by:</span> <span class="vcard author"><span class="fn"> Vivek Gite</span></span></h2><p class="author-bio"> The author is the creator of nixCraft and a seasoned sysadmin, DevOps engineer, and a trainer for the Linux operating system/Unix shell scripting. Get the <strong>latest tutorials on SysAdmin, Linux/Unix and open source topics via <a href="https://www.cyberciti.biz/atom/atom.xml">RSS/XML feed</a></strong> or <a href="https://www.cyberciti.biz/subscribe-to-weekly-linux-unix-newsletter-for-sysadmin/">weekly email newsletter</a>.</p></div></div></div><footer class="entry-footer"></footer></article><aside id="content-bottom-widgets" class="content-bottom-widgets" role="complementary"><div class="widget-area"><section id="text-384338383" class="widget widget_text"><div class="textwidget"><div class="support"><h2 class="support-title">Your support makes a big difference:</h2><p>I have a small favor to ask. More people are reading the nixCraft. Many of you block advertising which is your right, and advertising revenues are not sufficient to cover my operating costs. So you can see why I need to ask for your help. The nixCraft takes a lot of my time and hard work to produce. If everyone who reads nixCraft, who likes it, helps fund it, my future would be more secure. You can donate as little as $1 to support nixCraft:</p><p><a class="social_btn support" href="https://www.patreon.com/nixcraft" target="_blank" rel="noopener noreferrer">Become a Supporter</a> <a class="social_btn support" href="https://www.cyberciti.biz/tips/donate" target="_blank" rel="noopener noreferrer">Make a contribution via Paypal/Bitcoin</a></p></div></div></section></div></aside><div id="comments" class="comments-area"><div class="respond comment-respond"><h3 id="reply-title" class="comment-reply-title"> Start the discussion at <a class="wpdc-discourse-topic-link" target="_blank" href="https://www.nixcraft.com/t/bash-for-loop-examples/1665">www.nixcraft.com</a></h3></div></div><div class="discourse-existing-comments-heading">Historical Comment Archive</div><div id="comments" class="comments-area"><h2 class="comments-title"> <img class="comments-image" src="https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/images/comment.png" title="Comments"> 254 comment</h2><ol class="comment-list"><li id="comment-39102" class="comment even thread-even depth-1"><article id="div-comment-39102" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Jadu Saikia</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-39102"> <time datetime="2008-11-02T15:37:14+00:00"> November 2, 2008 at 3:37 pm </time> </a></div></footer><div class="comment-content"><p>Nice one. All the examples are explained well, thanks Vivek.</p><p>seq 1 2 20<br /> output can also be produced using jot</p><p>jot &#8211; 1 20 2</p><p>The infinite loops as everyone knows have the following alternatives.</p><p>while(true)<br /> or<br /> while :</p><p>//Jadu</p></div></article></li><li id="comment-39113" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-39113" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sean</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-39113"> <time datetime="2008-11-04T02:20:37+00:00"> November 4, 2008 at 2:20 am </time> </a></div></footer><div class="comment-content"><p>The last example can also be produced without the &#8221; in $FILES&#8221;:</p><p>#!/bin/sh</p><p>for f<br /> do</p><p># For-Loop body</p><p>done</p><p>If the &#8221; in &#8230;&#8221; is excluded, the loop will run as if &#8220;in $@&#8221; was given.</p></div></article></li><li id="comment-39200" class="comment even thread-even depth-1"><article id="div-comment-39200" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Andreas</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-39200"> <time datetime="2008-11-13T04:53:59+00:00"> November 13, 2008 at 4:53 am </time> </a></div></footer><div class="comment-content"><p>Nice explanation tutorial.</p></div></article></li><li id="comment-39302" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-39302" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Manish</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-39302"> <time datetime="2008-11-25T06:33:44+00:00"> November 25, 2008 at 6:33 am </time> </a></div></footer><div class="comment-content"><p>hey vivek i tried the following syntax for for loop suggested by u but both dint work&#8230;<br /> 1.<br /> #!/bin/bash<br /> for (( c=1; c&lt;=5; c++ ))<br /> do<br /> echo &#8220;Welcome $c times&#8230;&#8221;<br /> done</p><p>2.<br /> #!/bin/bash<br /> for i in {1..5}<br /> do<br /> echo &#8220;Welcome $i times&#8221;<br /> done</p><p>got error for both the syntax<br /> 1. unexpected &#8216;(&#8216;<br /> 2. it printed welcome {1..5} times instead repeating it&#8230;</p><p>help..?</p></div></article><ol class="children"><li id="comment-48722" class="comment even depth-2"><article id="div-comment-48722" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">balamurugan</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-48722"> <time datetime="2010-08-11T05:24:59+00:00"> August 11, 2010 at 5:24 am </time> </a></div></footer><div class="comment-content"><p>hi manish your both coding are correct&#8230; before execute you must give the execution permission for that file&#8230; so you try following steps&#8230;<br /> 1.goto terminal<br /> 2. vim simple<br /> 3.then write the following code..</p><p>for (( c=1; c&lt;=5; c++ ))<br /> do<br /> echo â€œWelcome $c timesâ€¦â€<br /> done</p><p>4.then save and quit<br /> 5.chmod 744 simple<br /> 6. ./simple</p><p>i hope surely it will help you&#8230;</p></div></article></li><li id="comment-55315" class="comment odd alt depth-2"><article id="div-comment-55315" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Manish Kumar Mishra</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-55315"> <time datetime="2011-02-03T05:16:03+00:00"> February 3, 2011 at 5:16 am </time> </a></div></footer><div class="comment-content"><p>It works properly just check it again..</p></div></article></li><li id="comment-56881" class="comment even depth-2"><article id="div-comment-56881" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dr. Stefan Gruenwald</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56881"> <time datetime="2011-04-01T03:53:24+00:00"> April 1, 2011 at 3:53 am </time> </a></div></footer><div class="comment-content"><p>I can help you on 2. &#8212; You were not using the Bash 3.0 or higher. Upgrade your bash and it will work.</p></div></article></li><li id="comment-59334" class="comment odd alt depth-2 parent"><article id="div-comment-59334" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Niranjan</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59334"> <time datetime="2011-05-10T01:35:17+00:00"> May 10, 2011 at 1:35 am </time> </a></div></footer><div class="comment-content"><p>Hi All,</p><p>I have some &#8216;.gif&#8217; and &#8216;.jpg&#8217; files in a directory named Pictures in my home directory. I need to write bash script that would create 2 separate html files such as page1.html and page2.html one for gif files and the other for jpg files. And when i execute the script i need to have the html files in the Pictures directory and should have the contents as follows:</p><p>filename.jpg<br /> filename.jpg</p><p>filename.gif<br /> filename.gif</p><p>Please help me out. Thanks in advance</p></div></article><ol class="children"><li id="comment-59705" class="comment even depth-3"><article id="div-comment-59705" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">krist0ph3r</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59705"> <time datetime="2011-05-30T14:37:06+00:00"> May 30, 2011 at 2:37 pm </time> </a></div></footer><div class="comment-content"><p>your problem is very easy to solve using the examples on the page.</p><p>in addition to the for loops, you will need to use the echo command, the redirection operator &gt;&gt; and a basic knowledge of html.</p><p>your script should do:</p><p>1. create a html file with the header, opening body tags etc.<br /> 2. have a loop for all jpg files<br /> 2.1 inside the loop, print one line with the html code for an image, using the image&#8217;s filename<br /> 3. close the loop, add closing html tags<br /> 4-6. same as 1-3, but for .gif instead of .jpg</p></div></article></li></ol></li></ol></li><li id="comment-39378" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-39378" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">lascost</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-39378"> <time datetime="2008-12-06T18:15:09+00:00"> December 6, 2008 at 6:15 pm </time> </a></div></footer><div class="comment-content"><p>i tried the last example but i seen dint work</p><div class="wp_syntax" style="position:relative;"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash </span>
&nbsp;
<span style="color: #000000; font-weight: bold;">set</span> <span style="color: #660033;">-x</span>
&nbsp;
<span style="color: #007800;">FILLES</span>=<span style="color: #ff0000;">&quot;$@&quot;</span>
<span style="color: #007800;">CP</span>=$<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #c20cb9; font-weight: bold;">which</span> <span style="color: #c20cb9; font-weight: bold;">cp</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
<span style="color: #000000; font-weight: bold;">for</span> f <span style="color: #000000; font-weight: bold;">in</span> <span style="color: #007800;">$FILES</span>
<span style="color: #000000; font-weight: bold;">do</span>
        <span style="color: #000000; font-weight: bold;">if</span> <span style="color: #7a0874; font-weight: bold;">&#91;</span> <span style="color: #660033;">-f</span> <span style="color: #800000;">${f}</span>.bak <span style="color: #7a0874; font-weight: bold;">&#93;</span>
        <span style="color: #000000; font-weight: bold;">then</span>
                <span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #ff0000;">&quot;skiping <span style="color: #007800;">$f</span> file&quot;</span>
                <span style="color: #7a0874; font-weight: bold;">continue</span> <span style="color: #666666; font-style: italic;"># read netxt file and skip cp command</span>
        <span style="color: #000000; font-weight: bold;">fi</span>
        <span style="color: #007800;">$CP</span> <span style="color: #007800;">$f</span> <span style="color: #007800;">$f</span>.bak
<span style="color: #000000; font-weight: bold;">done</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash set -x FILLES=&quot;$@&quot;
CP=$(which cp)
for f in $FILES
do
if [ -f ${f}.bak ]
then
echo &quot;skiping $f file&quot;
continue # read netxt file and skip cp command
fi
$CP $f $f.bak
done</p></div><p>i would like know where is the error</p></div></article><ol class="children"><li id="comment-725347" class="comment even depth-2"><article id="div-comment-725347" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Johnny Rosenberg</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-725347"> <time datetime="2015-08-06T15:06:48+00:00"> August 6, 2015 at 3:06 pm </time> </a></div></footer><div class="comment-content"><p>Maybe correcting your misspelled variable â€FILLESâ€ would be a step forward?</p></div></article></li></ol></li><li id="comment-39453" class="comment byuser comment-author-administrator bypostauthor odd alt thread-odd thread-alt depth-1"><article id="div-comment-39453" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-39453"> <time datetime="2008-12-13T16:56:44+00:00"> December 13, 2008 at 4:56 pm </time> </a></div></footer><div class="comment-content"><p>Replace</p><pre>FILLES="$@"</pre><p>With</p><pre>FILES="$@"</pre></div></article></li><li id="comment-40028" class="comment even thread-even depth-1"><article id="div-comment-40028" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">lo2y</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-40028"> <time datetime="2009-01-28T10:10:49+00:00"> January 28, 2009 at 10:10 am </time> </a></div></footer><div class="comment-content"><p>hi guys . can any one help me . i need a script to check the file /var/log/messages every 10 minutes .and if its has the following log :<br /> ext3_orphan_cleanup: deleting unreferenced</p><p>to apply the following command<br /> sendsms to wut ever .</p><p>thnx alot</p></div></article></li><li id="comment-40255" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-40255" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">swatkat</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-40255"> <time datetime="2009-02-12T14:06:15+00:00"> February 12, 2009 at 2:06 pm </time> </a></div></footer><div class="comment-content"><p>i would like to breakk a csv file depending upon two criteria.</p><p>1. SIngle file should not be more than 100 lines<br /> 2. The third column if has same value on the 100th line as that of the 101th line, the complete line should be included in the 2nd file.<br /> so., now, 1st file will have 99 lines and 2nd file will have 100 lines, ifthe above 2nd condition does not repeats.,</p></div></article></li><li id="comment-40783" class="comment even thread-even depth-1"><article id="div-comment-40783" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">archana</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-40783"> <time datetime="2009-03-16T23:53:09+00:00"> March 16, 2009 at 11:53 pm </time> </a></div></footer><div class="comment-content"><p>for file in $(ls 0902*0010202.TLG); do<br /> day=$(echo $file | cut -c 1-6)<br /> grep ^203 $file | cut -d, -f3 | sort | uniq -c | while read line; do<br /> cnt=$(echo $line | cut -d&#8221; &#8221; -f1)<br /> acct=$(echo $line | cut -d&#8221; &#8221; -f2)<br /> echo &#8220;Date 20${day} Account ${acct} had ${cnt} 203&#8217;s&#8221; &gt;&gt; Feb_report.txt<br /> done<br /> done</p><p>when i run it it gives me a syntax error<br /> ins@ARTMGA01&gt; ./arc.sh<br /> ./arc.sh: syntax error at line 4: `$&#8217; unexpected</p><p>could you help</p></div></article></li><li id="comment-41264" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-41264" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Navneet</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-41264"> <time datetime="2009-04-20T10:57:55+00:00"> April 20, 2009 at 10:57 am </time> </a></div></footer><div class="comment-content"><p>Good examples!! easily understood</p></div></article></li><li id="comment-41954" class="comment even thread-even depth-1 parent"><article id="div-comment-41954" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">firmit</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-41954"> <time datetime="2009-06-07T17:06:51+00:00"> June 7, 2009 at 5:06 pm </time> </a></div></footer><div class="comment-content"><p>Hi</p><p>How do I read line by line in a file, and use these in a loop? I have a file I read in (cmd max_cpu):<br /> firefox 15<br /> conky 1<br /> cmds=$(cat file)<br /> But $cmds now consist of n items, all being &#8220;equal&#8221; &#8211; it does not split on each line to a new array. I expected that by looping over $cmds, I&#8217;d get a 2D array&#8230;. I did not.</p><p>Otherwise, excellent tutorial!</p></div></article><ol class="children"><li id="comment-41956" class="comment byuser comment-author-administrator bypostauthor odd alt depth-2 parent"><article id="div-comment-41956" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-41956"> <time datetime="2009-06-07T17:56:48+00:00"> June 7, 2009 at 5:56 pm </time> </a></div></footer><div class="comment-content"><p>Try:</p><pre>FILE=/etc/passwd
while read line
do
	# store field 1
	F1=$(echo $line|cut -d$FS -f1)
	# store field 2
	F2=$(echo $line|cut -d$FS -f6)
	# store field
	F3=$(echo $line|cut -d$FS -f7)
	echo "User \"$F1\" home directory is $F2 and login shell is $F3"
done &lt; $FILE
</pre></div></article><ol class="children"><li id="comment-50959" class="comment even depth-3 parent"><article id="div-comment-50959" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Andi Reinbrech</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-50959"> <time datetime="2010-11-18T19:42:39+00:00"> November 18, 2010 at 7:42 pm </time> </a></div></footer><div class="comment-content"><p>I know this is an ancient thread, but thought this trick might be helpful to someone:</p><p>For the above example with all the cuts, simply do</p><p> <code>set `echo $line`</code></p><p>This will split line into positional parameters and you can after the set simply say</p><p> <code>F1=$1; F2=$2; F3=$3</code></p><p>I used this a lot many years ago on solaris with &#8220;set `date`&#8221;, it neatly splits the whole date string into variables and saves lots of messy cutting :-)</p><p>&#8230; no, you can&#8217;t change the FS, if it&#8217;s not space, you can&#8217;t use this method</p></div></article><ol class="children"><li id="comment-67942" class="comment odd alt depth-4"><article id="div-comment-67942" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dana Good</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-67942"> <time datetime="2012-02-13T03:05:42+00:00"> February 13, 2012 at 3:05 am </time> </a></div></footer><div class="comment-content"><p>This *is* helpful &#8211; good knowledge to have. I&#8217;ll go give it a try.</p><p>Thanks!</p></div></article></li></ol></li></ol></li><li id="comment-48830" class="comment even depth-2 parent"><article id="div-comment-48830" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Alvin</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-48830"> <time datetime="2010-08-17T12:09:37+00:00"> August 17, 2010 at 12:09 pm </time> </a></div></footer><div class="comment-content"><p>Hi Vivek,<br /> Please help I was trying to use your code in a script similar issue trying to use a csv file with three columns (loginname,surname,firname) as input for a file that will be executed<br /> fileA<br /> loginN,ssn,ffn<br /> ab1pp1,ab1,pp1<br /> bb1oo1,bb1,oo1<br /> cc1qq1,cc1,qq1</p><p>#file to be changed cmdch.sh<br /> echo &#8220;your login name is $loginn, your surname is $ssn and your firname $ffn&#8221;</p><p>Program<br /> #!/bin/bash</p><p>LINNUM=4<br /> while read LINE;<br /> do<br /> LINNUM=`expr $LINENUM + 1`<br /> done &lt; smallops.csv</p><p>FILE=fileA.csv<br /> while read LINE;<br /> do<br /> #store field 1<br /> F1=$(echo $line|cut -d$FS -f1)<br /> #store field 2<br /> F2=$(echo $line|cut -d$FS -f6)<br /> #store field 3<br /> F3=$(echo $line|cut -d$FS -f7)<br /> sed &#039;{$LINNUM s/lgn/$F1/g; $LINNUM s/ssn/$F2/g; $LINNUM s/ffn/$F3/g; }&#039; -i smallops.csv<br /> done &lt; g.csv</p><p>echo</p></div></article><ol class="children"><li id="comment-48836" class="comment odd alt depth-3 parent"><article id="div-comment-48836" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-48836"> <time datetime="2010-08-17T14:04:08+00:00"> August 17, 2010 at 2:04 pm </time> </a></div></footer><div class="comment-content"><p>@Alvin</p><p>First, this code won&#8217;t work at least because it does not input fileA.csv as intended.</p><p>Second, to debug, try to break down this program, piece by piece.</p><p>For instance, it could read input more easily from fileA.csv this way:<br /> (I have not included your [sed] instruction yet. Go step by step)</p><pre>
# backup current IFS (Internal File Separator)
IFS_backup="${IFS}"

# change IFS to directly read input file into 3 variables a,b,c
IFS=","
while read a b c
do
echo "LOGIN:$a LASTNAME:$b FIRSTNAME:$c"
done &lt; fileA.csv

# restore IFS
IFS=&quot;${IFS_backup}&quot;
</pre><p>Third, try to explain what you would like to do with you [sed] instruction.</p><p>Why do you start your LINENUM at 4?</p><p>What is the content of your smallops.csv? What is it for?</p><p>By the way, your [sed] instruction seems to contain a mispelled search pattern, for first field $F1, should&#8217;nt it be [loginn] instead of [lgn] ?</p><p>You mention only ONE csv file, but your code contains: fileA.csv, smallops.csv, and g.csv ? What are they? Typos ? Errors in your code?</p></div></article><ol class="children"><li id="comment-48837" class="comment even depth-4"><article id="div-comment-48837" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-48837"> <time datetime="2010-08-17T14:05:45+00:00"> August 17, 2010 at 2:05 pm </time> </a></div></footer><div class="comment-content"><p>Sorry, (I forgot a HTML code TAG) Complete code is:</p><pre>
# backup current IFS (Internal File Separator)
IFS_backup="${IFS}"

# change IFS to directly read input file into 3 variables a,b,c
IFS=","
while read a b c
do
echo "LOGIN:$a LASTNAME:$b FIRSTNAME:$c"
done &lt; fileA.csv

# restore IFS
IFS=&quot;${IFS_backup}&quot;
</pre></div></article></li></ol></li></ol></li></ol></li><li id="comment-41959" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-41959" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">firmit</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-41959"> <time datetime="2009-06-07T18:03:13+00:00"> June 7, 2009 at 6:03 pm </time> </a></div></footer><div class="comment-content"><p>Excellent! Thanks Vivek.</p></div></article></li><li id="comment-42569" class="comment even thread-even depth-1"><article id="div-comment-42569" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Peko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-42569"> <time datetime="2009-07-16T18:11:41+00:00"> July 16, 2009 at 6:11 pm </time> </a></div></footer><div class="comment-content"><p>Hi Vivek,<br /> Thanks for this a useful topic.</p><p>IMNSHO, there may be something to modify here<br /> =======================<br /> Latest bash version 3.0+ has inbuilt support for setting up a step value:</p><p>#!/bin/bash<br /> for i in {1..5}<br /> =======================<br /> 1) The increment feature seems to belong to the version 4 of bash.<br /> Reference: <a href="http://bash-hackers.org/wiki/doku.php/syntax/expansion/brace" rel="nofollow">http://bash-hackers.org/wiki/doku.php/syntax/expansion/brace</a><br /> Accordingly, my bash v3.2 does not include this feature.</p><p>BTW, where did you read that it was 3.0+ ?<br /> (I ask because you may know some good website of interest on the subject).</p><p>2) The syntax is {from..to..step} where from, to, step are 3 integers.<br /> You code is missing the increment.</p><p>Note that GNU Bash documentation may be bugged at this time,<br /> because on GNU Bash manual, you will find the syntax {x..y[incr]}<br /> which may be a typo. (missing the second &#8220;..&#8221; between y and increment).</p><p>see <a href="https://www.gnu.org/software/bash/manual/bashref.html#Brace-Expansion" rel="nofollow">http://www.gnu.org/software/bash/manual/bashref.html#Brace-Expansion</a></p><p>The Bash Hackers page<br /> again, see <a href="http://bash-hackers.org/wiki/doku.php/syntax/expansion/brace" rel="nofollow">http://bash-hackers.org/wiki/doku.php/syntax/expansion/brace</a><br /> seeems to be more accurate,<br /> but who knows ? Anyway, at least one of them may be right&#8230; ;-)</p><p>Keep on the good work of your own,<br /> Thanks a million.</p><p>&#8212; Peko</p></div></article></li><li id="comment-42571" class="comment byuser comment-author-administrator bypostauthor odd alt thread-odd thread-alt depth-1"><article id="div-comment-42571" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-42571"> <time datetime="2009-07-16T18:31:33+00:00"> July 16, 2009 at 6:31 pm </time> </a></div></footer><div class="comment-content"><p>@ Peko,</p><p>Thanks for pointing out ranges vs step value. I&#8217;ve updated the FAQ.</p></div></article></li><li id="comment-42574" class="comment even thread-even depth-1"><article id="div-comment-42574" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Peko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-42574"> <time datetime="2009-07-16T20:04:19+00:00"> July 16, 2009 at 8:04 pm </time> </a></div></footer><div class="comment-content"><p>Yes.</p><p>But you mispelled the syntax with an extra dot &#8220;.&#8221; after &#8220;START&#8217;<br /> not {START&#8230;END..INCREMENT}<br /> but {START..END..INCREMENT}</p><p>;-)<br /> &#8212; Peko</p></div></article></li><li id="comment-42668" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-42668" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Michal Kaut</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-42668"> <time datetime="2009-07-22T06:12:06+00:00"> July 22, 2009 at 6:12 am </time> </a></div></footer><div class="comment-content"><p>Hello,</p><p>is there a simple way to control the number formatting? I use several computers, some of which have non-US settings with comma as a decimal point. This means that<br /> <code>for x in $(seq 0 0.1 1)</code> gives 0 0.1 0.2 &#8230; 1 one some machines and 0 0,1 0,2 &#8230; 1 on other.<br /> Is there a way to force the first variant, regardless of the language settings? Can I, for example, set the keyboard to US inside the script? Or perhaps some alternative to <code>$x</code> that would convert commas to points?<br /> (I am sending these as parameters to another code and it won&#8217;t accept numbers with commas&#8230;)</p><p>The best thing I could think of is adding <code>x=`echo $x | sed s/,/./`</code> as a first line inside the loop, but there should be a better solution? (Interestingly, the sed command does not seem to be upset by me rewriting its variable.)</p><p>Thanks,<br /> Michal</p></div></article></li><li id="comment-42669" class="comment even thread-even depth-1"><article id="div-comment-42669" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Peko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-42669"> <time datetime="2009-07-22T07:27:11+00:00"> July 22, 2009 at 7:27 am </time> </a></div></footer><div class="comment-content"><p>To Michal Kaut:</p><p>Hi Michal,</p><p>Such output format is configured through LOCALE settings.</p><p>I tried :</p><p>export LC_CTYPE=&#8221;en_EN.UTF-8&#8243;; seq 0 0.1 1</p><p>and it works as desired.</p><p>You just have to find the exact value for LC_CTYPE that fits to your systems and your needs.</p><p>Peko</p></div></article></li><li id="comment-42674" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-42674" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Peko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-42674"> <time datetime="2009-07-22T14:29:15+00:00"> July 22, 2009 at 2:29 pm </time> </a></div></footer><div class="comment-content"><p>To Michal Kaus [2]</p><p>Ooops &#8211; ;-)<br /> Instead of LC_CTYPE,<br /> LC_NUMERIC should be more appropriate<br /> (Although LC_CTYPE is actually yielding to the same result &#8211; I tested both)</p><p>By the way, Vivek has already documented the matter : <a href="https://www.cyberciti.biz/tips/linux-find-supportable-character-sets.html" rel="nofollow">https://www.cyberciti.biz/tips/linux-find-supportable-character-sets.html</a></p><p>&#8212; Peko</p></div></article></li><li id="comment-42676" class="comment even thread-even depth-1"><article id="div-comment-42676" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">VIKAS</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-42676"> <time datetime="2009-07-22T15:58:51+00:00"> July 22, 2009 at 3:58 pm </time> </a></div></footer><div class="comment-content"><p>Excellent stuff&#8230; keep up the good work.</p></div></article></li><li id="comment-44327" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-44327" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Brad Landis</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44327"> <time datetime="2009-10-26T15:26:10+00:00"> October 26, 2009 at 3:26 pm </time> </a></div></footer><div class="comment-content"><p>Comment 12 was really helpful. I was trying to split up a log file by date, such as<br /> logfile.20091026 , without having to use grep a million times. I&#8217;m kind of disappointed I couldn&#8217;t find a one-liner to do so, but I will take what I can get :).</p></div></article></li><li id="comment-44328" class="comment byuser comment-author-administrator bypostauthor even thread-even depth-1"><article id="div-comment-44328" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44328"> <time datetime="2009-10-26T16:47:27+00:00"> October 26, 2009 at 4:47 pm </time> </a></div></footer><div class="comment-content"><p>@Brad,</p><p>Try this without grep or cut using bash parameter expansion :</p><pre>file="logfile.20091026"
log="${file%%.*}"
date="${file##*.}"
echo $log
echo $date</pre><p>HTH</p></div></article></li><li id="comment-44329" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-44329" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44329"> <time datetime="2009-10-26T16:52:14+00:00"> October 26, 2009 at 4:52 pm </time> </a></div></footer><div class="comment-content"><p>H i vivek,</p><p>Just wondering why you don&#8217;t amend the typo I pointed out:<br /> &lt;&gt;</p></div></article></li><li id="comment-44330" class="comment even thread-even depth-1"><article id="div-comment-44330" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Brad Landis</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44330"> <time datetime="2009-10-26T16:53:11+00:00"> October 26, 2009 at 4:53 pm </time> </a></div></footer><div class="comment-content"><p>I think you misunderstood. I&#8217;m going line by line, and converting the dates at the beginning of the line, such as &#8220;Sep 12&#8221;, and copying that line from logfile to logfile.20090912.</p><p>My script is <em>really</em> slow though, with the conversion of the month name to a number. I&#8217;ve tried using the date command, and my own function, and both take 7 seconds to process 10,000 lines. It doesn&#8217;t seem like a long time, but I&#8217;ve got a lot of log files to process on multiple machines.</p><p>I don&#8217;t guess you&#8217;d know a faster trick, would you?</p></div></article></li><li id="comment-44333" class="comment byuser comment-author-administrator bypostauthor odd alt thread-odd thread-alt depth-1"><article id="div-comment-44333" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44333"> <time datetime="2009-10-26T18:37:10+00:00"> October 26, 2009 at 6:37 pm </time> </a></div></footer><div class="comment-content"><p>@Brad, yes, I did misunderstood your post. If I were you I will try out awk.</p><p>@Philippe,<br /> Thanks for the heads up. The faq has been updated.</p></div></article></li><li id="comment-44377" class="comment even thread-even depth-1"><article id="div-comment-44377" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44377"> <time datetime="2009-10-30T06:13:59+00:00"> October 30, 2009 at 6:13 am </time> </a></div></footer><div class="comment-content"><p>@Peko:</p><p>(I&#8217;m the operator of bash-hackers.org/wiki, that&#8217;s why I found this page):</p><p>Regarding Bash documentation for brace expansion (increment syntax), actually I&#8217;m right and the documentation is wrong (a rare situation!). I reported it to the list.</p></div></article></li><li id="comment-44380" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-44380" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44380"> <time datetime="2009-10-30T08:35:31+00:00"> October 30, 2009 at 8:35 am </time> </a></div></footer><div class="comment-content"><p>To Vivek:<br /> Regarding your last example, that is : running a loop through arguments given to the script on the command line, there is a simplier way of doing this:<br /> # instead of:<br /> # FILES=&#8221;$@&#8221;<br /> # for f in $FILES</p><p># use the following syntax<br /> for arg<br /> do<br /> # whatever you need here &#8211; try : echo &#8220;$arg&#8221;<br /> done</p><p>Of course, you can use any variable name, not only &#8220;arg&#8221;.</p><p>To TheBonsai: Welcome Buddy!<br /> Fine! I am happy to see 2 great FOSS web sites now related !</p></div></article></li><li id="comment-44573" class="comment even thread-even depth-1 parent"><article id="div-comment-44573" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">tdurden</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44573"> <time datetime="2009-11-10T21:32:33+00:00"> November 10, 2009 at 9:32 pm </time> </a></div></footer><div class="comment-content"><p>Command line while loop.. Very handy..</p><p>Say you wanted to rename all the files in a specific dir..<br /> Create a file with the contents you want to rename<br /> (ls -l | awk &#8216;{print $9}&#8217; &gt; asdf or something)</p><p>Contents of asdf:<br /> file1<br /> file2<br /> file3<br /> file4</p><p>cat asdf | while read a ; do mv $a $a.new ; done</p><p>ls -l<br /> asdf file1.new file2.new file3.new file4.new</p><p>I have used this while command for many things from simply renaming files to formatting and labling new SAN luns..</p></div></article><ol class="children"><li id="comment-56882" class="comment odd alt depth-2"><article id="div-comment-56882" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dr. Stefan Gruenwald</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56882"> <time datetime="2011-04-01T04:00:18+00:00"> April 1, 2011 at 4:00 am </time> </a></div></footer><div class="comment-content"><p>There are much easier ways to do this &#8211; also it works only for extensions. How do you change the middle of the file name or a few characters on the left?</p><p>Here is the regular way of what you just did:</p><p>for i in *; do mv $i $i.new; done</p></div></article></li></ol></li><li id="comment-44582" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-44582" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44582"> <time datetime="2009-11-11T07:07:28+00:00"> November 11, 2009 at 7:07 am </time> </a></div></footer><div class="comment-content"><p>There are 2 problems and one optical flaw with your code:</p><p>(1) You should use read -r without any variable name given, to use the default $REPLY (due to a specific behaviour of read, see manpage)<br /> (2) You should quote $a<br /> (3) Useless use af cat :)</p></div></article></li><li id="comment-44585" class="comment odd alt thread-even depth-1"><article id="div-comment-44585" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44585"> <time datetime="2009-11-11T11:25:20+00:00"> November 11, 2009 at 11:25 am </time> </a></div></footer><div class="comment-content"><p>To tdurden:</p><p>Why would&#8217;nt you use</p><p>1) either a [for] loop<br /> for old in * ; do mv ${old} ${old}.new; done</p><p>2) Either the [rename] command ?<br /> excerpt form &#8220;man rename&#8221; :</p><p>RENAME(1) Perl Programmers Reference Guide RENAME(1)</p><p>NAME<br /> rename &#8211; renames multiple files</p><p>SYNOPSIS<br /> rename [ -v ] [ -n ] [ -f ] perlexpr [ files ]</p><p>DESCRIPTION<br /> &#8220;rename&#8221; renames the filenames supplied according to the rule specified<br /> as the first argument. The perlexpr argument is a Perl expression<br /> which is expected to modify the $_ string in Perl for at least some of<br /> the filenames specified. If a given filename is not modified by the<br /> expression, it will not be renamed. If no filenames are given on the<br /> command line, filenames will be read via standard input.</p><p> For example, to rename all files matching &#8220;*.bak&#8221; to strip the<br /> extension, you might say</p><p> rename &#8216;s/\.bak$//&#8217; *.bak</p><p> To translate uppercase names to lower, youâ€™d use</p><p> rename &#8216;y/A-Z/a-z/&#8217; *</p><p>&#8212; Philippe</p></div></article></li><li id="comment-44586" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-44586" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44586"> <time datetime="2009-11-11T11:49:30+00:00"> November 11, 2009 at 11:49 am </time> </a></div></footer><div class="comment-content"><p>Note for rename(1): There exist two major variants on Linux system. One non-Perl originating in the RedHat area, and one Per, originating in the Debian area.</p></div></article></li><li id="comment-44591" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-44591" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sean</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44591"> <time datetime="2009-11-11T14:42:51+00:00"> November 11, 2009 at 2:42 pm </time> </a></div></footer><div class="comment-content"><p>To tdurden:</p><p>I would also replace &#8220;ls -l | awk &#8216;{print $9}'&#8221; with just &#8220;ls&#8221;. Otherwise you&#8217;ll run into issues with files that have spaces in it. As far as using:</p><p>for i in *;<br /> vs<br /> for i in $(ls);</p><p>I personally prefer &#8220;$(ls)&#8221; or &#8220;$(find . )&#8221;. This provides more control over what files I&#8217;m going to be looping through. For instance:</p><p>$(ls -F | grep -v &#8220;\/$&#8221;)<br /> or<br /> $(ls -A)</p></div></article><ol class="children"><li id="comment-74651" class="comment even depth-2"><article id="div-comment-74651" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">A.R.Memon</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-74651"> <time datetime="2012-12-04T09:58:48+00:00"> December 4, 2012 at 9:58 am </time> </a></div></footer><div class="comment-content"><p>#!/bin/bash<br /> echo &#8220;Bash version ${BASH_VERSION}&#8230;&#8221;<br /> for i in {0..10..2}<br /> do<br /> echo &#8220;Welcome to my new script $i times&#8221;<br /> done</p><p>help &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.. :)</p></div></article></li></ol></li><li id="comment-44593" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-44593" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44593"> <time datetime="2009-11-11T15:03:10+00:00"> November 11, 2009 at 3:03 pm </time> </a></div></footer><div class="comment-content"><p>To Sean:<br /> CMIIAW :</p><p>try the following commands:<br /> # touch &#8220;file with spaces in name&#8221;<br /> # for f in *; do echo &#8220;&#8221;;done<br /> &#8230;</p><p>&#8230;</p><p>which shows that there is no need to use [for f in $(ls)] instead of [ for f in *]<br /> Doesn&#8217;t it ?</p><p>&#8212; Philippe</p></div></article></li><li id="comment-44594" class="comment even thread-even depth-1"><article id="div-comment-44594" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44594"> <time datetime="2009-11-11T15:14:20+00:00"> November 11, 2009 at 3:14 pm </time> </a></div></footer><div class="comment-content"><p>Sorry Sean, my last post was truncated,<br /> due to limitations of this form used to post comments. (impossible to use Greater_than and Less_than caracters)</p><p>I meant, use the following:<br /> # touch â€œfile with spaces in nameâ€<br /> # for f in *; do echo â€œ:${f}:â€;done<br /> &#8230;<br /> :file with spaces in name:<br /> &#8230;</p></div></article></li><li id="comment-44602" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-44602" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sean</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44602"> <time datetime="2009-11-11T20:10:34+00:00"> November 11, 2009 at 8:10 pm </time> </a></div></footer><div class="comment-content"><p>Sorry for the confusion, I understand that &#8220;for i in *;&#8221; will not have any issues with spaces. I was referring to the ls -l | awk &#8216;{print $9}&#8217; having issues with spaces. The reason I choose to use $(ls) instead of * is for filtering out unwanted files e.g. $(ls -F | grep -v â€œ\/$â€)</p></div></article></li><li id="comment-44604" class="comment even thread-even depth-1"><article id="div-comment-44604" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44604"> <time datetime="2009-11-11T21:16:36+00:00"> November 11, 2009 at 9:16 pm </time> </a></div></footer><div class="comment-content"><p>To Sean:</p><p>But then, that&#8217;s wrong.<br /> [ for f in $(ls -F|grep -v &#8220;V$&#8221;) ]<br /> won&#8217;t process appropriately spaces in filename.<br /> Check :<br /> # touch â€œfile with spaces in nameâ€<br /> # for f in $(ls -F|grep -v &#8220;V$&#8221;); do echo â€œ:${f}:â€;done<br /> :file:<br /> :with:<br /> :spaces:<br /> :in:<br /> :name:</p></div></article></li><li id="comment-44605" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-44605" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44605"> <time datetime="2009-11-11T21:18:32+00:00"> November 11, 2009 at 9:18 pm </time> </a></div></footer><div class="comment-content"><p>The best tool to filter files and process them<br /> is [find] piped to [xargs] (with zero-ended filenames)</p></div></article></li><li id="comment-44606" class="comment even thread-even depth-1"><article id="div-comment-44606" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44606"> <time datetime="2009-11-11T21:25:54+00:00"> November 11, 2009 at 9:25 pm </time> </a></div></footer><div class="comment-content"><p>To sean:<br /> But if you want to exclude files from globbing,<br /> [bash] has the [extglob] option.</p><p>Let&#8217;s say you want to process every file except files ending by a &#8220;V&#8221;, just type</p><p># for f in !(*V); do echo &#8220;:${f}:&#8221;;done</p></div></article></li><li id="comment-44607" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-44607" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44607"> <time datetime="2009-11-11T21:27:47+00:00"> November 11, 2009 at 9:27 pm </time> </a></div></footer><div class="comment-content"><p>If you set the shell option extglob, Bash understands some more powerful patterns. Here, a is one or more pattern, separated by the pipe-symbol (|).</p><p>?()	Matches zero or one occurrence of the given patterns<br /> *()	Matches zero or more occurrences of the given patterns<br /> +()	Matches one or more occurrences of the given patterns<br /> @()	Matches one of the given patterns<br /> !()	Matches anything except one of the given patterns</p></div></article></li><li id="comment-44608" class="comment even thread-even depth-1"><article id="div-comment-44608" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44608"> <time datetime="2009-11-11T21:28:24+00:00"> November 11, 2009 at 9:28 pm </time> </a></div></footer><div class="comment-content"><p>source: <a href="http://www.bash-hackers.org/wiki/doku.php/syntax/pattern" rel="nofollow">http://www.bash-hackers.org/wiki/doku.php/syntax/pattern</a></p></div></article></li><li id="comment-44615" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-44615" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Narender</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44615"> <time datetime="2009-11-12T06:47:10+00:00"> November 12, 2009 at 6:47 am </time> </a></div></footer><div class="comment-content"><p>I have two files here X.a and y.a Now what i need is i need to substitute CvfdsDisk_sdb/c/d/e in lines of Node CvfsDisk_XXX in the order CvfsDisk_sdb/c/f/g first word of each line of x.a exists. how can i do in shell scripting i can get the first word of each line of X.a using awk /cut but to replace these in y.a i am not getting it &#8230; any help here ?<br /> [Raj]$ cat x.a<br /> CvfsDisk_sdb /dev/sdb # host 0 lun 1 sectors 4840746976 sector_size 512 inquiry [AMCC 9550SX-12M DISK 3.08] serial AMCC ZAJBSXJFF92A9D003C6A<br /> CvfsDisk_sdc /dev/sdc # host 0 lun 0 sectors 3906148319 sector_size 512 inquiry [AMCC 9550SX-12M DISK 3.08] serial AMCC ZAJ8MJKFF92A9D001FEC<br /> CvfsDisk_sdf /dev/sdf # host 0 lun 1 sectors 4840746976 sector_size 512 inquiry [AMCC 9550SX-12M DISK 3.08] serial AMCC ZAJBSXJFF92A9D003C6A<br /> CvfsDisk_sdg /dev/sdg # host 0 lun 0 sectors 3906148319 sector_size 512 inquiry [AMCC 9550SX-12M DISK 3.08] serial AMCC ZAJ8MJKFF92A9D001FEC<br /> [naren@Beas dxall]$ cat y.a</p><p>[StripeGroup Metafiles]<br /> Metadata Yes<br /> Status UP<br /> Read Enabled<br /> Write Enabled<br /> Journal Yes<br /> StripeBreadth 1280K<br /> Node CvfsDisk_sdb 0</p><p>[StripeGroup datafiles1]<br /> Metadata Yes<br /> Status UP<br /> Read Enabled<br /> Write Enabled<br /> StripeBreadth 1024K<br /> Node CvfsDisk_sdc 0</p><p>[StripeGroup datafiles2]<br /> Metadata Yes<br /> Status UP<br /> Read Enabled<br /> Write Enabled<br /> StripeBreadth 1280K<br /> Node CvfsDisk_sdd 0</p><p>[StripeGroup datafiles3]<br /> Metadata Yes<br /> Status UP<br /> Read Enabled<br /> Write Enabled<br /> StripeBreadth 1024K<br /> Node CvfsDisk_sde 0</p></div></article><ol class="children"><li id="comment-44628" class="comment byuser comment-author-administrator bypostauthor even depth-2"><article id="div-comment-44628" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44628"> <time datetime="2009-11-12T13:47:07+00:00"> November 12, 2009 at 1:47 pm </time> </a></div></footer><div class="comment-content"><p>@Narender,</p><p>Your post is offtopic. I suggest you use our shell scripting <a href="http://nixcraft.com/" rel="nofollow">forum</a> for question.</p></div></article></li></ol></li><li id="comment-44631" class="comment odd alt thread-even depth-1"><article id="div-comment-44631" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sean</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44631"> <time datetime="2009-11-12T15:26:30+00:00"> November 12, 2009 at 3:26 pm </time> </a></div></footer><div class="comment-content"><p>To Philippe:</p><p>You are right,</p><p># for i in $(ls)</p><p>will break up files with spaces if IFS isn&#8217;t set to just the newline character. I don&#8217;t believe this is consistent across distributions. So the for loop should have</p><p># export IFS=$&#8217;\n&#8217;</p><p>before it. I also use find in for loops when I want to look through the directory contents, but this isn&#8217;t always desired. Thanks for the info about extglob, I haven&#8217;t done much with extended globbing in bash.</p></div></article></li><li id="comment-44632" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-44632" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-44632"> <time datetime="2009-11-12T15:44:53+00:00"> November 12, 2009 at 3:44 pm </time> </a></div></footer><div class="comment-content"><p>To Sean:<br /> Right, the more sharp a knife is, the easier it can cut your fingers&#8230;</p><p>I mean: There are side-effects to the use of file globbing (like in [ for f in * ] ) , when the globbing expression matches nothing: the globbing expression is not susbtitued.</p><p>Then you might want to consider using [ nullglob ] shell extension,<br /> to prevent this.<br /> see: <a href="http://www.bash-hackers.org/wiki/doku.php/syntax/expansion/globs#customization" rel="nofollow">http://www.bash-hackers.org/wiki/doku.php/syntax/expansion/globs#customization</a></p><p>Devil hides in detail ;-)</p></div></article></li><li id="comment-45023" class="comment odd alt thread-even depth-1"><article id="div-comment-45023" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">The_Catalanish</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45023"> <time datetime="2009-12-04T11:22:22+00:00"> December 4, 2009 at 11:22 am </time> </a></div></footer><div class="comment-content"><p>Response to the tip number 12<br /> At thos script, It&#8217;s missing the followng line<br /> FS=&#8217;:&#8217;<br /> in the variables declaration<br /> (you forgit the delimiter field, for the cut command)<br /> :-P<br /> The_Catalanish</p></div></article></li><li id="comment-45121" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-45121" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Rilif</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45121"> <time datetime="2009-12-10T21:27:35+00:00"> December 10, 2009 at 9:27 pm </time> </a></div></footer><div class="comment-content"><p>#! /usr/bin/ksh<br /> for i in `cat /input`<br /> do<br /> bdf | grep file_system | grep -vE &#8216;^A|B|C&#8217; | awk &#8216;{ print $4}&#8217; | while read output;<br /> do<br /> file_system=$(echo $output | awk &#8216;{ print $1}&#8217; | cut -d&#8217;%&#8217; -f1 )<br /> partition=$(echo $output | awk &#8216;{ print $2 }&#8217; )<br /> if [ $file_system -ge 60 ]; then<br /> echo &#8220;don&#8217;t run the sync $partition ($file_system%) &#8221;<br /> else<br /> rsync $i<br /> fi<br /> done<br /> done<br /> The problem with the logic I&#8217;m having is I do not want the script to exit(as it does now) the loop once the file_system area reaches 60%. I want<br /> it to continue to retest bdf and continue the loop once disk usage drops below 60%.</p><p>Any Ideas?</p></div></article></li><li id="comment-45131" class="comment odd alt thread-even depth-1"><article id="div-comment-45131" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45131"> <time datetime="2009-12-11T12:17:49+00:00"> December 11, 2009 at 12:17 pm </time> </a></div></footer><div class="comment-content"><p>To Rilif:</p><p>1) I assume you use [ bdf ] on UNIX system &#8211; because Linux equivalent is [ df ] &#8211; and I cannot be of help because I cannot test your script on my Linux boxes.</p><p>2) This seems to be a specific programming debugging problem and out of this topic scope &#8211; There may be a better place to post that kind of topic &#8211; A programmer forum for instance.</p><p>Best regards.</p></div></article></li><li id="comment-45150" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-45150" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">dee</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45150"> <time datetime="2009-12-13T10:27:33+00:00"> December 13, 2009 at 10:27 am </time> </a></div></footer><div class="comment-content"><p>do any one know how to write this script in steps?<br /> as so /// ./ test 10 /// The first argument [1] will ex. to create a multiple users, groups, cn, dn, etc for ldap in one or two scripts but from command line. you would just enter file then the number of atrributes to build.<br /> this is a headache for me since i&#8217;m new at this.</p></div></article></li><li id="comment-45151" class="comment odd alt thread-even depth-1"><article id="div-comment-45151" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45151"> <time datetime="2009-12-13T10:54:18+00:00"> December 13, 2009 at 10:54 am </time> </a></div></footer><div class="comment-content"><p>To Dee:</p><p>0) The first part of your first sentence is incomprehensible &#8211; this may be because text that you entered is altered, it may contain HTML-like syntax that is interpreted by this comment form. (By the way, Vivek Gite would be welcomed to tell us how to prevent this. TIA :-) )</p><p>1) LDAP syntax is off-topic.</p><p>2) You&#8217;ll find appropriate resources in LDAP forums/sites &#8211; just find out.</p><p>3) We may be in position to help you to build a [for] loop, assuming you do your part of the job by providing the basic LDPA instructions to create user, for instance. Try to create at least a LDAP<br /> object by yourself on the command-line, then provide us the code, and as much as possible further explanation please.</p></div></article></li><li id="comment-45152" class="comment byuser comment-author-administrator bypostauthor even thread-odd thread-alt depth-1"><article id="div-comment-45152" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45152"> <time datetime="2009-12-13T10:58:25+00:00"> December 13, 2009 at 10:58 am </time> </a></div></footer><div class="comment-content"><p>There was no html tag or anything else in comment.</p><p>@dee, if you need to attach code use &lt;pre&gt; tags.</p></div></article></li><li id="comment-45153" class="comment odd alt thread-even depth-1"><article id="div-comment-45153" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45153"> <time datetime="2009-12-13T11:44:01+00:00"> December 13, 2009 at 11:44 am </time> </a></div></footer><div class="comment-content"><p>Thanks Vivek &#8211; But I am afraid I do not get it right &#8211; what does &#8220;pre&#8221; mean ? (I understand you wrote the &#8220;less than&#8221; tag, and &#8220;greater than&#8221; tag &#8211; but why &#8220;pre&#8221; ?</p><p>And are you sure these are the only ones two use ?</p></div></article></li><li id="comment-45154" class="comment byuser comment-author-administrator bypostauthor even thread-odd thread-alt depth-1"><article id="div-comment-45154" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45154"> <time datetime="2009-12-13T13:26:54+00:00"> December 13, 2009 at 1:26 pm </time> </a></div></footer><div class="comment-content"><p>@Philippe,</p><p>All allowed html tags are displayed below the form itself. It is wordpress that converts those symbol and syntax is</p><pre>&lt;pre&gt;#!/bin/bash
echo "Hello world!"
&lt;/pre&gt;</pre><p>HTH</p></div></article></li><li id="comment-45155" class="comment odd alt thread-even depth-1"><article id="div-comment-45155" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">dee</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45155"> <time datetime="2009-12-13T13:41:30+00:00"> December 13, 2009 at 1:41 pm </time> </a></div></footer><div class="comment-content"><p>first file make: create_user_idif.sh.txt</p><pre>#!/bin/bash
echo "dn: $2 $3,o=dmacc,dc=bad1dee,dc=com" &gt; $1
echo "changetype: add" &gt;&gt; $1
echo "objectclass: top" &gt;&gt; $1
echo "objectclass: person" &gt;&gt; $1
echo "objectclass: organizationalPerson" &gt;&gt; $1
echo "objectclass: inetOrgPerson" &gt;&gt; $1
echo "cn: $2 $3" &gt;&gt; $1
echo "givenName: $2" &gt;&gt; $1
echo "sn: $3" &gt;&gt; $1
echo "uid: ${2:0:1}$3" &gt;&gt; $1
echo "mail: $4" &gt;&gt; $1
___________________________________
mass_user.txt 
Scott,brown,sbrown@bad4dee.com\n
karla,smith,ssmith@bad4dee.com\n
sam,goodie,sgoodie@bad4dee.com\n
marge,jones,mjones@bad4dee.com
____________________________________
mass_add.sh.txt 
#!/bin/bash

u1=`cat $1 | tr -d '\n'`
#u2=`echo $u1 | tr \| '\n'`
u2=`echo $u1 | sed s/\|/\\n/`

echo "DBG"
echo -e $u1
echo "DBG"

echo -e $u1 | ( IFS=, ; while read fname lname mail;
do
echo -e "Creating $fname $lname\n\n"</pre><p>./create_user_ldif.sh.txt ./user.ldif $fname $lname $mail</p><pre>cat ./user.ldif
echo -e "\n\n"
done )</pre><p>_____________________________________<br /> ./mass_add.sh.txt mass_user.txt<br /> This ex: will pull from a list but same out come i do not know how to write another script to pull the attributes i need from the command line like ./test 100 and that command will pull only a 100 users id&#8217;s from idif.txt out of 1000 generated.</p><p>This next samples of code will file in the attributes for you.<br /> first file make: create_user_idif.sh.txt</p><pre>#!/bin/bash
echo "dn: $2 $3,o=dmacc,dc=bad1dee,dc=com" &gt; $1
echo "changetype: add" &gt;&gt; $1
echo "objectclass: top" &gt;&gt; $1
echo "objectclass: person" &gt;&gt; $1
echo "objectclass: organizationalPerson" &gt;&gt; $1
echo "objectclass: inetOrgPerson" &gt;&gt; $1
echo "cn: $2 $3" &gt;&gt; $1
echo "givenName: $2" &gt;&gt; $1
echo "sn: $3" &gt;&gt; $1
echo "uid: ${2:0:1}$3" &gt;&gt; $1
echo "mail: $4" &gt;&gt; $1</pre><p>____________________________________________________________<br /> Then:</p><p>mass_add.sh.txt</p><pre>#!/bin/bash

u1=`cat $1 | tr -d '\n'`
#u2=`echo $u1 | tr \| '\n'`
u2=`echo $u1 | sed s/\|/\\n/`

echo "DBG"
echo -e $u1
echo "DBG"

echo -e $u1 | ( IFS=, ; while read fname lname mail;
do
echo -e "Creating $fname $lname\n\n"
./create_user_ldif.sh.txt ./user.ldif $fname $lname $mail
cat ./user.ldif
echo -e "\n\n"
done )</pre><p>_____________________________________________________________________<br /> last:<br /> adduserfile1.txt</p><pre>user0,boo,us1@bad1dee.com\n                                      
user1,boo,us1@bad1dee.com\n                                      
user2,boo,us1@bad1dee.com\n                                      
user3,boo,us1@bad1dee.com\n                                      
user4,boo,us1@bad1dee.com\n                                      
user5,boo,us1@bad1dee.com\n                                      
./mass_add.sh.txt adduserfile1.txt</pre><p>This is what i&#8217;m working on now ? i still do not know how to tie in C++ or bash script this code to work with command line, so i can control the out come of created users.</p><pre>#!/bin/bash
Set objRootDSE = GetObject("LDAP://rootDSE")

Set objContainer = GetObject("LDAP://cn=Users," &amp; _
    objRootDSE.Get("defaultNamingContext"))

For i = 1 To 1000
    Set objLeaf = objContainer.Create("User", "cn=UserNo" &amp; i)
    objLeaf.Put "sAMAccountName", "UserNo" &amp; i
    objLeaf.SetInfo
Next

WScript.Echo "1000 Users created."
example: [root]#./test 10
usid:UserNo1 gid:manager cn:Bob dn:bHarison
UserNo2
UserNo3
^^^^^^^
UserNo10      </pre><p> This script makes a 1000 users. However i can not control the out come. For example: from the command line I would like it to stop at 100 users by typing in ./test 100. Using agrv [1]. so when I type a number after the file name it will create a list and print that record to the screen. I do not know bash that well as C++ and it is not helping because the char.. are diff&#8230;</p><p>Edited by admin. Reason: <em>This is not a forum, this is a blog. If you need further help please try our forum @nixcraft.com. </em></p></div></article></li><li id="comment-45160" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-45160" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45160"> <time datetime="2009-12-13T14:51:59+00:00"> December 13, 2009 at 2:51 pm </time> </a></div></footer><div class="comment-content"><p>To Dee:<br /> 1) Man, with a 3-users-sample instead of hundreds, we would have figured out, don&#8217;t you think so?</p><p>2) Well that&#8217;s a start. May be Vivek would like to wipe this post out, and create a new topic: &#8220;Of mice, LDAP and loops&#8221; ;-) ???</p></div></article></li><li id="comment-45560" class="comment odd alt thread-even depth-1"><article id="div-comment-45560" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dominic</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45560"> <time datetime="2010-01-14T10:04:21+00:00"> January 14, 2010 at 10:04 am </time> </a></div></footer><div class="comment-content"><p>There is an interesting difference between the exit value for two different for looping structures (hope this comes out right):<br /> <code>for (( c=1; c&lt;=2; c++ )) do echo -n &quot;inside (( )) loop c is $c, &quot;; done; echo &quot;done (( )) loop c is $c&quot;<br /> for c in {1..2}; do echo -n &quot;inside { } loop c is $c, &quot;; done; echo &quot;done { } loop c is $c&quot;</code><br /> You see that the first structure does a final increment of c, the second does not. The first is more useful IMO because if you have a conditional break in the for loop, then you can subsequently test the value of $c to see if the for loop was broken or not; with the second structure you can&#8217;t know whether the loop was broken on the last iteration or continued to completion.</p></div></article></li><li id="comment-45561" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-45561" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dominic</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-45561"> <time datetime="2010-01-14T10:09:45+00:00"> January 14, 2010 at 10:09 am </time> </a></div></footer><div class="comment-content"><p>sorry, my previous post would have been clearer if I had shown the output of my code snippet, which is:<br /> <code>inside (( )) loop c is 1, inside (( )) loop c is 2, done (( )) loop c is 3<br /> inside { } loop c is 1, inside { } loop c is 2, done { } loop c is 2</code></p></div></article></li><li id="comment-46292" class="comment odd alt thread-even depth-1"><article id="div-comment-46292" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dmitry</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46292"> <time datetime="2010-03-08T17:47:43+00:00"> March 8, 2010 at 5:47 pm </time> </a></div></footer><div class="comment-content"><p>What if I would like to put everything into one line?</p></div></article></li><li id="comment-46297" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46297" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dominic</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46297"> <time datetime="2010-03-09T05:29:53+00:00"> March 9, 2010 at 5:29 am </time> </a></div></footer><div class="comment-content"><p>Dmitry, please give a little more detail about what you are trying to achieve. You can see from my examples above that there is no problem to put a simple loop on one line. Basically you use semicolons (;) instead of line breaks.</p></div></article></li><li id="comment-46303" class="comment odd alt thread-even depth-1"><article id="div-comment-46303" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dmitry</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46303"> <time datetime="2010-03-09T13:56:20+00:00"> March 9, 2010 at 1:56 pm </time> </a></div></footer><div class="comment-content"><p>Dominic,<br /> thaks a lot for your quick answer. You have answered on my question but I&#8217;m still having problems. Please take a look at this.<br /> dmitry@elastix-laptop:~/projects_cg/match_delays/source$ for i in $(seq 1 2 20)<br /> &gt; do<br /> &gt; echo &#8220;Welcome $i times&#8221;<br /> &gt; done<br /> Welcome 1 times<br /> Welcome 3 times<br /> Welcome 5 times<br /> Welcome 7 times<br /> Welcome 9 times<br /> Welcome 11 times<br /> Welcome 13 times<br /> Welcome 15 times<br /> Welcome 17 times<br /> Welcome 19 times<br /> dmitry@elastix-laptop:~/projects_cg/match_delays/source$ for i in $(seq 1 2 20); do; echo &#8220;Welcome $i times&#8221; ; done<br /> bash: syntax error near unexpected token `;&#8217;<br /> dmitry@elastix-laptop:~/projects_cg/match_delays/source$<br /> What am I missing here?</p></div></article></li><li id="comment-46304" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46304" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46304"> <time datetime="2010-03-09T14:05:24+00:00"> March 9, 2010 at 2:05 pm </time> </a></div></footer><div class="comment-content"><p>@Dmitry<br /> You are missing : Reading The Fantastic Manual. :-)<br /> <code><br /> man bash<br /> ...<br /> for name [ in word ] ; do list ; done<br /> ...<br /> for (( expr1 ; expr2 ; expr3 )) ; do list ; done<br /> ...<br /> </code></p><p>There should not be any &#8220;;&#8221; following the [do].<br /> <code><br /> for i in $(seq 1 2 20); do echo "Welcome $i times" ; done<br /> </code></p><p>Good ol&#8217; one: &#8220;When any thing goes wrong &#8211; (re) Read the manual&#8221;</p></div></article></li><li id="comment-46306" class="comment odd alt thread-even depth-1"><article id="div-comment-46306" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46306"> <time datetime="2010-03-09T14:34:53+00:00"> March 9, 2010 at 2:34 pm </time> </a></div></footer><div class="comment-content"><p>@Dmitry</p><p>And, again, as stated many times up there, using [seq] is counter productive, because it requires a call to an external program, when you should Keep It Short and Simple, using only bash internals functions:</p><p><code><br /> for ((c=1; c&lt;21; c+=2)); do echo &quot;Welcome $c times&quot; ; done<br /> </code></p><p>(and I wonder why Vivek is sticking to that old solution which should be presented only for historical reasons when there was no way of using bash internals.<br /> By the way, this historical recall should be placed only at topic end, and not on top of the topic, which makes newbies sticking to the not-up-to-date technique ;-) )</p></div></article></li><li id="comment-46307" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46307" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dmitry</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46307"> <time datetime="2010-03-09T14:49:58+00:00"> March 9, 2010 at 2:49 pm </time> </a></div></footer><div class="comment-content"><p>Philippe, thank you, all works perfect know.<br /> Here is the partial excuse that I was reading this thread instead of bash manual<br /> <a href="https://www.google.es/search?q=bash+for+loop&#038;ie=utf-8&#038;oe=utf-8&#038;aq=t&#038;rls=com.ubuntu:en-US:official&#038;client=firefox-a" rel="nofollow">http://www.google.es/search?q=bash+for+loop&#038;ie=utf-8&#038;oe=utf-8&#038;aq=t&#038;rls=com.ubuntu:en-US:official&#038;client=firefox-a</a></p></div></article></li><li id="comment-46308" class="comment odd alt thread-even depth-1"><article id="div-comment-46308" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dominic</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46308"> <time datetime="2010-03-09T15:23:24+00:00"> March 9, 2010 at 3:23 pm </time> </a></div></footer><div class="comment-content"><p>It is strangethat a do/done loop works if there is CR (end of line) after the do, but not if there is a semi-colon. I can see why this was confusing for you Dmitry, because it&#8217;s not logical. My guess is that the acceptance of CR after do was added because people wanted to lay out code this way, but the bash coders forgot to allow the semicolon alternative. As Philippe points out, if you follow the manual strictly, it works fine.</p></div></article></li><li id="comment-46309" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46309" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dmitry</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46309"> <time datetime="2010-03-09T15:27:44+00:00"> March 9, 2010 at 3:27 pm </time> </a></div></footer><div class="comment-content"><p>Ok. Thank you again!</p></div></article></li><li id="comment-46312" class="comment byuser comment-author-administrator bypostauthor odd alt thread-even depth-1"><article id="div-comment-46312" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46312"> <time datetime="2010-03-09T17:30:32+00:00"> March 9, 2010 at 5:30 pm </time> </a></div></footer><div class="comment-content"><p>@Philippe,</p><p>I&#8217;ve just updated the faq and also deleted large data sample posted by dee user.</p></div></article></li><li id="comment-46314" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46314" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46314"> <time datetime="2010-03-09T17:55:26+00:00"> March 9, 2010 at 5:55 pm </time> </a></div></footer><div class="comment-content"><p>@ Dominic</p><p>Yes, it&#8217;s not quite intuitive, right. What you mean is the semicolon or the newline as list separator (list as the grammar construct defined in the manual, respectively by ISO9945). After a `do&#8217;, a list is expected, but a list isn&#8217;t <b>introduced</b> with a list separator. After a `do&#8217;, the shell awaits more input, just like after an opening quote character. In interactive mode, it also displays the continuation prompt `PS2&#8242; instead of `PS1&#8242; (it would display `PS1&#8242; for list continuation).</p><p>It&#8217;s not right that the Bash coders &#8220;forgot&#8221; it. Inspecting the grammar rules of POSIX XCU Sec. 2.10.2 doesn&#8217;t show a special rule here (it would have to be a special exceptional rule that extra allows a semicolon here).</p></div></article></li><li id="comment-46316" class="comment odd alt thread-even depth-1"><article id="div-comment-46316" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46316"> <time datetime="2010-03-09T18:06:01+00:00"> March 9, 2010 at 6:06 pm </time> </a></div></footer><div class="comment-content"><p>Me again.</p><p>From all Bourne-like shells I just &#8220;tested&#8221;, only ZSH seems to support a semicolon as a start of a list (also in the case after the `do&#8217;). This is nice, but that&#8217;s all. It&#8217;s not a bug to not do so.</p></div></article></li><li id="comment-46317" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46317" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dominic</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46317"> <time datetime="2010-03-09T18:54:10+00:00"> March 9, 2010 at 6:54 pm </time> </a></div></footer><div class="comment-content"><p>@ TheBonsai</p><p>Interesting. I accept that it is not a bug, but I still think it is confusing. It seems logical to us lesser mortals that in bash semicolon=newline, and in other situations I think this is true, but not here.<br /> <code># this works<br /> for (( c=1; c&lt;=2; c++ )) do</p><p>#any number of blank lines or even comments</p><p>echo $c; done<br /> # so does this:<br /> for (( c=1; c&lt;=2; c++ )) do echo $c; done<br /> # but this, where we substitute a semi-colon for the blank line(s) above, doesn&#039;t:<br /> for (( c=1; c&lt;=2; c++ )) do; echo $c; done</code></p></div></article></li><li id="comment-46319" class="comment odd alt thread-even depth-1"><article id="div-comment-46319" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46319"> <time datetime="2010-03-09T23:10:16+00:00"> March 9, 2010 at 11:10 pm </time> </a></div></footer><div class="comment-content"><p>@Dominic<br /> You are missing the point.</p><p>If you read our Unix pioneers, you will remember:</p><p>&#8211; Rule of Optimization: Prototype before polishing. Get it working before you optimize it. [E. Raymond]<br /> see <a href="https://en.wikipedia.org/wiki/Unix_philosophy" rel="nofollow">http://en.wikipedia.org/wiki/Unix_philosophy</a></p><p>What&#8217;s the point of spending hours to code on one line?<br /> &#8211; First, It does not give any optimization, it does not save any execution time. Your code will only be more difficult to read, check, debug.</p><p>Defensive programming rules include this: Write one instruction per line.</p><p>&#8211; Second, You still wanna code all on one line ?<br /> Big deal. The manual gave you the right way.<br /> So stick to it, or leave it, and skip to the next real problem, instead of wasting time and energy pointlessly, my dear Linux enthusiast.</p></div></article></li><li id="comment-46320" class="comment even thread-odd thread-alt depth-1 parent"><article id="div-comment-46320" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sean</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46320"> <time datetime="2010-03-09T23:15:49+00:00"> March 9, 2010 at 11:15 pm </time> </a></div></footer><div class="comment-content"><p>I have a comment to add about using the builtin <b>for (( &#8230; ))</b> syntax. I would agree the builtin method is cleaner, but from what I&#8217;ve noticed with other builtin functionality, I had to check the speed advantage for myself. I wrote the following files:</p><p>builtin_count.sh:<br /> <code><br /> #!/bin/bash<br /> for ((i=1;i&lt;=1000000;i++))<br /> do<br /> echo &quot;Output $i&quot;<br /> done<br /> </code></p><p>seq_count.sh:<br /> <code><br /> #!/bin/bash<br /> for i in $(seq 1 1000000)<br /> do<br /> echo "Output $i"<br /> done<br /> </code></p><p>And here were the results that I got:<br /> time ./builtin_count.sh<br /> real 0m22.122s<br /> user 0m18.329s<br /> sys 0m3.166s</p><p>time ./seq_count.sh<br /> real 0m19.590s<br /> user 0m15.326s<br /> sys 0m2.503s</p><p>The performance increase isn&#8217;t too significant, especially when you are probably going to be doing something a little more interesting inside of the for loop, but it does show that builtin commands are not necessarily faster.</p></div></article><ol class="children"><li id="comment-50962" class="comment odd alt depth-2 parent"><article id="div-comment-50962" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Andi Reinbrech</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-50962"> <time datetime="2010-11-18T20:35:53+00:00"> November 18, 2010 at 8:35 pm </time> </a></div></footer><div class="comment-content"><p>The reason why the external seq is faster, is because it is executed only once, and returns a huge splurb of space separated integers which need no further processing, apart from the for loop advancing to the next one for the variable substitution.</p><p>The internal loop is a nice and clean/readable construct, but it has a lot of overhead. The check expression is re-evaluated on every iteration, and a variable on the interpreter&#8217;s heap gets incremented, possibly checked for overflow etc. etc.</p><p>Note that the check expression cannot be simplified or internally optimised by the interpreter because the value may change inside the loop&#8217;s body (yes, there are cases where you&#8217;d want to do this, however rare and stupid they may seem), hence the variables are volatile and get re-evaluted.</p><p>I.e. botom line, the internal one has more overhead, the &#8220;seq&#8221; version is equivalent to either having 1000000 integers inside the script (hard coded), or reading once from a text file with 1000000 integers with a cat. Point being that it gets executed only once and becomes static.</p><p>OK, blah blah fishpaste, past my bed time :-)</p><p>Cheers,<br /> Andi</p></div></article><ol class="children"><li id="comment-50966" class="comment even depth-3"><article id="div-comment-50966" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-50966"> <time datetime="2010-11-18T21:06:37+00:00"> November 18, 2010 at 9:06 pm </time> </a></div></footer><div class="comment-content"><p>@Andi</p><p>&gt; OK, blah blah fishpaste, past my bed time :-)</p><p>Interesting comments anyway!</p></div></article></li></ol></li></ol></li><li id="comment-46330" class="comment odd alt thread-even depth-1"><article id="div-comment-46330" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46330"> <time datetime="2010-03-10T09:13:36+00:00"> March 10, 2010 at 9:13 am </time> </a></div></footer><div class="comment-content"><p>@Sean<br /> 1) Again, when your only programming concern that last will be the optimization of your loops, you could invest time into such timings.<br /> This would be when there are no other bugs in your code, which I wish you to enjoy ASAP.</p><p>2) But then you may find that the real problem/bottleneck is not a for loop.<br /> As Rob Pike said : &#8220;Measure. Do not tune for speed until your performance analysis tool tells you which part of the code overwhelms the rest.&#8221; [ <a href="https://en.wikipedia.org/wiki/Unix_philosophy#Pike:_Notes_on_Programming_in_C" rel="nofollow">http://en.wikipedia.org/wiki/Unix_philosophy#Pike:_Notes_on_Programming_in_C</a> ]</p><p>3) I agree with you when you say that your code is not relevant as a timing of real-sized programs.</p><p>4) Relating to your benchmark &#8220;builtin vs. external&#8221; commands<br /> test the builtin [ for i in {1..1000000} ]<br /> and you will see that it is very close to [for i in $(seq 1 1000000)]</p></div></article></li><li id="comment-46334" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46334" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">2012 Doom Day</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46334"> <time datetime="2010-03-10T19:01:04+00:00"> March 10, 2010 at 7:01 pm </time> </a></div></footer><div class="comment-content"><blockquote><p>You are missing : Reading The Fantastic Manual. :-)</p></blockquote><p>A.. uh.. ?<br /> The lack of examples in the bash man page is the main reason to *avoid* man page. Everyone, knowns how to use them. Syntax is all good, only if you know the bash and UNIX in and out. This is the main reason why most people purchase bash and shell scripting books from O&#8217;reilly or Amazon. Rest of freeloaders depends upon Google and site like this to get information quickly. man pages are for gurus; for all new user examples are the best way to get started.</p></div></article></li><li id="comment-46336" class="comment odd alt thread-even depth-1"><article id="div-comment-46336" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46336"> <time datetime="2010-03-10T21:31:50+00:00"> March 10, 2010 at 9:31 pm </time> </a></div></footer><div class="comment-content"><p>@ 2012DD<br /> I agree &#8211; I use any of resource I need, man page, &#8211;help page, info page, web pages, books.<br /> The thing is: you should try to read man page once.<br /> And actually, if he did, he would have find the syntax.<br /> Vivek&#8217;s web site and contributions do not prevent you of reading the &#8220;fantastic&#8221; manual.</p><p>And, as usual, the ones that issue the bitter critics will not move a finger to enhance the manual.</p><p>You say man page lacks good examples?<br /> Did you ever try to contribute to any man pages ?<br /> Hope you did.</p></div></article></li><li id="comment-46347" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46347" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46347"> <time datetime="2010-03-11T11:30:34+00:00"> March 11, 2010 at 11:30 am </time> </a></div></footer><div class="comment-content"><p>The Bash manual page isn&#8217;t meant as tutorial. It&#8217;s a syntax, grammar and behaviour reference. However, it contains the knowledge to explain why a for loop using `seq&#8217;, one using brace expansion and one using builtin arithmetics have the performance relations they actually show when you execute them. The point is to make a relation between abstract descriptions and real execution behaviour. If such things really count, however, I suspect you code in the wrong language.</p></div></article></li><li id="comment-46406" class="comment odd alt thread-even depth-1"><article id="div-comment-46406" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46406"> <time datetime="2010-03-13T21:50:55+00:00"> March 13, 2010 at 9:50 pm </time> </a></div></footer><div class="comment-content"><p>@Bonsai<br /> &gt; The Bash manual page isnâ€™t meant as tutorial. Itâ€™s a syntax, grammar and behaviour reference.</p><p>Actually, no. A man page can/should contain a EXAMPLE section.<br /> check : <a href="https://en.wikipedia.org/wiki/Man_page#Layout" rel="nofollow">http://en.wikipedia.org/wiki/Man_page#Layout</a></p><p>I am pretty happy when the Example section is relevant. And when you want some more, nothing prevents you to try to add new examples&#8230; Let&#8217;s contribute!</p></div></article></li><li id="comment-46407" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46407" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46407"> <time datetime="2010-03-14T00:34:46+00:00"> March 14, 2010 at 12:34 am </time> </a></div></footer><div class="comment-content"><p>@Philippe</p><p>How many examples would you place there, to show the &#8220;common usage of Bash&#8221;? I agree that manpages usually should contain examples, but I think this would be too much. Huge manpages (huge because they describe a huge set of functionality) contain very small/no examples.</p></div></article></li><li id="comment-46410" class="comment odd alt thread-even depth-1"><article id="div-comment-46410" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">2012 Doom Day</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46410"> <time datetime="2010-03-14T05:39:19+00:00"> March 14, 2010 at 5:39 am </time> </a></div></footer><div class="comment-content"><p>@Philippe,</p><p>I am learning Bash scripting and that is why I&#8217;m here and its wiki. Take a look at Solaris UNIX man page, most of them have good set of examples. Another candidate is FreeBSD, they also have good set of examples. Just discovered that our HP-UX came with printed &#8220;Posix Born Shell Scripting Manual&#8221;.</p><p>&gt;Did you ever try to contribute to any man pages ?</p><p>No, I&#8217;m learning and if I *contribute* anything, I&#8217;m dam sure most shell scripting gurus will eat me alive, as I&#8217;m not experienced coder. Once I tried to help someone on comp.unix.shell and most of other people on list were so mean to my code that I almost stopped visiting comp.unix.shell. *Beep* those bastards!</p><p><em>Edited by admin</em></p></div></article></li><li id="comment-46500" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46500" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46500"> <time datetime="2010-03-19T05:21:22+00:00"> March 19, 2010 at 5:21 am </time> </a></div></footer><div class="comment-content"><p>@2012 Doom Day</p><p>Contribution is more than just knowing code. Alone the fact that you write here is a contribution (to the community). Translations, documentation, searching bugs, helping others, sharing expiriences, &#8230;</p></div></article></li><li id="comment-46503" class="comment odd alt thread-even depth-1"><article id="div-comment-46503" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46503"> <time datetime="2010-03-19T08:35:37+00:00"> March 19, 2010 at 8:35 am </time> </a></div></footer><div class="comment-content"><p>Quite right, Bonsai,<br /> and you can contribute to Wikibooks, Wikipedia, and Vivek&#8217;s Wiki using the books you own and all you have learnt, no one will ever prevent you of doing so, assuming you improve the content. Don&#8217;t be shy and be confident on your capacities.<br /> See, I wrote loads of questionable comments and Vivek has not banned me [yet] ;-).</p></div></article></li><li id="comment-46713" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-46713" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Chris Cheltenham</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46713"> <time datetime="2010-04-02T19:33:58+00:00"> April 2, 2010 at 7:33 pm </time> </a></div></footer><div class="comment-content"><p>Do you know why this doesn&#8217;t output anything?</p><p>#!/bin/bash<br /> for i in $(cat /$HOME/client_list.txt)<br /> do<br /> echo $i &gt; /home/$i_file.log<br /> done</p></div></article></li><li id="comment-46714" class="comment odd alt thread-even depth-1"><article id="div-comment-46714" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-46714"> <time datetime="2010-04-02T20:47:05+00:00"> April 2, 2010 at 8:47 pm </time> </a></div></footer><div class="comment-content"><p>@Chris C</p><p>If you want a good explanation, first try to ask a good question and explain:<br /> 1a) What you want to do with this program<br /> 1b) what your program is supposed to do.</p><p>Second:<br /> Mainly, it will fail because there will not be variable expansion $i_file.log should be ${i}_file.log<br /> Read again about variable expansion.</p><p>And:<br /> 2a) in your &#8221; cat &#8220;, there should not be a leading slash before $HOME (because $HOME contains a leading slash) &#8211; anyway this wont prevent it from working &#8211; but may come to bugs someday.</p><p>2c) if a line in client_list.txt does contains spaces, what do you think this would do? Use quotes.</p><p>2d) If it still fails, check your permissions to create and overwrite a file in &#8220;/home&#8221; directory</p><p>2e) As said many times, you do not need to use &#8221; for + cat &#8221; to use the content of a file. Just use a while loop :<br /> <code><br /> while read i<br /> echo ${i}<br /> done &lt; $HOME/client_list.txt<br /> </code></p></div></article></li><li id="comment-47254" class="comment even thread-odd thread-alt depth-1 parent"><article id="div-comment-47254" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Moihan</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47254"> <time datetime="2010-05-09T11:36:36+00:00"> May 9, 2010 at 11:36 am </time> </a></div></footer><div class="comment-content"><p>Sir,<br /> This is a new post. From a file in unix server with a column of temperature, I want to extract a number if it goes greater than 100. Normally it will be in 60 &#8211; 80 range. Can u suggest a bash script?</p></div></article><ol class="children"><li id="comment-47255" class="comment byuser comment-author-administrator bypostauthor odd alt depth-2"><article id="div-comment-47255" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47255"> <time datetime="2010-05-09T13:00:39+00:00"> May 9, 2010 at 1:00 pm </time> </a></div></footer><div class="comment-content"><p>Use our shell scripting forum <a href="http://nixcraft.com/shell-scripting/" rel="nofollow">for questions</a>.</p></div></article></li></ol></li><li id="comment-47634" class="comment even thread-even depth-1"><article id="div-comment-47634" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47634"> <time datetime="2010-06-04T06:53:29+00:00"> June 4, 2010 at 6:53 am </time> </a></div></footer><div class="comment-content"><p>The {1..10} syntax is pretty usless as you can use a variable with it!</p><pre>
limit=10
echo {1..${limit}}
{1..10}
</pre><p>You need to eval it to get it to work!</p><pre>limit=10
eval "echo {1..${limit}}"
1 2 3 4 5 6 7 8 9 10
</pre><p>&#8216;seq&#8217; is not avilable on ALL system (MacOSX for example)<br /> and BASH is not available on all systems either.</p><p>You are better off either using the old while-expr method for computer compatiblity!</p><pre>   limit=10; n=1;
   while [ $n -le 10 ]; do
     echo $n;
     n=`expr $n + 1`;
   done
</pre><p>Alternativally use a seq() function replacement&#8230;</p><pre>
 # seq_count 10
seq_count() {
  i=1; while [ $i -le $1 ]; do echo $i; i=`expr $i + 1`; done
}

# simple_seq 1 2 10
simple_seq() {
  i=$1; while [ $i -le $3 ]; do echo $i; i=`expr $i + $2`; done
}

seq_integer() {
    if [ "X$1" = "X-f" ]
    then format="$2"; shift; shift
    else format="%d"
    fi
    case $# in
    1) i=1 inc=1 end=$1 ;;
    2) i=$1 inc=1 end=$2 ;;
    *) i=$1 inc=$2 end=$3 ;;
    esac
    while [ $i -le $end ]; do
      printf "$format\n" $i;
      i=`expr $i + $inc`;
    done
  }
</pre><p>Edited: by Admin &#8211; added code tags.</p></div></article></li><li id="comment-47635" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-47635" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47635"> <time datetime="2010-06-04T07:34:07+00:00"> June 4, 2010 at 7:34 am </time> </a></div></footer><div class="comment-content"><p>@Anthony.<br /> Quite right &#8211; braces {start..end..step} might not be the best thing in bash.</p><p>Nevertheless, I still stick to the old C-like synxtax in a for loop, which does accept variable arguments, such as:</p><p><code><br /> xstart=10;xend=20;xstep=2<br /> for (( x = $xstart; x &lt;= $xend; x += $xstep)); do echo $x;done<br /> 10<br /> 12<br /> 14<br /> 16<br /> 18<br /> 20<br /> </code></p><p>I don&#8217;t know much of this FOR loop syntax portability, functions you suggest may be the best thing to use for portability concern. (I have to read POSIX reference again :-) )</p></div></article><ol class="children"><li id="comment-47636" class="comment even depth-2 parent"><article id="div-comment-47636" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47636"> <time datetime="2010-06-04T09:57:45+00:00"> June 4, 2010 at 9:57 am </time> </a></div></footer><div class="comment-content"><p>The Bash C-style for loop was taken from KSH93, thus I guess it&#8217;s at least portable towards Korn and Z.</p><p>The seq-function above could use i=$((i + inc)), if only POSIX matters. expr is obsolete for those things, even in POSIX.</p></div></article><ol class="children"><li id="comment-47637" class="comment odd alt depth-3"><article id="div-comment-47637" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47637"> <time datetime="2010-06-04T10:15:12+00:00"> June 4, 2010 at 10:15 am </time> </a></div></footer><div class="comment-content"><p>Right Bonsai,<br /> ( <a href="https://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_06_04" rel="nofollow">http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_06_04</a> )</p><p>But FOR C-style does not seem to be POSIXLY-correct&#8230;</p><p>Read on-line reference issue 6/2004,<br /> Top is here, <a href="https://www.opengroup.org/onlinepubs/009695399/mindex.html" rel="nofollow">http://www.opengroup.org/onlinepubs/009695399/mindex.html</a></p><p>and the Shell and Utilities volume (XCU) T.OC. is here<br /> <a href="https://www.opengroup.org/onlinepubs/009695399/utilities/toc.html" rel="nofollow">http://www.opengroup.org/onlinepubs/009695399/utilities/toc.html</a><br /> doc is:<br /> <a href="https://www.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap01.html" rel="nofollow">http://www.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap01.html</a></p><p>and FOR command:<br /> <a href="https://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_09_04_03" rel="nofollow">http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_09_04_03</a></p></div></article></li><li id="comment-47658" class="comment even depth-3 parent"><article id="div-comment-47658" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47658"> <time datetime="2010-06-06T07:18:00+00:00"> June 6, 2010 at 7:18 am </time> </a></div></footer><div class="comment-content"><p>TheBonsai wrote&#8230;. &#8220;The seq-function above could use i=$((i + inc)), if only POSIX matters. expr is obsolete for those things, even in POSIX.&#8221;</p><p>I am not certain it is in Posix. It was NOT part of the original Bourne Shell, and on some machines, I deal with Bourne Shell. Not Ksh, Bash, or anything else.</p><p>Bourne Shell syntax works everywhere! But as &#8216;expr&#8217; is a builtin in more modern shells, then it is not a big loss or slow down.</p><p>This is especially important if writing a replacement command, such as for &#8220;seq&#8221; where you want your &#8220;just-paste-it-in&#8221; function to work as widely as possible.</p><p>I have been shell programming pretty well all the time since 1988, so I know what I am talking about! Believe me.</p><p>MacOSX has in this regard been the worse, and a very big backward step in UNIX compatibility. 2 year after it came out, its shell still did not even understand most of the normal &#8216;test&#8217; functions. A major pain to write shells scripts that need to also work on this system.</p></div></article><ol class="children"><li id="comment-47662" class="comment odd alt depth-4"><article id="div-comment-47662" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47662"> <time datetime="2010-06-06T12:35:16+00:00"> June 6, 2010 at 12:35 pm </time> </a></div></footer><div class="comment-content"><p>Yea, the question was if it&#8217;s POSIX, not if it&#8217;s 100% portable (which is a difference). The POSIX base more or less is a subset of the Korn features (88, 93), pure Bourne is something &#8220;else&#8221;, I know. Real portability, which means a program can go wherever UNIX went, only in C ;)</p></div></article></li></ol></li></ol></li></ol></li><li id="comment-47645" class="comment even thread-even depth-1"><article id="div-comment-47645" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47645"> <time datetime="2010-06-04T17:57:49+00:00"> June 4, 2010 at 5:57 pm </time> </a></div></footer><div class="comment-content"><p>I&#8217;ve read the standard ;-)</p></div></article></li><li id="comment-47890" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-47890" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Phil Goetz</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47890"> <time datetime="2010-06-17T17:38:59+00:00"> June 17, 2010 at 5:38 pm </time> </a></div></footer><div class="comment-content"><p>That {1 .. N} syntax doesn&#8217;t work with current Linux bash.</p><p>$for r in {1 .. 15}; do echo $r; done<br /> {1<br /> ..<br /> 15}</p></div></article><ol class="children"><li id="comment-47893" class="comment byuser comment-author-administrator bypostauthor even depth-2"><article id="div-comment-47893" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47893"> <time datetime="2010-06-17T17:57:25+00:00"> June 17, 2010 at 5:57 pm </time> </a></div></footer><div class="comment-content"><p>Yes, it does works, you need bash version 3.0 or up. Just tested with &#8220;GNU bash, version 4.1.5(1)-release (i486-pc-linux-gnu)&#8221;. You need to remove white space between 1 and 15, try:</p><pre>for r in {1..15}; do echo $r; done</pre></div></article></li></ol></li><li id="comment-47905" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-47905" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47905"> <time datetime="2010-06-18T00:49:05+00:00"> June 18, 2010 at 12:49 am </time> </a></div></footer><div class="comment-content"><p>I gave some &#8216;seq&#8217; alternatives, some simple, some more complex, mostly using shell built-ins only, depending on you needs.</p><p>At the very start of the comments &#8220;jot&#8221; was mentioned as an alternative, though it does not appear to be as wide spread as &#8220;seq&#8221;. Anyone know if it is on the &#8216;limited shell suport&#8217; MacOSX?</p><p>There are also however some other &#8212; off the wall &#8212; methods of generating a list of number, or just a list for looping &#8216;N&#8217; times. One of the weirdest ones I came across was using /dev/zero and &#8220;dd&#8221;!</p><p> dd 2&gt;/dev/null if=/dev/zero bs=10 count=1 | tr \ \12 | cat -n | tr -d &#8216;\40\11&#8242;</p><p>This gets &#8217;10&#8217; null characters, converts them to line feeds, uses cat to convert them to numbers, and just to clean up, you can optionally delete the tabs and spaces.</p><p>As I said real odd ball.</p><p>Like I often say&#8230;<br /> There are lots of ways to skin a cat, and what method you use depends<br /> on what you want that skin for, and how messy you like the results!</p></div></article><ol class="children"><li id="comment-47914" class="comment even depth-2 parent"><article id="div-comment-47914" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47914"> <time datetime="2010-06-18T07:01:29+00:00"> June 18, 2010 at 7:01 am </time> </a></div></footer><div class="comment-content"><p>Yes,<br /> but the code we see won&#8217;t work.<br /> I think it needs some syntax enhancement in your first [ tr ], such as:</p><p><code><br /> dd 2&gt;/dev/null if=/dev/zero bs=10 count=1 | tr '00' '12' | cat -n | tr -d '\40\11'<br /> </code></p></div></article><ol class="children"><li id="comment-47915" class="comment odd alt depth-3"><article id="div-comment-47915" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-47915"> <time datetime="2010-06-18T07:02:46+00:00"> June 18, 2010 at 7:02 am </time> </a></div></footer><div class="comment-content"><p>Hell ! missed again &#8211; I hate that $%@ WordPress text entry</p></div></article></li></ol></li></ol></li><li id="comment-48441" class="comment even thread-odd thread-alt depth-1 parent"><article id="div-comment-48441" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Paddy</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-48441"> <time datetime="2010-07-20T20:54:12+00:00"> July 20, 2010 at 8:54 pm </time> </a></div></footer><div class="comment-content"><p>Hi guys Ive been reading this thread cos i need some advice on a script. I need to rename some (lots) of files in a directory. they are named..<br /> file_name.001.01<br /> file_name.002.01<br /> file_name.003.01&#8230; etc</p><p>How can I change the names of the files to remove the &#8216;.01&#8217; at the end of each filename? Im useing Ubuntu Lynx&#8230;. Ive been playing with a few examples from this thread, but cant seem to make it work. Any help is appreciated</p></div></article><ol class="children"><li id="comment-48442" class="comment byuser comment-author-administrator bypostauthor odd alt depth-2 parent"><article id="div-comment-48442" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-48442"> <time datetime="2010-07-20T21:12:15+00:00"> July 20, 2010 at 9:12 pm </time> </a></div></footer><div class="comment-content"><p>Try <a href="https://www.cyberciti.biz/tips/renaming-multiple-files-at-a-shell-prompt.html" rel="nofollow">rename command</a>:</p><pre>rename 's/\.01$//' *.01</pre><p>If you must use for:</p><pre>for i in *.01; do mv "$i" "${i%%.01}"; done</pre><p>HTH</p></div></article><ol class="children"><li id="comment-56890" class="comment even depth-3 parent"><article id="div-comment-56890" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dr. Stefan Gruenwald</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56890"> <time datetime="2011-04-01T04:53:51+00:00"> April 1, 2011 at 4:53 am </time> </a></div></footer><div class="comment-content"><p>In general, if you want to add a suffix to your files, do this (.txt in this example):</p><p>ls<br /> file1	file2	file3</p><p>for i in *; do mv $i $i.txt; done</p><p>ls<br /> file1.txt	file2.txt	file3.txt</p><p>If you want to take it back off (.txt in this example again)</p><p>for i in *.txt; do mv $i ${i%.*}; done</p><p>ls<br /> file1	file2	file3</p></div></article><ol class="children"><li id="comment-67483" class="comment odd alt depth-4 parent"><article id="div-comment-67483" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">maxy-millianne</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-67483"> <time datetime="2012-01-24T06:18:28+00:00"> January 24, 2012 at 6:18 am </time> </a></div></footer><div class="comment-content"><p>Of course, if you want to worry about files with spaces in (and other things?), put quote around the arguments to mv, as in the gp.</p></div></article><ol class="children"><li id="comment-67619" class="comment even depth-5"><article id="div-comment-67619" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-67619"> <time datetime="2012-01-27T07:48:10+00:00"> January 27, 2012 at 7:48 am </time> </a></div></footer><div class="comment-content"><p>Note that is you want to append a string that does not start with a &#8216;.&#8217; (for example the string &#8220;_info.txt&#8221;) then you need to delimit the variable name&#8230;.</p><p>for i in *; do mv &#8220;$i&#8221; &#8220;${i}_info.txt&#8221;; done</p></div></article></li></ol></li></ol></li></ol></li></ol></li><li id="comment-48543" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-48543" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sapia</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-48543"> <time datetime="2010-07-29T06:20:53+00:00"> July 29, 2010 at 6:20 am </time> </a></div></footer><div class="comment-content"><p>Hi,<br /> I have two files that contain diffrent columns. Both files have matching one column but raw oder is different. I want to combine these two files as below.<br /> File 1: file 2<br /> x 2 7 123 r 3 5 9<br /> y 3 -8 124 y 4 6 20<br /> z 4 -2 34 q 3 5 70<br /> q 5 -9 5 z 5 4 10<br /> r 6 1 6 x 50 3 40</p><p>I want to combine each raws considering the common values in the first column<br /> ex:<br /> x 2 7 123 50 3 40<br /> q 5 -9 5 3 5 70</p><p>I would be grateful if you could help me with this problem.</p><p>Thank you.<br /> Sapia</p></div></article><ol class="children"><li id="comment-48547" class="comment even depth-2"><article id="div-comment-48547" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-48547"> <time datetime="2010-07-29T11:09:40+00:00"> July 29, 2010 at 11:09 am </time> </a></div></footer><div class="comment-content"><p>@Sapia: As Vivek may say,<br /> &#8220;Your post is off-topic. I suggest you use our shell scripting forum for question.&#8221;<br /> Go <a href="http://nixcraft.com/" rel="nofollow">http://nixcraft.com/</a></p></div></article></li></ol></li><li id="comment-49160" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-49160" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">borleand</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-49160"> <time datetime="2010-09-01T20:23:48+00:00"> September 1, 2010 at 8:23 pm </time> </a></div></footer><div class="comment-content"><p>bash = GPL<br /> GPL = GNU<br /> GNU = Gnu is Not Unix</p><p>UNIX logo in your web page = ???</p></div></article><ol class="children"><li id="comment-49174" class="comment byuser comment-author-administrator bypostauthor even depth-2 parent"><article id="div-comment-49174" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-49174"> <time datetime="2010-09-02T11:45:26+00:00"> September 2, 2010 at 11:45 am </time> </a></div></footer><div class="comment-content"><p>Does it really matters?</p><p>Bash runs on both certified UNIX and UNIX like (*BSD &#038; various Linux distros) operating systems.</p><p>HTH</p></div></article><ol class="children"><li id="comment-49176" class="comment odd alt depth-3"><article id="div-comment-49176" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-49176"> <time datetime="2010-09-02T12:10:53+00:00"> September 2, 2010 at 12:10 pm </time> </a></div></footer><div class="comment-content"><p>@Vivek</p><p>Quite right &#8211; who cares ? Nobody.</p><p>I just hope that those guys [borleand] would have better working and helping for FOSS community instead of posting those high-quality ( ;-P ) comments.</p><p>Thanks for such a great web site, Vivek.</p></div></article></li><li id="comment-49188" class="comment even depth-3"><article id="div-comment-49188" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-49188"> <time datetime="2010-09-03T02:02:33+00:00"> September 3, 2010 at 2:02 am </time> </a></div></footer><div class="comment-content"><p>Of bigger concern between UNIX, GNU, GPL, Linux, Solaris, MacOSX, or whatever else, is what extra support programs are also available.</p><p>I use to use &#8216;seq&#8217; all the time in shell loops. I don&#8217;t any more because &#8216;seq&#8217; is not available on MacOSX. In fact a lot of simple and what I would have though universal support programs are not available on MacOSX.</p></div></article></li></ol></li></ol></li><li id="comment-49549" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-49549" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">naveen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-49549"> <time datetime="2010-09-16T04:53:49+00:00"> September 16, 2010 at 4:53 am </time> </a></div></footer><div class="comment-content"><p>how do i run 100 iteration using bash shell script.. i want to know how long will it take to execute one command(start and end time). I want to keep track which iteration is currently running. i want to log each iteration. I have one automated script i need to run and log it.</p><p>for i in 1 2 3<br /> do<br /> command1<br /> done</p><p>But i want to know how long it takes to complete one iteration. and writes a log&#8230; help me please</p></div></article><ol class="children"><li id="comment-49552" class="comment even depth-2 parent"><article id="div-comment-49552" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-49552"> <time datetime="2010-09-16T07:15:08+00:00"> September 16, 2010 at 7:15 am </time> </a></div></footer><div class="comment-content"><p>Hi naveen,</p><p>1) You should at least read thoroughly this topic. Iteration can be done with this syntax<br /> <code><br /> for x in {start..end}<br /> </code><br /> Look above for explanation.</p><p>2) You could use [date] command and output it to a file<br /> &#8211; as first command of the iteration (echoing something to mark start)<br /> &#8211; as last command of the iteration (echoing something to mark end)</p><p>3) Log<br /> What kind of log? To know what? What for?</p></div></article><ol class="children"><li id="comment-49561" class="comment odd alt depth-3 parent"><article id="div-comment-49561" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">naveen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-49561"> <time datetime="2010-09-16T15:03:32+00:00"> September 16, 2010 at 3:03 pm </time> </a></div></footer><div class="comment-content"><p>i want to write a output in text file(.txt)(log). I want to have a report saying that test ran for 100 iteration. My question i have one automated script that run 100 test file. i want to know how long it takes to complete the one iteration. And i want to keep a copy of the test result in .txt file.</p><p>i know this is to log for one iteration&#8230;&#8230;.<br /> command &gt; log.txt</p><p>But when you are running iteration for 100. How wil you log it??. this is my question. Just one automated script (command) but there will be 100 test results for 100 iteration. How wil you log all this???</p></div></article><ol class="children"><li id="comment-49562" class="comment even depth-4"><article id="div-comment-49562" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-49562"> <time datetime="2010-09-16T15:20:36+00:00"> September 16, 2010 at 3:20 pm </time> </a></div></footer><div class="comment-content"><p>You really seem to be a beginner in shell &#8211; the best way to start would be to study Vivek&#8217;s Wiki first.<br /> Go <a href="http://bash.cyberciti.biz/guide/Main_Page" rel="nofollow">http://bash.cyberciti.biz/guide/Main_Page</a></p><p>To answer you iteration question:<br /> 1) First write the appropriate [for] loop that calls you commands and show us your code. All the information you need is located above in this page. If you cannot write this loop, you&#8217;d better learn [bash] on Vivek&#8217;s Wiki and come back when you can write a [for] loop with 100 iteration. Good luck! :)</p></div></article></li></ol></li></ol></li></ol></li><li id="comment-50970" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-50970" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-50970"> <time datetime="2010-11-19T03:22:23+00:00"> November 19, 2010 at 3:22 am </time> </a></div></footer><div class="comment-content"><p>The problem with this is that csv files can contain quoted strings. which makes just comma separation usless.. For example<br /> LoginN,ssn,ffn<br /> &#8220;ab1,pp1&#8243;,&#8221;ab1&#8243;,&#8221;pp1&#8221;<br /> &#8220;bb1,oo1&#8243;,&#8221;bb1&#8243;,&#8221;oo1&#8221;<br /> &#8220;cc1,qq1&#8243;,&#8221;cc1&#8243;,&#8221;qq1&#8221;</p></div></article><ol class="children"><li id="comment-50973" class="comment byuser comment-author-administrator bypostauthor even depth-2"><article id="div-comment-50973" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-50973"> <time datetime="2010-11-19T07:58:29+00:00"> November 19, 2010 at 7:58 am </time> </a></div></footer><div class="comment-content"><p>In that case use &#8221; as delimiter. This can be done with sed or cut or any other shell built-in or utility:</p><pre>echo '"ab1,pp1","ab1","pp1"' | cut -d '"' -f2
echo '"ab1,pp1","ab1","pp1"' | cut -d '"' -f4
echo '"ab1,pp1","ab1","pp1"' | cut -d '"' -f6</pre><p>for loop can be used:</p><pre>for i in {2..6..2}; do echo '"ab1,pp1","ab1","pp1"' | cut -d '"' -f${i}; done</pre><p>You can skip for and use sed too.</p><p>HTH</p></div></article></li></ol></li><li id="comment-51035" class="comment odd alt thread-even depth-1"><article id="div-comment-51035" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51035"> <time datetime="2010-11-22T01:16:40+00:00"> November 22, 2010 at 1:16 am </time> </a></div></footer><div class="comment-content"><p>It isn&#8217;t quite that simple. But then any CSV that is more complex is getting a bit beyond <b>simple</b> shell parsing.</p></div></article></li><li id="comment-51036" class="comment even thread-odd thread-alt depth-1 parent"><article id="div-comment-51036" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51036"> <time datetime="2010-11-22T01:17:57+00:00"> November 22, 2010 at 1:17 am </time> </a></div></footer><div class="comment-content"><p>Nifty solution though, especially without access to a multi-character field separator.</p></div></article><ol class="children"><li id="comment-51039" class="comment odd alt depth-2 parent"><article id="div-comment-51039" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51039"> <time datetime="2010-11-22T07:58:13+00:00"> November 22, 2010 at 7:58 am </time> </a></div></footer><div class="comment-content"><p>Here is another way to do it,<br /> &#8211; in a generic way, that is without having to know number of internal fields,<br /> &#8211; without IFS manipulation<br /> &#8211; without external function (only builtin):</p><p>Let&#8217;s say your CSV file contains 3 fields per record (per line):<br /> &#8220;aaa bbb ccc&#8221;,&#8221;ddd eee fff&#8221;,&#8221;ggg hhh iii&#8221;,&#8221;jjj kkk lll&#8221;<br /> &#8220;mmm nnn ooo&#8221;,&#8221;ppp qqq rrr&#8221;,&#8221;sss ttt uuu&#8221;,&#8221;vvv www xxx&#8221;<br /> &#8220;yyy zzz 111&#8243;,&#8221;222 333 444&#8243;,&#8221;555 666 777&#8243;,&#8221;888 999 000&#8221;</p><p>To break it in a one-liner, try:<br /> <code><br /> while read; do record=${REPLY}; echo ${record}|while read -d ","; do echo ${REPLY}; done; done&lt;data<br /> </code></p><p>The same code in a script is:</p><pre>
#!/bin/bash

while read
do 
record=${REPLY}
echo ${record}|while read -d ,
do
echo ${REPLY}
done

done&lt;data
</pre></div></article><ol class="children"><li id="comment-51040" class="comment even depth-3 parent"><article id="div-comment-51040" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51040"> <time datetime="2010-11-22T08:23:57+00:00"> November 22, 2010 at 8:23 am </time> </a></div></footer><div class="comment-content"><p>And if you want to get rid of double-quotes, use:</p><p>one-liner code:<br /> <code> while read; do record=${REPLY}; echo ${record}|while read -d ","; do field="${REPLY#\"}"; field="${field%\"}"; echo ${field}; done; done&lt;data<br /> </code></p><p>script code, added of some text to better see record and field breakdown:<br /> <code><br /> #!/bin/bash<br /> while read<br /> do<br /> echo "New record"<br /> record=${REPLY}<br /> echo ${record}|while read -d ,<br /> do<br /> field="${REPLY#\"}"<br /> field="${field%\"}"<br /> echo "Field is :${field}:"<br /> done<br /> done&lt;data<br /> </code></p><p>Does it work with your data?</p><p>&#8212; PP</p></div></article><ol class="children"><li id="comment-51041" class="comment odd alt depth-4 parent"><article id="div-comment-51041" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51041"> <time datetime="2010-11-22T09:01:52+00:00"> November 22, 2010 at 9:01 am </time> </a></div></footer><div class="comment-content"><p>Of course, all the above code was assuming that your CSV file is named &#8220;data&#8221;.</p><p>If you want to use anyname with the script, replace:<br /> <code><br /> done&lt;data<br /> </code><br /> With:<br /> <code><br /> done<br /> </code></p><p>And then use your script file (named for instance &#8220;myScript&#8221;) with standard input redirection:<br /> <code><br /> myScript &lt; anyFileNameYouWant<br /> </code></p><p>Enjoy!</p></div></article><ol class="children"><li id="comment-51043" class="comment even depth-5"><article id="div-comment-51043" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51043"> <time datetime="2010-11-22T11:28:26+00:00"> November 22, 2010 at 11:28 am </time> </a></div></footer><div class="comment-content"><p>well no there is a bug, last field of each record is not read &#8211; it needs a workout and may be IFS modification ! After all that&#8217;s what it was built for&#8230; :O)</p></div></article></li></ol></li></ol></li></ol></li></ol></li><li id="comment-51056" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-51056" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51056"> <time datetime="2010-11-22T23:31:59+00:00"> November 22, 2010 at 11:31 pm </time> </a></div></footer><div class="comment-content"><p>Another bug is the inner loop is a pipeline, so you can&#8217;t assign variables for use later in the script. but you can use &#8216;&lt;&lt;&lt;&#039; to break the pipeline and avoid the echo.</p><p>But this does not help when you have commas within the quotes! Which is why you needed quotes in the first place.</p><p>In any case It is a little off topic. Perhaps a new thread for reading CVS files in shell should be created.</p></div></article><ol class="children"><li id="comment-51099" class="comment even depth-2 parent"><article id="div-comment-51099" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51099"> <time datetime="2010-11-24T18:29:02+00:00"> November 24, 2010 at 6:29 pm </time> </a></div></footer><div class="comment-content"><p>Anthony,<br /> Would you try this one-liner script on your CSV file?</p><p>This one-liner assumes that CSV file named [data] has __every__ field double-quoted.</p><p><code><br /> while read; do r="${REPLY#\"}";echo "${r//\",\"/\"}"|while read -d \";do echo "Field is :${REPLY}:";done;done&lt;data<br /> </code></p><p>Here is the same code, but for a script file, not a one-liner tweak.</p><p><code><br /> #!/bin/bash<br /> # script csv01.sh<br /> #<br /> # 1) Usage<br /> # This script reads from standard input<br /> # any CSV with double-quoted data fields<br /> # and breaks down each field on standard output<br /> #<br /> # 2) Within each record (line), _every_ field MUST:<br /> # - Be surrounded by double quotes,<br /> # - and be separated from preceeding field by a comma<br /> # (not the first field of course, no comma before the first field)<br /> #<br /> while read<br /> do<br /> echo "New record" # this is not mandatory-just for explanation<br /> #<br /> #<br /> # store REPLY and remove opening double quote<br /> record="${REPLY#\"}"<br /> #<br /> #<br /> # replace every "," by a single double quote<br /> record=${record//\",\"/\"}<br /> #<br /> #<br /> echo ${record}|while read -d \"<br /> do<br /> # store REPLY into variable "field"<br /> field="${REPLY}"<br /> #<br /> #<br /> echo "Field is :${field}:" # just for explanation<br /> done<br /> done<br /> </code></p><p>This script named here [cvs01.sh] must be used so:<br /> <code><br /> cvs01.sh &lt; my-cvs-file-with-doublequotes<br /> </code></p></div></article><ol class="children"><li id="comment-51100" class="comment odd alt depth-3"><article id="div-comment-51100" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-51100"> <time datetime="2010-11-24T18:35:13+00:00"> November 24, 2010 at 6:35 pm </time> </a></div></footer><div class="comment-content"><p>@Anthony,</p><p>By the way, using [REPLY] in the outer loop _and_ the inner loop is not a bug.<br /> As long as you know what you do, this is not problem, you just have to store [REPLY] value conveniently, as this script shows.</p><p>:-P</p></div></article></li></ol></li></ol></li><li id="comment-52293" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-52293" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">James Wilkinson</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-52293"> <time datetime="2010-12-14T10:03:54+00:00"> December 14, 2010 at 10:03 am </time> </a></div></footer><div class="comment-content"><p>Thanks for writing this article Vivek &#8211; it is very useful. In particular, I didn&#8217;t know about bash&#8217;s built-in &#8216;help&#8217; command and was getting frustrated with the lack of detail in &#8216;man for&#8217;</p></div></article></li><li id="comment-52507" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-52507" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sammeta</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-52507"> <time datetime="2010-12-15T16:48:32+00:00"> December 15, 2010 at 4:48 pm </time> </a></div></footer><div class="comment-content"><p>Hi i need help in sorting some of the raw data actually on the unix machine.</p><p>The raw data is some thing like this:</p><pre>
TOP;0004796;T0698;3,8;2,2;1,6;19384;1560;28;0;304;12;0;httpd
TOP;0004796;T0699;0,2;0,1;0,1;12984;1524;28;0;304;1;0;httpd
TOP;0004806;T0145;40,3;38,8;1,5;427904;32648;8;0;1000;62;0;java
TOP;0004806;T0146;30,6;29,7;0,8;433152;37684;8;0;1036;29;0;java
TOP;0004806;T0147;16,8;16,3;0,6;433808;39152;8;0;1048;11;0;java
TOP;0004806;T0148;14,2;13,4;0,7;434132;40300;8;0;1056;11;0;java
TOP;0004806;T0149;13,1;12,5;0,6;434196;41644;8;0;1080;7;0;java
TOP;0004806;T0150;18,1;17,3;0,8;434276;42556;8;0;1092;18;0;java
TOP;0004806;T0151;8,3;7,8;0,5;434316;42624;8;0;1096;1;0;java
TOP;0004806;T0152;4,4;4,1;0,4;434328;42916;8;0;1096;9;0;java
TOP;0004806;T0153;4,7;4,3;0,4;434352;43204;8;0;1104;9;0;java
TOP;0004806;T0154;3,1;2,8;0,3;434404;43260;8;0;1104;1;0;java
...
VM;T1439;-1;8;-1;-1;-1;41;0;0;0;7346;0;23;0;2312;2312;0;0;0;0;0;0;0;21;21;0;12;-2633;0;0;0;356;-3;0;0;0;0;0
VM;T1440;-1;6;-1;-1;-1;8893;0;0;0;10808;0;12178;-36;865179;-34821;0;0;8895;0;0;0;0;11758;11758;0;-21;2613;0;0;0;-752;3;0;2;0;0;7
ZZZZ;T0001;00:00:02;18-NOV-2010
ZZZZ;T0002;00:01:02;18-NOV-2010
ZZZZ;T0003;00:02:02;18-NOV-2010
....
ZZZZ;T0140;02:19:04;18-NOV-2010
ZZZZ;T0141;02:20:04;18-NOV-2010
ZZZZ;T0142;02:21:04;18-NOV-2010
ZZZZ;T0143;02:22:04;18-NOV-2010
ZZZZ;T0144;02:23:04;18-NOV-2010
ZZZZ;T0145;02:24:04;18-NOV-2010
ZZZZ;T0146;02:25:04;18-NOV-2010
ZZZZ;T0147;02:26:04;18-NOV-2010
</pre><p>So now it has to check for the time stamp T0145 is the timestamp in the below code :</p><pre>TOP;0004806;T0145;40,3;38,8;1,5;427904;32648;8;0;1000;62;0;java< ?pre>
now this has to be mapped with the same time stamp in ZZZZ.......Which is some thing like this from above.
</pre><pre>ZZZZ;T0145;02:24:04;18-NOV-2010</pre><p>so finally the output should look like this for every occurance the T value:</p><pre>TOP;0004806;T0145;40,3;38,8;1,5;427904;32648;8;0;1000;62;0;java ZZZZ;T0145;02:24:04;18-NOV-2010,</pre></div></article><ol class="children"><li id="comment-52518" class="comment byuser comment-author-administrator bypostauthor even depth-2 parent"><article id="div-comment-52518" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-52518"> <time datetime="2010-12-15T18:43:49+00:00"> December 15, 2010 at 6:43 pm </time> </a></div></footer><div class="comment-content"><p>See sort command man page or our sort tutorial related FAQs:<br /> <a href="https://www.cyberciti.biz/faq/linux-unix-sort-date-data-using-sortcommand/" rel="nofollow">Linux / UNIX Shell: Sort Date</a><br /> <a href="https://www.cyberciti.biz/faq/unix-linux-shell-script-sorting-ip-addresses/" rel="nofollow">Linux / UNIX Shell: Sort IP Address</a></p></div></article><ol class="children"><li id="comment-52603" class="comment odd alt depth-3"><article id="div-comment-52603" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sammeta</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-52603"> <time datetime="2010-12-16T15:52:31+00:00"> December 16, 2010 at 3:52 pm </time> </a></div></footer><div class="comment-content"><p>Hi Vivek,</p><p>Thanks for your reply,</p><p>but this is just not only sorting but recording on of the value in the above code and then match this with other lines in the code .then display both together.</p></div></article></li></ol></li></ol></li><li id="comment-52620" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-52620" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-52620"> <time datetime="2010-12-16T18:10:18+00:00"> December 16, 2010 at 6:10 pm </time> </a></div></footer><div class="comment-content"><p>@Sammeta,</p><p>Just trying to help, and not to being rude or anything:<br /> We are not willing to do your work,<br /> anyone would help people who really try to help themselves first,<br /> which you may have been trying already, I suppose.</p><p>So, would you either submit a first version of your code,<br /> or at least a main Algorithm you could think of?</p><p>You may want to read first [awk] or [join] unix utilities man pages that you could find anywhere.</p><p>&#8211;P</p></div></article></li><li id="comment-54555" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-54555" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">mohan</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-54555"> <time datetime="2011-01-05T00:29:08+00:00"> January 5, 2011 at 12:29 am </time> </a></div></footer><div class="comment-content"><p>what does FILES=&#8221;@&#8221; do? Please explain i am new to unix.</p></div></article><ol class="children"><li id="comment-54602" class="comment byuser comment-author-administrator bypostauthor even depth-2"><article id="div-comment-54602" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-54602"> <time datetime="2011-01-05T07:03:30+00:00"> January 5, 2011 at 7:03 am </time> </a></div></footer><div class="comment-content"><p>See <a href="http://bash.cyberciti.biz/guide/$@" rel="nofollow">http://bash.cyberciti.biz/guide/$@</a> and <a href="http://bash.cyberciti.biz/guide/Bash_special_parameters" rel="nofollow">http://bash.cyberciti.biz/guide/Bash_special_parameters</a></p></div></article></li></ol></li><li id="comment-54573" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-54573" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">John</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-54573"> <time datetime="2011-01-05T01:24:11+00:00"> January 5, 2011 at 1:24 am </time> </a></div></footer><div class="comment-content"><p>One good reason to use seq instead of the {start..end..increment} idiom:</p><p>#! /bin/bash<br /> START=1<br /> END=10<br /> INCR=2</p><p>echo &#8212; use seq &#8212;<br /> for x in $(seq $START $INCR $END)<br /> do<br /> echo $x<br /> done<br /> echo &#8212; bash idiom &#8212;<br /> for x in {$START..$END..$INCR}<br /> do<br /> echo $x<br /> done</p><p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br /> &#8212; use seq &#8212;<br /> 1<br /> 3<br /> 5<br /> 7<br /> 9<br /> &#8212; bash idiom &#8212;<br /> {1..10..2}</p></div></article></li><li id="comment-54604" class="comment even thread-even depth-1 parent"><article id="div-comment-54604" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-54604"> <time datetime="2011-01-05T07:09:44+00:00"> January 5, 2011 at 7:09 am </time> </a></div></footer><div class="comment-content"><p>Wrong conclusion. This is not a reason for the seq idiom, it&#8217;s a reason to use arithmetically driven (C-like) for loops.</p><pre>
START=1
END=10
INCR=2
for ((x = START; x &lt;= END; x += INCR)); do
  echo $x
done
</pre><p><a href="http://wiki.bash-hackers.org/syntax/ccmd/c_for" rel="nofollow">http://wiki.bash-hackers.org/syntax/ccmd/c_for</a></p></div></article><ol class="children"><li id="comment-55320" class="comment odd alt depth-2 parent"><article id="div-comment-55320" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-55320"> <time datetime="2011-02-03T09:09:38+00:00"> February 3, 2011 at 9:09 am </time> </a></div></footer><div class="comment-content"><p>@Bonsai:</p><p>The example you gave is weird regarding shell variable usage: It works, but I thought it should not work!<br /> Within the for (( )) instruction, you omitted &#8220;$&#8221; sign to allow variable expansion, but it works! That looks very strange to me.</p><p>I wrote in an example previously (look above):</p><p>xstart=1;xend=10;xstep=2<br /> for (( x = $xstart; x &lt;= $xend; x += $xstep)); do echo $x;done</p><p>In your example, you wrote [for(( ))] without &#8220;$&#8221; :</p><p>for ((x = START; x &lt;= END; x += INCR))</p><p>I am astonished that for(()) works both with and without &#8220;$&#8221; for variable expansion!</p><p>xstart=1;xend=10;xstep=2<br /> for (( x = xstart; x &lt;= xend; x += xstep)); do echo $x;done</p><p>Does anyone know why?</p><p>&#8211;PP</p></div></article><ol class="children"><li id="comment-55322" class="comment byuser comment-author-administrator bypostauthor even depth-3 parent"><article id="div-comment-55322" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-55322"> <time datetime="2011-02-03T12:15:34+00:00"> February 3, 2011 at 12:15 pm </time> </a></div></footer><div class="comment-content"><p>I think it is ksh93 compatibility feature; so &#8220;START / END / INCR&#8221; will work with no &#8220;$&#8221;. See ksh93 man page.</p></div></article><ol class="children"><li id="comment-55327" class="comment odd alt depth-4 parent"><article id="div-comment-55327" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-55327"> <time datetime="2011-02-03T13:56:40+00:00"> February 3, 2011 at 1:56 pm </time> </a></div></footer><div class="comment-content"><p>Sorry, I cannot find any evidence of such syntax on khs93 man page &#8211; and I use Bash shell.<br /> On what URI + what chapter do you think there is an explanation of such behavior?</p></div></article><ol class="children"><li id="comment-55336" class="comment even depth-5"><article id="div-comment-55336" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-55336"> <time datetime="2011-02-03T17:01:58+00:00"> February 3, 2011 at 5:01 pm </time> </a></div></footer><div class="comment-content"><p>It&#8217;s not KSH (or at least not KSH-unique). It&#8217;s how arithmetic environments (of any kind) in Bash work.</p><p>Also it&#8217;s related to what POSIX specifies for the environment inside arithmetic expansion (the only a. environment POSIX knows):</p><blockquote><p> If the shell variable x contains a value that forms a valid integer constant, then the arithmetic expansions &#8220;$((x))&#8221; and &#8220;$(($x))&#8221; shall return the same value.</p></blockquote></div></article></li><li id="comment-55337" class="comment byuser comment-author-administrator bypostauthor odd alt depth-5 parent"><article id="div-comment-55337" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-55337"> <time datetime="2011-02-03T17:29:58+00:00"> February 3, 2011 at 5:29 pm </time> </a></div></footer><div class="comment-content"><p>I think it was mentioned in TLDP.org&#8217;s advanced bash guide.</p></div></article><ol class="children"><li id="comment-55343" class="comment even depth-6"><article id="div-comment-55343" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-55343"> <time datetime="2011-02-03T21:05:53+00:00"> February 3, 2011 at 9:05 pm </time> </a></div></footer><div class="comment-content"><p>Quite right Vivek.</p><p><a href="http://tldp.org/LDP/abs/html/arithexp.html" rel="nofollow">http://tldp.org/LDP/abs/html/arithexp.html</a></p></div></article></li></ol></li></ol></li></ol></li></ol></li></ol></li><li id="comment-55675" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-55675" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">toto</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-55675"> <time datetime="2011-02-16T05:01:26+00:00"> February 16, 2011 at 5:01 am </time> </a></div></footer><div class="comment-content"><p>hi,<br /> good tutorial.<br /> thank you</p></div></article></li><li id="comment-56183" class="comment even thread-even depth-1 parent"><article id="div-comment-56183" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">VÃ­Ã°ir Valberg GuÃ°mundsson</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56183"> <time datetime="2011-03-08T03:22:29+00:00"> March 8, 2011 at 3:22 am </time> </a></div></footer><div class="comment-content"><p>I might be going out on a limb due to a bad case of TL;DR, but I noticed the seq warning.</p><p>Correct me if I&#8217;m wrong but using for instance</p><blockquote><p>for i in $(seq -w 1 1 20); do echo $i; done</p></blockquote><p>is in my oppinion quite an useful way of using seq in bash, at least when you want leading zeros before 1-9 and not from 10&lt;</p><p>Or is there a better way of doing this all &quot;bashy&quot;? ;)</p><p>-vÃ­Ã°ir</p></div></article><ol class="children"><li id="comment-56186" class="comment odd alt depth-2"><article id="div-comment-56186" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56186"> <time datetime="2011-03-08T06:26:27+00:00"> March 8, 2011 at 6:26 am </time> </a></div></footer><div class="comment-content"><pre>for ((i=1; i&lt;=20; i++)); do printf &quot;%02d\n&quot; &quot;$i&quot;; done</pre></div></article></li><li id="comment-56187" class="comment byuser comment-author-administrator bypostauthor even depth-2 parent"><article id="div-comment-56187" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56187"> <time datetime="2011-03-08T06:37:07+00:00"> March 8, 2011 at 6:37 am </time> </a></div></footer><div class="comment-content"><p>+1 for printf due to portability, but you can use bashy .. syntax too</p><pre>for i in {01..20}; do echo "$i"; done</pre></div></article><ol class="children"><li id="comment-56188" class="comment odd alt depth-3"><article id="div-comment-56188" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">TheBonsai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56188"> <time datetime="2011-03-08T06:48:47+00:00"> March 8, 2011 at 6:48 am </time> </a></div></footer><div class="comment-content"><p>Well, it isn&#8217;t portable per se, it makes it portable to pre-4 Bash versions.</p><p>I think a more or less &#8220;portable&#8221; (in terms of POSIX, at least) code would be</p><pre>
i=0

while [ "$((i &gt;= 20))" -eq 0 ]; do
  printf "%02d\n" "$i"
  i=$((i+1))
done
</pre></div></article></li></ol></li></ol></li><li id="comment-56293" class="comment even thread-odd thread-alt depth-1 parent"><article id="div-comment-56293" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">ankit gulati</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56293"> <time datetime="2011-03-12T14:44:34+00:00"> March 12, 2011 at 2:44 pm </time> </a></div></footer><div class="comment-content"><p>Hi</p><p>Can anybody help for this.</p><p>I have two text file viz gem1.txt and gem2.txt</p><p>EX. Content of gem1.txt</p><p>activerecord (2.3.5, 2.2.2)<br /> activerecord-oracle_enhanced-adapter (1.1.9)<br /> activerecord-sqlserver-adapter (2.3.4)<br /> activeresource (2.3.5, 2.2.2)</p><p>Now i have to put all the data of these two .txt file on gem.csv. column wise.</p></div></article><ol class="children"><li id="comment-56298" class="comment odd alt depth-2"><article id="div-comment-56298" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56298"> <time datetime="2011-03-12T22:58:14+00:00"> March 12, 2011 at 10:58 pm </time> </a></div></footer><div class="comment-content"><p>@ankit gulati</p><p>This is not a place :-P<br /> for such questions, go and see Forum. <a href="http://nixcraft.com/" rel="nofollow">http://nixcraft.com/</a></p><p>Anyway an answer is [paste] command. :-)<br /> <a href="https://linux.die.net/man/1/paste" rel="nofollow">http://linux.die.net/man/1/paste</a></p></div></article></li><li id="comment-68468" class="comment even depth-2"><article id="div-comment-68468" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">PiCarre</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-68468"> <time datetime="2012-03-20T09:15:16+00:00"> March 20, 2012 at 9:15 am </time> </a></div></footer><div class="comment-content"><p>Simply use the &#8220;paste&#8221; command.</p></div></article></li></ol></li><li id="comment-56597" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-56597" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Rupender</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56597"> <time datetime="2011-03-23T15:48:17+00:00"> March 23, 2011 at 3:48 pm </time> </a></div></footer><div class="comment-content"><p>Hi<br /> can some one help in ceating a loop</p><p>the problem is<br /> i have 3 folder and name of the folder changes.<br /> i want a loop which enter these folder one by one echo the files inside the folder</p></div></article><ol class="children"><li id="comment-56611" class="comment even depth-2"><article id="div-comment-56611" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-56611"> <time datetime="2011-03-23T19:27:54+00:00"> March 23, 2011 at 7:27 pm </time> </a></div></footer><div class="comment-content"><p>Hi</p><p>following this topic,<br /> you may try to write something down first,<br /> and then we may help you &#8230; if you help yourself first.</p><p>Read and use this topic,<br /> and the following material: <a href="http://bash.cyberciti.biz/guide/Main_Page" rel="nofollow">http://bash.cyberciti.biz/guide/Main_Page</a></p><p>However, such request would be best posted into the forum <a href="http://nixcraft.com/" rel="nofollow">http://nixcraft.com/</a></p><p>Anyway, a simple solution would be to use [ls] command with appropriate arguments.</p></div></article></li></ol></li><li id="comment-57422" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-57422" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philip Ratzsch</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-57422"> <time datetime="2011-04-20T05:53:16+00:00"> April 20, 2011 at 5:53 am </time> </a></div></footer><div class="comment-content"><p>I didn&#8217;t see this in the article or any of the comments so I thought I&#8217;d share. While this is a contrived example, I find that nesting two groups can help squeeze a two-liner (once for each range) into a one-liner:</p><p>for num in {{1..10},{15..20}};do echo $num;done</p><p>Great reference article!</p></div></article><ol class="children"><li id="comment-57427" class="comment even depth-2"><article id="div-comment-57427" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-57427"> <time datetime="2011-04-20T08:23:27+00:00"> April 20, 2011 at 8:23 am </time> </a></div></footer><div class="comment-content"><p>@Philip<br /> Nice thing to think of, using brace nesting, thanks for sharing.</p></div></article></li></ol></li><li id="comment-59181" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-59181" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">David</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59181"> <time datetime="2011-05-04T10:10:14+00:00"> May 4, 2011 at 10:10 am </time> </a></div></footer><div class="comment-content"><p>Hi guys.<br /> I was wondering whether it is possible to run a for loop through rsh (now before you start protesting that I use rsh instead of ssh; I know that it is extremely insecure. Thanks.) like this:?<br /> rsh -l dev 192.168.x.x &#8220;for file in /PackSun/distills/*; do if [[ ${file} =~ &#8220;3\.6\.76&#8243; ]]; echo $file; fi; done&#8221;</p><p>Because when I type this it doesn&#8217;t work, $file is always the same file and it comes from the pwd on the local machine, not on the remote.<br /> Thanks in advance.<br /> D</p></div></article><ol class="children"><li id="comment-59182" class="comment even depth-2"><article id="div-comment-59182" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">David</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59182"> <time datetime="2011-05-04T10:11:21+00:00"> May 4, 2011 at 10:11 am </time> </a></div></footer><div class="comment-content"><p>damn, sorry, didn&#8217;t close the code tag:</p><p>rsh -l dev 192.168.x.x â€œfor file in /PackSun/distills/*; do if [[ ${file} =~ &#8220;3\.6\.76&#8221; ]]; echo $file; fi; doneâ€</p></div></article></li></ol></li><li id="comment-59207" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-59207" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59207"> <time datetime="2011-05-05T02:57:11+00:00"> May 5, 2011 at 2:57 am </time> </a></div></footer><div class="comment-content"><p>First &#8212; you should not use rsh. It is an old and insecure network protocol. ssh is its replacement.</p><p>As for your question YES it is posible, Wrap it in a &#8216;shell&#8217; command.</p><p>rsh -l dev 192.168.x.x &#8216;sh -c &#8216;\&#8221;for file in /PackSun/distills/*; do if [[ ${file} =~ &#8220;3\.6\.76&#8243; ]]; echo $file; fi; done&#8217;\&#8217;</p><p>Watch the quoting as you want to use single quotes for both the outside and inside commands. If you use &#8221; quotes you will need to escape the $ characters instead! And that may in turn lead to escapes of escapes (not pretty).</p><p>I have actually done this to execute a very very large shell script on a remote server.<br /> However I don&#8217;t recommend it for things beyond what you have. If need be copy (update) a shell script on the remote server (scp, rsync, etc) then execute that. It works better, you do not have constant quote handling problems, and not command line length limits.</p><p>I do this for a <a>incremental home backup program</a> (written for my own use, using rsync hardlinks backup directories), that can backup to a remote account. You are free to download and look at the copy/execute remote script that the main script performs for its sub-scripts (like backup cycle rolls).</p></div></article><ol class="children"><li id="comment-59225" class="comment even depth-2"><article id="div-comment-59225" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59225"> <time datetime="2011-05-05T13:10:16+00:00"> May 5, 2011 at 1:10 pm </time> </a></div></footer><div class="comment-content"><p>Anthony,</p><p>You forgot to include URI for you script, your &gt; a &lt; tag is empty.</p></div></article></li></ol></li><li id="comment-59208" class="comment odd alt thread-even depth-1"><article id="div-comment-59208" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59208"> <time datetime="2011-05-05T03:01:58+00:00"> May 5, 2011 at 3:01 am </time> </a></div></footer><div class="comment-content"><p>PS: the reason for the &#8216;sh -c &#8230;&#8217; is beause you may nto have control of the login shell of the remote account. If you did not have it and the remote accoutn used tcsh or zsh, you will have problems.</p><p>PPS; you are missing a then. I tested it with this ssh version (a shell-builtin only &#8216;ls&#8217; of the remote account).<br /> ssh remote_machine &#8216;sh -c &#8216;\&#8221;for file in *; do echo $file; done&#8217;\&#8217;</p></div></article></li><li id="comment-59243" class="comment even thread-odd thread-alt depth-1 parent"><article id="div-comment-59243" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sanya</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59243"> <time datetime="2011-05-06T06:02:01+00:00"> May 6, 2011 at 6:02 am </time> </a></div></footer><div class="comment-content"><p>Hello</p><p>I am using bash V4+ and this loop works fine:</p><p>for i in {1..10}; do echo $i; done</p><p>But when I put variables in the loop</p><p>max=10; for i in {1..$max}; do echo $i; done</p><p>I see one line as output:</p><p>{1..10}</p><p>Could anybody explain me what&#8217;s wrong ?</p><p>Cheers. Sanya</p></div></article><ol class="children"><li id="comment-59249" class="comment odd alt depth-2 parent"><article id="div-comment-59249" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59249"> <time datetime="2011-05-06T10:13:58+00:00"> May 6, 2011 at 10:13 am </time> </a></div></footer><div class="comment-content"><p>Hello Sanya,</p><p>That would be because brace expansion does not support variables. I have to check this.<br /> Anyway, Keep It Short and Simple: (KISS) here is a simple solution I already gave above:</p><p>xstart=1;xend=10;xstep=1<br /> for (( x = $xstart; x &lt;= $xend; x += $xstep)); do echo $x;done</p><p>Actually, POSIX compliance allows to forget $ in for quotes, as said before, you could also write:</p><p>xstart=1;xend=10;xstep=1<br /> for (( x = xstart; x &lt;= xend; x += xstep)); do echo $x;done</p></div></article><ol class="children"><li id="comment-59251" class="comment even depth-3 parent"><article id="div-comment-59251" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59251"> <time datetime="2011-05-06T10:48:00+00:00"> May 6, 2011 at 10:48 am </time> </a></div></footer><div class="comment-content"><p>Sanya,</p><p>Actually brace expansion happens __before__ $ parameter exapansion, so you cannot use it this way.</p><p>Nevertheless, you could overcome this this way:</p><p>max=10; for i in $(eval echo {1..$max}); do echo $i; done</p></div></article><ol class="children"><li id="comment-59252" class="comment odd alt depth-4 parent"><article id="div-comment-59252" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sanya</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59252"> <time datetime="2011-05-06T11:42:09+00:00"> May 6, 2011 at 11:42 am </time> </a></div></footer><div class="comment-content"><p>Hello, Philippe</p><p>Thanks for your suggestions<br /> You basically confirmed my findings, that bash constructions are not as simple as zsh ones.<br /> But since I don&#8217;t care about POSIX compliance, and want to keep my scripts &#8220;readable&#8221; for less experienced people, I would prefer to stick to zsh where my simple for-loop works</p><p>Cheers, Sanya</p></div></article><ol class="children"><li id="comment-59254" class="comment even depth-5"><article id="div-comment-59254" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59254"> <time datetime="2011-05-06T12:07:26+00:00"> May 6, 2011 at 12:07 pm </time> </a></div></footer><div class="comment-content"><p>Sanya,</p><p>First, you got it wrong: solutions I gave are not related to POSIX, I just pointed out that POSIX allows not to use $ in for (( )), which is just a little bit more readable &#8211; sort of.</p><p>Second, why do you see this less readable than your [zsh] [for loop]?</p><p>for (( x = start; x &lt;= end; x += step)) do<br /> echo &quot;Loop number ${x}&quot;<br /> done</p><p>It is clear that it is a loop, loop increments and limits are clear.</p><p>IMNSHO, if anyone cannot read this right, he should not be allowed to code. :-D</p><p>BFN</p></div></article></li></ol></li></ol></li></ol></li></ol></li><li id="comment-59312" class="comment odd alt thread-even depth-1"><article id="div-comment-59312" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59312"> <time datetime="2011-05-08T23:30:05+00:00"> May 8, 2011 at 11:30 pm </time> </a></div></footer><div class="comment-content"><p>If you are going to do&#8230; $(eval echo {1..$max});<br /> You may as well use &#8220;seq&#8221; or one of the many other forms.<br /> See all the other comments on doing for loops.</p></div></article></li><li id="comment-59511" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-59511" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Tom P</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59511"> <time datetime="2011-05-19T12:16:57+00:00"> May 19, 2011 at 12:16 pm </time> </a></div></footer><div class="comment-content"><p>I am trying to use the variable I set in the for line on to set another variable with a different extension. Couldn&#8217;t get this to work and couldnt find it anywhere on the web&#8230; Can someone help.</p><p>Example:</p><pre>
FILE_TOKEN=`cat /tmp/All_Tokens.txt`
for token in $FILE_TOKEN
do
A1_$token=`grep $A1_token /file/path/file.txt | cut -d ":" -f2`
</pre><p>my goal is to take the values from the ALL Tokens file and set a new variable with A1_ infront of it&#8230; This tells be that A1_ is not a command&#8230;</p><p><em>Edited by admin: Added pre taga</em></p></div></article></li><li id="comment-59572" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-59572" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">atef fawzy</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59572"> <time datetime="2011-05-23T10:27:02+00:00"> May 23, 2011 at 10:27 am </time> </a></div></footer><div class="comment-content"><p>could you please help me in write a bash script do the following:<br /> 1- read an input file contains IP Port<br /> 2- check the connectivity for every IP and its Port via telnet<br /> 3- if the telnet not connected send email to alert me.</p><p>thanks in advance<br /> atef fawzy</p></div></article><ol class="children"><li id="comment-59576" class="comment even depth-2 parent"><article id="div-comment-59576" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59576"> <time datetime="2011-05-23T11:34:26+00:00"> May 23, 2011 at 11:34 am </time> </a></div></footer><div class="comment-content"><p>No problem.<br /> Would you first send me 1000USD payment?<br /> Thanks in advance. ;-)</p></div></article><ol class="children"><li id="comment-59580" class="comment odd alt depth-3"><article id="div-comment-59580" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">atef fawzy</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59580"> <time datetime="2011-05-23T12:37:30+00:00"> May 23, 2011 at 12:37 pm </time> </a></div></footer><div class="comment-content"><p>dear Philippe Petrinko<br /> thank you a lot for you value site<br /> the below is my script and i don&#8217;t know what is the wrong?can you help me</p><p>#!/bin/sh<br /> for ip in $(cat iplist);</p><p>do<br /> # check for open ports #</p><p>connTest=`echo &#8221; &#8221; | telnet $ip`</p><p>if [ &#8220;`echo $ip | awk &#8216;{ print $3 }` = &#8220;Connected&#8221; ]<br /> then<br /> echo &#8220;$ip is up&#8221;</p><p>else</p><p>#echo &#8220;$connTest port is down&#8221;<br /> echo $ip is down</p><p>fi<br /> done</p></div></article></li></ol></li><li id="comment-59578" class="comment even depth-2 parent"><article id="div-comment-59578" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59578"> <time datetime="2011-05-23T12:25:02+00:00"> May 23, 2011 at 12:25 pm </time> </a></div></footer><div class="comment-content"><p>Lucky You! Atef fawzy, Vivek has already written necessary training material for you: Read <a href="http://bash.cyberciti.biz/guide/Main_Page" rel="nofollow">http://bash.cyberciti.biz/guide/Main_Page</a></p></div></article><ol class="children"><li id="comment-59581" class="comment odd alt depth-3"><article id="div-comment-59581" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">atef fawzy</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59581"> <time datetime="2011-05-23T12:41:59+00:00"> May 23, 2011 at 12:41 pm </time> </a></div></footer><div class="comment-content"><p>please tell me what is the wrong?</p><p>#!/bin/sh<br /> for ip in $(cat iplist);</p><p>do<br /> # check for open ports #</p><p>connTest=`echo &#8221; &#8221; | telnet $ip`</p><p>if [ &#8220;`echo $ip | awk &#8216;{ print $3 }` = &#8220;Connected&#8221; ]<br /> then</p><p>echo &#8220;$ip is up&#8221;</p><p>else</p><p>echo $ip is down</p><p>fi<br /> done</p></div></article></li></ol></li></ol></li><li id="comment-59579" class="comment even thread-odd thread-alt depth-1 parent"><article id="div-comment-59579" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">atef fawzy</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59579"> <time datetime="2011-05-23T12:33:03+00:00"> May 23, 2011 at 12:33 pm </time> </a></div></footer><div class="comment-content"><p>dear Philippe Petrinko<br /> thank you a lot for your value site<br /> the below is my script and i don&#8217;t know what is the wrong? can you hep me please</p><p>#!/bin/sh<br /> for ip in $(cat iplist);</p><p>do<br /> # check for open ports #</p><p>connTest=`echo &#8221; &#8221; | telnet $ip`</p><p>#if [ &#8220;`echo $connTest | awk &#8216;{ print $3 }` &#8221; = &#8220;Connected&#8221; ]<br /> if [ &#8220;`echo $ip | awk &#8216;{ print $3 }` = &#8220;Connected&#8221; ]<br /> then</p><p>#echo &#8220;$connTest port is up&#8221;<br /> echo &#8220;$ip is up&#8221;</p><p>else</p><p>#echo &#8220;$connTest port is down&#8221;<br /> echo &#8220;$ip is down&#8221;</p><p>fi<br /> done</p></div></article><ol class="children"><li id="comment-59582" class="comment odd alt depth-2"><article id="div-comment-59582" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59582"> <time datetime="2011-05-23T13:39:29+00:00"> May 23, 2011 at 1:39 pm </time> </a></div></footer><div class="comment-content"><p>Your request is off-topic.<br /> Your [for] loop works fine, so this is not a point to be discussed here,</p><p>Your [if] test is buggy &#8211; not to be discussed here but there <a href="http://nixcraft.com/" rel="nofollow">http://nixcraft.com/</a></p></div></article></li></ol></li><li id="comment-59598" class="comment even thread-even depth-1"><article id="div-comment-59598" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">atef fawzy</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59598"> <time datetime="2011-05-24T10:20:22+00:00"> May 24, 2011 at 10:20 am </time> </a></div></footer><div class="comment-content"><p>please send me the full URL to post the error i got</p></div></article></li><li id="comment-59599" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-59599" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59599"> <time datetime="2011-05-24T11:14:39+00:00"> May 24, 2011 at 11:14 am </time> </a></div></footer><div class="comment-content"><p>You can go where I already offered you =&gt; <a href="http://nixcraft.com/" rel="nofollow">http://nixcraft.com/</a></p><p>You can go there and figure out what topic is appropriate to your needs.</p></div></article></li><li id="comment-59626" class="comment even thread-even depth-1"><article id="div-comment-59626" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">loop how</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-59626"> <time datetime="2011-05-26T00:49:46+00:00"> May 26, 2011 at 12:49 am </time> </a></div></footer><div class="comment-content"><p>#!/bin/sh<br /> How can I do this using infinite loops?</p><pre>
for disk in $(ls /dev/disk/by-id/ | grep -v part | grep scsi-35000I);
do
echo $disk &amp;&amp; \
dd if=/dev/zero of=/dev/disk/by-id/$disk bs=8M oflag=direct count=250 &amp;&amp; \
dd if=/dev/disk/by-id/$disk of=/dev/null bs=8M count=250;
done
</pre></div></article></li><li id="comment-60922" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-60922" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Chu-Siang</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-60922"> <time datetime="2011-07-21T21:07:24+00:00"> July 21, 2011 at 9:07 pm </time> </a></div></footer><div class="comment-content"><p>thanks for you example, It`s help me very much.</p></div></article></li><li id="comment-61007" class="comment even thread-even depth-1"><article id="div-comment-61007" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Faizanul Islam</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-61007"> <time datetime="2011-07-26T06:04:09+00:00"> July 26, 2011 at 6:04 am </time> </a></div></footer><div class="comment-content"><p>hey,</p><p>Thanks a lot. Example are in the way they should be&#8230;some of the examples are very new to me. It has increased by knowledge.<br /> keep posting these things and let us increase our knowledge.</p></div></article></li><li id="comment-61315" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-61315" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">brian</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-61315"> <time datetime="2011-08-05T07:58:17+00:00"> August 5, 2011 at 7:58 am </time> </a></div></footer><div class="comment-content"><p>Hi,</p><p>I have to read a file line by line and do the iteration and apply the condition parameter for each input . Please share your ideas</p></div></article><ol class="children"><li id="comment-61322" class="comment even depth-2"><article id="div-comment-61322" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-61322"> <time datetime="2011-08-05T09:56:28+00:00"> August 5, 2011 at 9:56 am </time> </a></div></footer><div class="comment-content"><p>@Brian<br /> You could google &#8220;awk&#8221; to proceed a file line by line, of use example in Vivek&#8217;s blog.</p><p><a href="http://bash.cyberciti.biz/file-management/read-a-file-line-by-line/" rel="nofollow">http://bash.cyberciti.biz/file-management/read-a-file-line-by-line/</a><br /> <a href="https://www.cyberciti.biz/faq/unix-howto-read-line-by-line-from-file/" rel="nofollow">https://www.cyberciti.biz/faq/unix-howto-read-line-by-line-from-file/</a></p></div></article></li></ol></li><li id="comment-61450" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-61450" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sam McAllister</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-61450"> <time datetime="2011-08-10T11:10:48+00:00"> August 10, 2011 at 11:10 am </time> </a></div></footer><div class="comment-content"><p>Hi, I&#8217;m a beginner and I was writing a very simple script :</p><p>#!/bin/sh<br /> clear<br /> echo &#8220;Enter username:&#8221;<br /> read username<br /> if [ &#8220;$username&#8221; = &#8220;newbay&#8221; ]<br /> then<br /> echo &#8220;Username correct,&#8221;<br /> else<br /> echo &#8220;Incorrect username, try again:&#8221;</p><p>fi</p><p>echo &#8220;Now enter password:&#8221;<br /> read password<br /> if [ &#8220;$password&#8221; = &#8220;welcome&#8221; ]<br /> then<br /> echo &#8220;You are now logged in.&#8221;<br /> else<br /> echo &#8220;Sorry, incorrect password. Please try again.&#8221;</p><p>fi<br /> and I was wondering how to loop the incorrect username try again part ? Can anyone help me, if they understand my awful script ..</p></div></article><ol class="children"><li id="comment-61470" class="comment even depth-2 parent"><article id="div-comment-61470" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-61470"> <time datetime="2011-08-11T07:25:41+00:00"> August 11, 2011 at 7:25 am </time> </a></div></footer><div class="comment-content"><p>Start a new thread!</p></div></article><ol class="children"><li id="comment-61471" class="comment odd alt depth-3"><article id="div-comment-61471" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sam McAllister</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-61471"> <time datetime="2011-08-11T07:47:27+00:00"> August 11, 2011 at 7:47 am </time> </a></div></footer><div class="comment-content"><p>Haha ok thanks :)</p></div></article></li></ol></li><li id="comment-61474" class="comment even depth-2"><article id="div-comment-61474" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-61474"> <time datetime="2011-08-11T08:48:44+00:00"> August 11, 2011 at 8:48 am </time> </a></div></footer><div class="comment-content"><p>You could start learning shell scripting:</p><p>About [for] loops: <a href="http://bash.cyberciti.biz/guide/For_loop" rel="nofollow">http://bash.cyberciti.biz/guide/For_loop</a></p><p>( from that excellent <a href="http://bash.cyberciti.biz/guide/Main_Page" rel="nofollow">http://bash.cyberciti.biz/guide/Main_Page</a> )</p><p>Enjoy!</p></div></article></li></ol></li><li id="comment-61483" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-61483" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">ITtuition.com</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-61483"> <time datetime="2011-08-11T13:30:06+00:00"> August 11, 2011 at 1:30 pm </time> </a></div></footer><div class="comment-content"><p>Spot on. Included all examples that form a good base. Thanks for sharing.</p></div></article></li><li id="comment-62416" class="comment even thread-even depth-1"><article id="div-comment-62416" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Nagesh</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-62416"> <time datetime="2011-09-14T10:21:45+00:00"> September 14, 2011 at 10:21 am </time> </a></div></footer><div class="comment-content"><p>This post is 3 yrs old but still RockS.\m/</p></div></article></li><li id="comment-63856" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-63856" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">ptrac3</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-63856"> <time datetime="2011-10-24T17:43:05+00:00"> October 24, 2011 at 5:43 pm </time> </a></div></footer><div class="comment-content"><p>Very handful tutorial! : ) But i&#8217;ve got a problem on my Ubuntu linux box, a strange problem.. Executing the example code</p><p>#!/bin/bash<br /> for i in {1..5}<br /> do<br /> echo &#8220;Welcome $i times&#8221;<br /> done</p><p>i get as output Welcome {1..5} times. So the bash doesn&#8217;t understand the range {1..5}&#8230;Have any idea? My bash version is GNU bash, version 4.2.8(1)-release (x86_64-pc-linux-gnu). Thank u : )</p></div></article><ol class="children"><li id="comment-63869" class="comment even depth-2"><article id="div-comment-63869" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-63869"> <time datetime="2011-10-25T09:01:00+00:00"> October 25, 2011 at 9:01 am </time> </a></div></footer><div class="comment-content"><p>This code has to be written into a text file, which must be made executable.<br /> Did you do that?</p></div></article></li><li id="comment-63871" class="comment byuser comment-author-administrator bypostauthor odd alt depth-2"><article id="div-comment-63871" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nixCraft</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-63871"> <time datetime="2011-10-25T11:19:02+00:00"> October 25, 2011 at 11:19 am </time> </a></div></footer><div class="comment-content"><p>GNU/Bash v4.2.8 does supports {1..5} syntax. What is the output of the following commands?</p><pre>ls -l /bin/bash
/bin/bash --version</pre></div></article></li></ol></li><li id="comment-64564" class="comment even thread-even depth-1"><article id="div-comment-64564" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sonia McMath</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-64564"> <time datetime="2011-11-18T06:52:02+00:00"> November 18, 2011 at 6:52 am </time> </a></div></footer><div class="comment-content"><p>Great weblog right here! Additionally your web site quite a bit up very fast! What host are you the usage of? Can I get your associate hyperlink for your host? I want my website loaded up as fast as yours lol</p></div></article></li><li id="comment-65210" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-65210" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Hannah</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-65210"> <time datetime="2011-12-05T23:21:12+00:00"> December 5, 2011 at 11:21 pm </time> </a></div></footer><div class="comment-content"><p>Hi all&#8230; I have a question about using for loops. Basically, I have a file containing a list of protein ID numbers. what I want to do is create a for loop that can go into this file, grab each protein ID number, and then search the NCBI database to get the fasta sequence of each protein&#8230; and then create another file containing all of the fasta sequences&#8230;.</p><p>In general, my problem is that I can&#8217;t figure out how to get the protein ID numbers from the output file (ex. $1 in file1) into the for loop script.</p><p>This is what I have so far:</p><p>for gi in file1<br /> do<br /> fastacmd -d /data/nr -s gi<br /> done</p><p>but I need to specify that the gi (protein ID number) is the first column ($1) of file1.</p><p>Does this make sense?</p></div></article></li><li id="comment-65270" class="comment even thread-even depth-1"><article id="div-comment-65270" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Akshit</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-65270"> <time datetime="2011-12-07T12:36:08+00:00"> December 7, 2011 at 12:36 pm </time> </a></div></footer><div class="comment-content"><p>Hi&#8230;<br /> Thanks for the article, it is helpful really.</p><p>I want to know one thing.<br /> Let&#8217;s say there is file with content<br /> 1<br /> 2<br /> 3<br /> 4<br /> 5</p><p>how can I use for loop and print these numbers?<br /> If you are understanding what I am trying to tell. I want to use the contents of these files and stored in the variable.</p></div></article></li><li id="comment-66417" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-66417" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">andreea</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-66417"> <time datetime="2012-01-05T16:21:04+00:00"> January 5, 2012 at 4:21 pm </time> </a></div></footer><div class="comment-content"><p>Hello!<br /> i am beginner and i have to make a bash script in which i have to show the number of lines that were added by the analized commits(in git).can you help me?Thanks.</p></div></article><ol class="children"><li id="comment-66418" class="comment even depth-2 parent"><article id="div-comment-66418" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-66418"> <time datetime="2012-01-05T17:33:19+00:00"> January 5, 2012 at 5:33 pm </time> </a></div></footer><div class="comment-content"><p>Dear andreea</p><p>1) I quote Vivek: &#8220;You are free to use our shell scripting forum for questions.&#8221;<br /> <a href="http://nixcraft.com/shell-scripting/" rel="nofollow">http://nixcraft.com/shell-scripting/</a></p><p>2) You can learn for free shell scripting with the infamous Vivek&#8217;s collaborative Linux Shell Scripting Tutorial<br /> <a href="http://bash.cyberciti.biz/guide/Main_Page" rel="nofollow">http://bash.cyberciti.biz/guide/Main_Page</a></p><p>Enjoy!</p><p>&#8212; Philippe</p></div></article><ol class="children"><li id="comment-66420" class="comment odd alt depth-3 parent"><article id="div-comment-66420" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-66420"> <time datetime="2012-01-05T18:23:14+00:00"> January 5, 2012 at 6:23 pm </time> </a></div></footer><div class="comment-content"><p>&#8220;infamous&#8221; was a private joke-understatement<br /> Sorry, no offense intended!<br /> Vivek website roxxxxs !</p><p>&#8212; Philippe</p></div></article><ol class="children"><li id="comment-66467" class="comment even depth-4"><article id="div-comment-66467" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">andreea</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-66467"> <time datetime="2012-01-06T18:33:21+00:00"> January 6, 2012 at 6:33 pm </time> </a></div></footer><div class="comment-content"><p>Thanks for your quick answer.<br /> I have another problem.i have to use this script by using git.can you explain me or give some advices how can i use it?thank you very much.</p></div></article></li><li id="comment-66511" class="comment odd alt depth-4"><article id="div-comment-66511" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">andreea</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-66511"> <time datetime="2012-01-08T20:54:19+00:00"> January 8, 2012 at 8:54 pm </time> </a></div></footer><div class="comment-content"><p>I have this code that shows the first column which represents the number of insertions of a commit and calculate the sum of all numbers of each line.<br /> if [ $# -eq 2 ]; then<br /> if [ $2 = &#8220;added_lines&#8221; ]; then<br /> tmpfile=$(mktemp)<br /> sum=0<br /> git log &#8211;pretty=tformat: &#8211;numstat | tr -s &#8220;\n&#8221; | cut -f 1 &gt; $tmpfile<br /> for i in $(cat $tmpfile); do<br /> sum=$(($sum + $i))<br /> done<br /> echo &#8220;$sum&#8221;<br /> rm $tmpfile<br /> But with &#8216;cut -f 1&#8217; it takes too much time to calculate and to show the result.Can you help me saying how can i do this with &#8216;awk&#8217; or &#8216;gawk&#8217;?<br /> Please help me.Thanks</p></div></article></li></ol></li></ol></li></ol></li><li id="comment-66611" class="comment even thread-even depth-1 parent"><article id="div-comment-66611" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Ram</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-66611"> <time datetime="2012-01-10T18:57:57+00:00"> January 10, 2012 at 6:57 pm </time> </a></div></footer><div class="comment-content"><p>Hi Vivek,<br /> i am trying to run the below code as ram.sh in server as $ sh ./ram.sh</p><p>code:</p><p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<br /> #!/bin/bash<br /> for i in 1 2 4<br /> do<br /> echo &#8220;Welcome $i times&#8221;<br /> done<br /> &#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p><p>It fails saying<br /> ram.sh: line 3: syntax error near unexpected token `do<br /> ram.sh: line 3: `do</p><p>is that something i need to check which version is the sh and bash used in the server. how to check that.<br /> it is a pretty simple code and it is not workign.<br /> i am running this script in Linux server 64 bit server.</p></div></article><ol class="children"><li id="comment-72456" class="comment odd alt depth-2"><article id="div-comment-72456" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">the dsc</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-72456"> <time datetime="2012-10-23T02:54:41+00:00"> October 23, 2012 at 2:54 am </time> </a></div></footer><div class="comment-content"><p>What&#8217;s the easiest way to have a loop from N to N, when the numbers are dictated by variables?</p><p>Something like what one could/would expect from &#8220;for i in {$a..$b}&#8221;, but something that actually works of course.</p><p>What I do is:</p><p>a=0 ; b=5 ; until ((a==b)) ; do echo $a ; a=$(($a+1)) ; done</p><p>But it seems kind of dumb, somewhat like echoing a huge set of spaces instead of &#8220;clear&#8221;, to clear the screen. But perhaps it&#8217;s the only way to do it. And it works anyway, so perhaps it&#8217;s good enough and worthy as an addition rather than a question.</p><p>Funnily enough you can make an alphabetic countdown with &#8220;for i in {a..z}&#8221;</p></div></article></li></ol></li><li id="comment-67620" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-67620" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-67620"> <time datetime="2012-01-27T10:07:15+00:00"> January 27, 2012 at 10:07 am </time> </a></div></footer><div class="comment-content"><p>Hi Ram,</p><p>Since you are a real beginner, you would really take great benefit self-training on this course free of charge by vivek &amp; contributors:<br /> <a href="http://bash.cyberciti.biz/guide/Main_Page" rel="nofollow">http://bash.cyberciti.biz/guide/Main_Page</a></p><p>&#8211;P</p></div></article></li><li id="comment-68323" class="comment odd alt thread-even depth-1"><article id="div-comment-68323" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">shahzad</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-68323"> <time datetime="2012-03-10T09:04:19+00:00"> March 10, 2012 at 9:04 am </time> </a></div></footer><div class="comment-content"><p>Hi,<br /> I have this code in NetBeens:<br /> #include<br /> #include<br /> using namespace std;<br /> int main() {<br /> int a,i,j;<br /> cout &lt;&lt; &quot;inter your number of row &quot; &lt;&gt;a;<br /> for (i=0; i&lt;=a; i++)<br /> {<br /> for(j=0; j&lt;=i; j++)<br /> {<br /> cout &lt;&lt; &quot;*&quot;;<br /> }<br /> cout &lt;&lt; &#039;\n&#039;;</p><p> }<br /> return 0;<br /> }</p><p>but I want to run it in ubuntu so at first I made a &quot; nano file.sh&quot; aftaer that I wrote this code in it:<br /> #!/bin/sh<br /> echo â€œEnter your number of rowsâ€<br /> Read a<br /> for((i=0; i&lt;=a; i++))<br /> do<br /> for((j=0; j&lt;=i; j++))<br /> do<br /> echo â€œ*â€<br /> done<br /> echo â€“n<br /> done<br /> exit 0</p><p>after that &quot; chmod +x file.sh&quot;, but my code didn&#039;t run, my code in ubuntu has problem,<br /> I don&#039;t know how can I solve it, Thanks a lot if you answer my question,<br /> Regards</p></div></article></li><li id="comment-69226" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-69226" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">regan</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-69226"> <time datetime="2012-05-05T14:26:29+00:00"> May 5, 2012 at 2:26 pm </time> </a></div></footer><div class="comment-content"><p>hi, am having problem to write a program using For statement. Please help if you know something about using For statement</p></div></article></li><li id="comment-71117" class="comment odd alt thread-even depth-1"><article id="div-comment-71117" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Excellent_Test</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-71117"> <time datetime="2012-08-23T11:57:09+00:00"> August 23, 2012 at 11:57 am </time> </a></div></footer><div class="comment-content"><p>This is what I was looking for. TLDP advanced guide is also good one.</p></div></article></li><li id="comment-73198" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-73198" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-73198"> <time datetime="2012-11-12T19:38:46+00:00"> November 12, 2012 at 7:38 pm </time> </a></div></footer><div class="comment-content"><p>Vivek,<br /> It seems that WordPress was hungry, it has eaten your text ;-)</p><p>[for] code sample is broken after sentence: &#8220;A representative three-expression example in bash as follows&#8221;</p><p>&#8211;P</p></div></article></li><li id="comment-79795" class="comment odd alt thread-even depth-1"><article id="div-comment-79795" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Youshi Patel</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-79795"> <time datetime="2013-02-20T15:14:52+00:00"> February 20, 2013 at 3:14 pm </time> </a></div></footer><div class="comment-content"><p>nice write up.</p></div></article></li><li id="comment-81499" class="comment even thread-odd thread-alt depth-1"><article id="div-comment-81499" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">m.vinothini</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-81499"> <time datetime="2013-03-07T06:17:34+00:00"> March 7, 2013 at 6:17 am </time> </a></div></footer><div class="comment-content"><p>very useful</p></div></article></li><li id="comment-93592" class="comment odd alt thread-even depth-1"><article id="div-comment-93592" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">OSuKaRu</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-93592"> <time datetime="2013-06-06T20:54:52+00:00"> June 6, 2013 at 8:54 pm </time> </a></div></footer><div class="comment-content"><p>i try the infinite variable, but it tells me that:</p><p>Syntax error: Bad for loop variable</p><p>:&lt;</p></div></article></li><li id="comment-94809" class="comment even thread-odd thread-alt depth-1 parent"><article id="div-comment-94809" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">K J Ramana Rao</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-94809"> <time datetime="2013-06-20T14:26:33+00:00"> June 20, 2013 at 2:26 pm </time> </a></div></footer><div class="comment-content"><p>Hello,<br /> Nice post.</p><p>Please help me in below code. we are getting syntax error. Please resolve the syntax issue.</p><pre>
if [ $1 ] ; then
    LIB=$1/lib 
    if -d ${_LIB} ; then
        for jar in (cd ${_LIB}; ls *.jar) 
        do
            EXISTS=echo ${CP} | grep "/${jar}" 
            if [ "${_EXISTS}" != "" ]; then
                logger "WARN: Classpath will contain multiple files named ${jar}" 
            else
                CP=${CP}${CP_DELIM}${LIB}/${jar} 
            fi 
        done 
    fi 
    cd $1 
fi 
}
</pre><p>Error:</p><pre>syntax error near unexpected token `('
line 15: `for jar in (cd ${_LIB}; ls *.jar)'</pre><p>Thanks<br /> Ramana</p></div></article><ol class="children"><li id="comment-95113" class="comment odd alt depth-2"><article id="div-comment-95113" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Anthony Thyssen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-95113"> <time datetime="2013-06-24T00:43:03+00:00"> June 24, 2013 at 12:43 am </time> </a></div></footer><div class="comment-content"><p>You are a &#8216;help troll&#8217;.. You posted in the wrong section.<br /> you would have been better of starting a new topic.</p></div></article></li></ol></li><li id="comment-94923" class="comment even thread-even depth-1"><article id="div-comment-94923" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">foolar</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-94923"> <time datetime="2013-06-21T13:20:52+00:00"> June 21, 2013 at 1:20 pm </time> </a></div></footer><div class="comment-content"><p>try with</p><p>if [ $1 ] ; then<br /> LIB=${1}/lib<br /> if -d ${_LIB} ; then<br /> for jar in $(cd ${_LIB}; ls *.jar)<br /> do<br /> EXISTS=$(echo ${CP} | grep &#8220;/${jar}&#8221;)<br /> if [ &#8220;${_EXISTS}&#8221; != &#8220;&#8221; ]; then<br /> logger &#8220;WARN: Classpath will contain multiple files named ${jar}&#8221;<br /> else<br /> CP=${CP}${CP_DELIM}${LIB}/${jar}<br /> fi<br /> done<br /> fi<br /> cd $1<br /> fi</p></div></article></li><li id="comment-95288" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-95288" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">abr</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-95288"> <time datetime="2013-06-27T00:51:21+00:00"> June 27, 2013 at 12:51 am </time> </a></div></footer><div class="comment-content"><p>hi if I use it with a imput variable like:</p><p>echo &#8220;enter the numbers of repetitions :&#8221;<br /> read variable</p><p>tthe variable represent the number example 15 times to repeat !!!???/</p><p>how could it be ???</p></div></article></li><li id="comment-95767" class="comment even thread-even depth-1"><article id="div-comment-95767" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">dennis bernaerts</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-95767"> <time datetime="2013-07-04T13:19:55+00:00"> July 4, 2013 at 1:19 pm </time> </a></div></footer><div class="comment-content"><p>nice and clear thx a lot.<br /> What I am dreaming of is this clear kind of webpage in which each box has a tab in which you can select any language&#8230;. I&#8217;m sure it exists already but where ???</p><p>and I mean it needs to be clear and simple !!</p></div></article></li><li id="comment-98836" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-98836" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Tring Tring</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-98836"> <time datetime="2013-09-24T09:27:44+00:00"> September 24, 2013 at 9:27 am </time> </a></div></footer><div class="comment-content"><p>Thank you so Much!</p></div></article></li><li id="comment-99007" class="comment even thread-even depth-1 parent"><article id="div-comment-99007" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">sana</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-99007"> <time datetime="2013-10-02T10:40:59+00:00"> October 2, 2013 at 10:40 am </time> </a></div></footer><div class="comment-content"><p>hi i have a problem i want to write a shell script for siesta.<br /> i want to make diffrent directories and want to change lattice constants n then run it with siesta n want to chck total energy<br /> cn u tell m how cn i do this</p></div></article><ol class="children"><li id="comment-99008" class="comment odd alt depth-2 parent"><article id="div-comment-99008" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-99008"> <time datetime="2013-10-02T12:32:05+00:00"> October 2, 2013 at 12:32 pm </time> </a></div></footer><div class="comment-content"><p>no w cnt<br /> sry w dnt 1drstnd w U sd</p></div></article><ol class="children"><li id="comment-99023" class="comment even depth-3"><article id="div-comment-99023" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">sana</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-99023"> <time datetime="2013-10-03T06:26:47+00:00"> October 3, 2013 at 6:26 am </time> </a></div></footer><div class="comment-content"><p>I want to write a shell script<br /> for diffrent values of lattice constants .<br /> If i do manually i first make a directorie i.e for 3.80 then i copy *.psf and fdf file there open the fdf file and change lattice constant to 3.80 and the execute file with siesta and note the total energy.<br /> n again i repeat the same process for let say 3.90,4.10.4.20 etc.<br /> now i want to write a code in shell so that i dnt need to make directory every time and change lattice constant.<br /> I want to use looping for this purpose&#8230;&#8230;..but how??<br /> anybody have the little code for this?or anything?</p></div></article></li></ol></li></ol></li><li id="comment-99024" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-99024" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">sana</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-99024"> <time datetime="2013-10-03T06:31:28+00:00"> October 3, 2013 at 6:31 am </time> </a></div></footer><div class="comment-content"><p>#!/bin/bash<br /> # changing lattice constants<br /> for 3.80 3.90 in $inp3.70.fdf<br /> do<br /> echo 3.80 3.90<br /> mkdir<br /> mv inp3.70.fdf inp*.fdf.old<br /> mv *.psf *.psf.old<br /> sed &#8216;s/inp*.fdf/&amp;, lattice constant/&#8217; inp*.fdf<br /> done<br /> # Now comes the commands to be executed<br /> ~/code/sanabin/siesta 3.70.out &amp;<br /> ~<br /> as i write this but not working&#8230;&#8230;.. ../</p></div></article></li><li id="comment-99026" class="comment even thread-even depth-1"><article id="div-comment-99026" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-99026"> <time datetime="2013-10-03T07:48:44+00:00"> October 3, 2013 at 7:48 am </time> </a></div></footer><div class="comment-content"><p>Well, it seems that you do not understand the basics of shell scripting, even a simple [mkdir] command.</p><p>Anyway, you are very lucky, because this web site and Internet offer you _free_ training material.</p><p>The good news is : all you have to do is learn and work, using for instance these links.</p><p><a href="http://bash.cyberciti.biz/guide/Main_Page" rel="nofollow">http://bash.cyberciti.biz/guide/Main_Page</a><br /> <a href="http://bash.cyberciti.biz/script/for-loop/" rel="nofollow">http://bash.cyberciti.biz/script/for-loop/</a><br /> and of course this page <a href="https://www.cyberciti.biz/faq/bash-for-loop/" rel="nofollow">https://www.cyberciti.biz/faq/bash-for-loop/</a></p></div></article></li><li id="comment-99173" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-99173" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">matthias</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-99173"> <time datetime="2013-10-10T05:19:50+00:00"> October 10, 2013 at 5:19 am </time> </a></div></footer><div class="comment-content"><p>nice you used &#8220;c++&#8221; in &#8220;A representative three-expression example in bash&#8221; but that is a programing language.</p></div></article><ol class="children"><li id="comment-99176" class="comment even depth-2"><article id="div-comment-99176" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-99176"> <time datetime="2013-10-10T09:18:03+00:00"> October 10, 2013 at 9:18 am </time> </a></div></footer><div class="comment-content"><p>@matthias :</p><p>What&#8217;s your point?</p><p>Is it a humorous play of words on &#8220;C++&#8221; language and increment of c variable in this script?</p><p>In that case it would have been more convenient to append a smiling smiley, because otherwise, there is no coding issue in â€œA representative three-expression example in bashâ€.</p><p>:-/ wondering&#8230;</p><p>&#8212; Philippe</p></div></article></li></ol></li><li id="comment-107366" class="comment odd alt thread-even depth-1 parent"><article id="div-comment-107366" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">ravindra</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-107366"> <time datetime="2013-12-03T15:00:38+00:00"> December 3, 2013 at 3:00 pm </time> </a></div></footer><div class="comment-content"><p>Hi.. check it</p><pre>for (( c=1; c&lt;=5; c++ ))
do
   echo &quot;Welcome $c times&quot;
done</pre><p> why came this error in ubuntu please tell me<br /> reply please<br /> ./for3: 1: ./for3: Syntax error: Bad for loop variable</p></div></article><ol class="children"><li id="comment-432960" class="comment even depth-2"><article id="div-comment-432960" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Vamsi</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-432960"> <time datetime="2014-12-01T11:18:51+00:00"> December 1, 2014 at 11:18 am </time> </a></div></footer><div class="comment-content"><p>Hi,</p><p>It works for BASH only.</p><p>Check you have given the right interpretor at the top of the script.<br /> You can give it by placing</p><p>#! /bin/bash at the top.</p><p>&#8211;Vamsi</p></div></article></li></ol></li><li id="comment-111773" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-111773" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">RH User</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-111773"> <time datetime="2014-01-03T21:12:40+00:00"> January 3, 2014 at 9:12 pm </time> </a></div></footer><div class="comment-content"><p>Thanks. Solved my coding issue.</p></div></article></li><li id="comment-112630" class="comment even thread-even depth-1"><article id="div-comment-112630" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">dee</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-112630"> <time datetime="2014-01-17T20:27:24+00:00"> January 17, 2014 at 8:27 pm </time> </a></div></footer><div class="comment-content"><p>Can anyone advise how to write a for loop statement to run commands from a .sh when an event comes up like users uploading new files to the server.</p><p>My issue is that I am using a soft link to mirror an external disk drive in the .www/ and the soft link never updates when a new content is added to the drive within a session.</p></div></article></li><li id="comment-212077" class="comment odd alt thread-odd thread-alt depth-1 parent"><article id="div-comment-212077" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-212077"> <time datetime="2014-06-18T14:16:28+00:00"> June 18, 2014 at 2:16 pm </time> </a></div></footer><div class="comment-content"><p>Hi. Nice overview of for loops. I have a question, however:<br /> Using the old &#8220;seq&#8221; command, one could perform zero padding via &#8220;seq -f &#8220;%05g&#8221; 1 100&#8243;. How would this work with the {1..100} (or other) syntax?</p></div></article><ol class="children"><li id="comment-212364" class="comment even depth-2 parent"><article id="div-comment-212364" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Philippe Petrinko</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-212364"> <time datetime="2014-06-19T07:00:27+00:00"> June 19, 2014 at 7:00 am </time> </a></div></footer><div class="comment-content"><p>Hi Dai,</p><p>simple:</p><p>1)</p><p>for x in {0001..10} ; do echo &#8220;padding :$x:&#8221;; done</p><p>2)<br /> Actually it works specifying padding on first argument (here 0001). No need to specify padding on second argument, but it will either work.</p><p>for x in {0001..0010} ; do echo &#8220;padding :$x:&#8221;; done</p><p>3) but beware: you can specify different padding on both arguments, but only the _longuest_ will be used !</p><p>so this will use 6 digits padding, not 3 !</p><p>for x in {001..000010} ; do echo &#8220;padding :$x:&#8221;; done</p><p>ok ?</p><p>Vivek, would improve this topic on for loop adding this information on padding? It seems to be useful and at least informative and relevant to this topic.</p><p>&#8212; Philippe</p></div></article><ol class="children"><li id="comment-212390" class="comment odd alt depth-3"><article id="div-comment-212390" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Dai</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-212390"> <time datetime="2014-06-19T07:33:27+00:00"> June 19, 2014 at 7:33 am </time> </a></div></footer><div class="comment-content"><p>Marvelous. Cheers!</p></div></article></li></ol></li></ol></li><li id="comment-629365" class="comment even thread-even depth-1"><article id="div-comment-629365" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">dronkit</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-629365"> <time datetime="2015-04-01T20:55:26+00:00"> April 1, 2015 at 8:55 pm </time> </a></div></footer><div class="comment-content"><p>You cannot completely abandon seq for the new bash syntax. Apparently, all variables in bash are integers. I tried using the new syntax with negative and float numbers with disastrous results. Seq, in turn, does it wonderfully.</p></div></article></li><li id="comment-725348" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-725348" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Johnny Rosenberg</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-725348"> <time datetime="2015-08-06T15:07:44+00:00"> August 6, 2015 at 3:07 pm </time> </a></div></footer><div class="comment-content"><p>Ooops, forget it, someone else said the same thing. Didn&#8217;t see that, I&#8217;m not sure whyâ€¦</p></div></article></li><li id="comment-748141" class="comment even thread-even depth-1"><article id="div-comment-748141" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">wt</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-748141"> <time datetime="2015-09-24T13:06:28+00:00"> September 24, 2015 at 1:06 pm </time> </a></div></footer><div class="comment-content"><p>1 line loop, for example curling:<br /> for i in {1..500}; do curl &#8220;https://localhost:8040&#8221;; done;</p></div></article></li><li id="comment-757486" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-757486" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">onews</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-757486"> <time datetime="2015-11-03T14:05:54+00:00"> November 3, 2015 at 2:05 pm </time> </a></div></footer><div class="comment-content"><p>How do we do something like:<br /> for file in /etc/* /bin/*</p></div></article></li><li id="comment-759473" class="comment even thread-even depth-1"><article id="div-comment-759473" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Carlos Luna</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-759473"> <time datetime="2015-11-14T03:32:15+00:00"> November 14, 2015 at 3:32 am </time> </a></div></footer><div class="comment-content"><p>Useful information! thank you!</p><p>Can somebody explain me what this loop &#8220;for i in circles[0,:]:&#8221; means?</p></div></article></li><li id="comment-768649" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-768649" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Sasha</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-768649"> <time datetime="2015-12-22T14:41:24+00:00"> December 22, 2015 at 2:41 pm </time> </a></div></footer><div class="comment-content"><p>HI:</p><p>I use seq when I need variables in the loop limits, because as far as I remember</p><p>for y in {$x1..$x2}&#8230; is not allowed.</p><p>Cheers</p></div></article></li><li id="comment-772079" class="comment even thread-even depth-1"><article id="div-comment-772079" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">nezabudka</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-772079"> <time datetime="2016-01-03T16:39:31+00:00"> January 3, 2016 at 4:39 pm </time> </a></div></footer><div class="comment-content"><p>Sasha<br /> <code>for i in $(seq 1 2 $max)<br /> for i in $(eval echo {1..$max..5})</code></p></div></article></li><li id="comment-802421" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-802421" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Emma Edwards</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-802421"> <time datetime="2016-03-18T14:22:30+00:00"> March 18, 2016 at 2:22 pm </time> </a></div></footer><div class="comment-content"><p>Hi i would like to know how to loop numbers using terminal but i tant seem to find how to so it would be grÃ©Ã¢t if one of you can help me</p></div></article></li><li id="comment-802424" class="comment even thread-even depth-1"><article id="div-comment-802424" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Emma Edwards</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-802424"> <time datetime="2016-03-18T14:23:48+00:00"> March 18, 2016 at 2:23 pm </time> </a></div></footer><div class="comment-content"><p>sorry i ment i cant seem to find&#8230;.</p></div></article></li><li id="comment-866375" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-866375" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Golla praveen</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-866375"> <time datetime="2016-06-14T13:59:34+00:00"> June 14, 2016 at 1:59 pm </time> </a></div></footer><div class="comment-content"><p>#!/bin/bash<br /> for ((i=1;i&lt;=100;i++));<br /> do<br /> echo $i<br /> while excute the above program the below errors comes please check revert</p></div></article></li><li id="comment-882562" class="comment even thread-even depth-1"><article id="div-comment-882562" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">mito</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-882562"> <time datetime="2016-07-01T08:42:39+00:00"> July 1, 2016 at 8:42 am </time> </a></div></footer><div class="comment-content"><p>hi<br /> i would like to know how i write a shell script to search a 100 user home directory by certain file<br /> can you help me?<br /> thx</p></div></article></li><li id="comment-882563" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-882563" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">mito</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-882563"> <time datetime="2016-07-01T08:45:07+00:00"> July 1, 2016 at 8:45 am </time> </a></div></footer><div class="comment-content"><p>output is username und the file</p></div></article></li><li id="comment-910774" class="comment even thread-even depth-1"><article id="div-comment-910774" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Chad</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-910774"> <time datetime="2016-11-23T15:41:39+00:00"> November 23, 2016 at 3:41 pm </time> </a></div></footer><div class="comment-content"><p>Hey I hope you can help me here. I&#8217;m stuck.</p><p>down vote<br /> favorite</p><p>Trying to bind 20 x /24 subnets in Ubuntu 14 Server but I&#8217;m stuck here. These are diversified /24 subnets.</p><p>I tried the below method via script called addips.sh</p><p>for i in $(seq 3 254); do echo &#8220;auto em1:$i<br /> iface em1:$i inet static<br /> address xxx.xxx.16.$i<br /> netmask 255.255.255.0<br /> &#8221; &gt;&gt; virthosts; done</p><p>But, I noticed that this happened now:</p><p>Each /24 subnet it outputted started off at #1 again instead of 255, 256, 257, etc all the way through consecutively for all 20 x /24 subnets</p><p>auto em1:1<br /> auto em1:254</p><p>Then again&#8230;</p><p>auto em1:1<br /> &#8230;</p><p>How can I properly change this so it does reset at #1? em1 is the NIC Ethernet port (primary) and only port used too.</p><p>I also want to make sure these are permanent, they stick after a server reboot.</p></div></article></li><li id="comment-910907" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-910907" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Jignesh</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-910907"> <time datetime="2016-12-19T07:36:31+00:00"> December 19, 2016 at 7:36 am </time> </a></div></footer><div class="comment-content"><p>Hello There,</p><p>I want to make one scipt which shall change multiple file name as per below example</p><p>1) if file name contains *abc* then file name should be change to *xyz*<br /> 2) if file name contains *def* then file name should be change to *iop*<br /> 3) if file name contains *(any file name except above name) then file name should be change to *qwe*</p><p>Kindly help me to make the script as mentioned above requirement</p><p>Thanks!!</p></div></article></li><li id="comment-911190" class="comment even thread-even depth-1"><article id="div-comment-911190" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">urvashi</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-911190"> <time datetime="2017-02-03T12:58:22+00:00"> February 3, 2017 at 12:58 pm </time> </a></div></footer><div class="comment-content"><p>Very useful.Simple and easy.</p></div></article></li><li id="comment-911427" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-911427" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Alex</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-911427"> <time datetime="2017-03-16T20:32:05+00:00"> March 16, 2017 at 8:32 pm </time> </a></div></footer><div class="comment-content"><p>These are great examples, although I am hoping someone can help me with an easy one.</p><p>Below is a simple script, but I would like for it to ask for another hash or give the option to break instead of just breaking.</p><pre>
#!/bin/sh

URL=server.domain.com

TOKEN=A8B6389DEBA9FE3DA88DF2E785E4C

echo "Hello, my name is" $TOKEN

echo -n "Now, enter a hash: "
read HASH

curl -H "X-TOKEN-KEY: $TOKEN" https://$URL/hashcheck/check?hash=$HASH
</pre></div></article></li><li id="comment-920328" class="comment even thread-even depth-1"><article id="div-comment-920328" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">Danny</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-920328"> <time datetime="2017-05-23T21:40:57+00:00"> May 23, 2017 at 9:40 pm </time> </a></div></footer><div class="comment-content"><p>I would like to know how can i use for loop to pick up first few files from directory do something and then run with next batch.<br /> Currently, I am able to for each file it takes one file at a time however i want to launch a command against 4 files at a time and then move on to next set in same directory.</p></div></article></li><li id="comment-920695" class="comment odd alt thread-odd thread-alt depth-1"><article id="div-comment-920695" class="comment-body"><footer class="comment-meta"><div class="comment-author vcard"> <b class="fn">no</b> <span class="says">says:</span></div><div class="comment-metadata"> <a href="https://www.cyberciti.biz/faq/bash-for-loop/#comment-920695"> <time datetime="2017-08-31T17:29:05+00:00"> August 31, 2017 at 5:29 pm </time> </a></div></footer><div class="comment-content"><p>Arrays start at 0. Kill yourself</p></div></article></li></ol><p class="no-comments">&nbsp;&nbsp;&nbsp; <a title="Got a Linux or Unix question? Post it on our forum to get help!" style="color: #3b5bdb; font-weight: bold;" href="https://www.nixcraft.com/t/bash-for-loop-examples/1665">Still, have a question? Get help on our forum!</a></p></div><nav class="navigation post-navigation" role="navigation"><h2 class="screen-reader-text">Post navigation</h2><div class="nav-links"><div class="nav-previous"><a href="https://www.cyberciti.biz/faq/howto-upgrade-ubuntu-servers-804-to-810/" rel="prev"><span class="meta-nav" aria-hidden="true">Previous FAQ:</span> <span class="screen-reader-text">Previous post:</span> <span class="post-title">Upgrade Ubuntu Hardy Heron Server 8.04 To Ubuntu Server 8.10 Intrepid Ibex</span></a></div><div class="nav-next"><a href="https://www.cyberciti.biz/faq/edit-file-when-youre-viewing-withmore-less/" rel="next"><span class="meta-nav" aria-hidden="true">Next FAQ:</span> <span class="screen-reader-text">Next post:</span> <span class="post-title">Edit a File When You Are Viewing It Using more / less Command Pager</span></a></div></div></nav><div class="tags-links">Tagged as: <span class="screen-reader-text">Tags </span><a href="https://www.cyberciti.biz/faq/tag/bash-control-expression/" rel="tag">bash control expression</a>, <a href="https://www.cyberciti.biz/faq/tag/bash-for-infinite-loops/" rel="tag">bash for infinite loops</a>, <a href="https://www.cyberciti.biz/faq/tag/control-flow/" rel="tag">control flow</a>, <a href="https://www.cyberciti.biz/faq/tag/echo-command/" rel="tag">echo command</a>, <a href="https://www.cyberciti.biz/faq/tag/flow-statement/" rel="tag">flow statement</a>, <a href="https://www.cyberciti.biz/faq/tag/for-command/" rel="tag">for command</a>, <a href="https://www.cyberciti.biz/faq/tag/for-loop-syntax/" rel="tag">for loop syntax</a>, <a href="https://www.cyberciti.biz/faq/tag/for-syntax/" rel="tag">for syntax</a>, <a href="https://www.cyberciti.biz/faq/tag/for-three-expression-bash-loop/" rel="tag">for three-expression bash loop</a>, <a href="https://www.cyberciti.biz/faq/tag/shell-code/" rel="tag">shell code</a>, <a href="https://www.cyberciti.biz/faq/tutorial-difficulty-level/easy/" rel="tag">Easy</a></div></main></div><aside id="secondary" class="sidebar widget-area" role="complementary"><section id="custom_html-3" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" data-cfasync="false"></script>  <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-7825705102693166" data-ad-slot="3521177162"></ins> <script type="1df16c32f4a4f0b9555eba57-text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script> </div></section><section id="text-384338396" class="widget widget_text"><div class="textwidget"><p><iframe src="https://duckduckgo.com/search.html?width=280&#038;site=cyberciti.biz&#038;prefill=Search nixCraft" style="overflow:hidden;margin:0;padding:0;width:100%;height:40px;" frameborder="0"></iframe></p></div></section><section id="custom_html-4" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><div id="blockerlinuxtshirt7a1003a" style="display:none;"><h2>Cool Linux penguin shirt</h2> <a href="https://www.cyberciti.biz/go/a/Linux-T-Shirt.php"><img src="https://www.cyberciti.biz/media/new/faq/2019/02/Linux-T-shirt.jpg"></a></div> <script type="1df16c32f4a4f0b9555eba57-text/javascript">if (typeof window.canRunAds === "undefined") {
 document.getElementById("blockerlinuxtshirt7a1003a").style.display = "";
}</script> <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" data-cfasync="false"></script>  <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-7825705102693166" data-ad-slot="7936929463"></ins> <script type="1df16c32f4a4f0b9555eba57-text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></div></section><section id="custom_html-2" class="widget_text widget widget_custom_html"><h2 class="widget-title">FEATURED ARTICLES</h2><div class="textwidget custom-html-widget"><style>.topnum {
    color: #ccc;
    font-size: 40px;
    float: left;
    margin-top: -10px;
    width: 15%;
}</style><div class="wp_rp_wrap"><div class="wp_rp_content"><ul class="related_post"><li><div class="topnum">1</div><a href="https://www.cyberciti.biz/open-source/30-cool-best-open-source-softwares-of-2013/">30 Cool Open Source Software I Discovered in 2013</a></li><li><div class="topnum">2</div><a href="https://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html">30 Handy Bash Shell Aliases For Linux / Unix / Mac OS X</a></li><li><div class="topnum">3</div><a href="https://www.cyberciti.biz/networking/nmap-command-examples-tutorials/">Top 32 Nmap Command Examples For Linux Sys/Network Admins</a></li><li><div class="topnum">4</div><a href="https://www.cyberciti.biz/tips/php-security-best-practices-tutorial.html">25 PHP Security Best Practices For Linux Sys Admins</a></li><li><div class="topnum">5</div><a href="https://www.cyberciti.biz/tips/top-linux-monitoring-tools.html">30 Linux System Monitoring Tools Every SysAdmin Should Know</a></li><li><div class="topnum">6</div><a href="https://www.cyberciti.biz/tips/linux-security.html">40 Linux Server Hardening Security Tips</a></li><li><div class="topnum">7</div><a href="https://www.cyberciti.biz/tips/linux-iptables-examples.html">Linux: 25 Iptables Netfilter Firewall Examples For New SysAdmins</a></li><li><div class="topnum">8</div><a href="https://www.cyberciti.biz/tips/linux-unix-bsd-openssh-server-best-practices.html">Top 20 OpenSSH Server Best Security Practices </a></li><li><div class="topnum">9</div><a href="https://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html">Top 25 Nginx Web Server Best Security Practices</a></li><li><div class="topnum">10</div><a href="https://www.cyberciti.biz/tips/my-10-unix-command-line-mistakes.html">My 10 UNIX Command Line Mistakes</a></li></ul></div></div></div></section><section id="widget_crp-5" class="widget widget_widget_crp"><h2 class="widget-title">Related FAQs &amp; HowTos:</h2><div class="crp_related_widget"><div class="wp_rp_wrap"><div class="wp_rp_content"><ul class="related_post"><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/shell-script-while-loop-examples/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/55.jpg"></a><a href="https://www.cyberciti.biz/faq/shell-script-while-loop-examples/"><span class="crp_title">Shell Script While Loop Examples</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/linux-unix-applesox-bsd-bash-cstyle-for-loop/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/41.jpg"></a><a href="https://www.cyberciti.biz/faq/linux-unix-applesox-bsd-bash-cstyle-for-loop/"><span class="crp_title">Bash C Style For Loop Example and Syntax</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/unix-linux-iterate-over-a-variable-range-of-numbers-in-bash/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/4.jpg"></a><a href="https://www.cyberciti.biz/faq/unix-linux-iterate-over-a-variable-range-of-numbers-in-bash/"><span class="crp_title">HowTo: Iterate Bash For Loop Variable Range Under Unix / Linux</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/bsd-appleosx-linux-bash-shell-run-command-n-times/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/19.jpg"></a><a href="https://www.cyberciti.biz/faq/bsd-appleosx-linux-bash-shell-run-command-n-times/"><span class="crp_title">Linux / UNIX: Run Command a Number of Times In a Row</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/bash-while-loop/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/56.jpg"></a><a href="https://www.cyberciti.biz/faq/bash-while-loop/"><span class="crp_title">Bash While Loop Examples</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/golang-for-loop-examples/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/19.jpg"></a><a href="https://www.cyberciti.biz/faq/golang-for-loop-examples/"><span class="crp_title">Go Language for Loop Examples</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/csh-shell-scripting-loop-example/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/25.jpg"></a><a href="https://www.cyberciti.biz/faq/csh-shell-scripting-loop-example/"><span class="crp_title">Unix: csh Shell Loop Example</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/ksh-for-loop/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/52.jpg"></a><a href="https://www.cyberciti.biz/faq/ksh-for-loop/"><span class="crp_title">KSH For Loop Examples</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/unix-for-loop-1-to-10/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/13.jpg"></a><a href="https://www.cyberciti.biz/faq/unix-for-loop-1-to-10/"><span class="crp_title">HowTo: Unix For Loop 1 to 100 Numbers</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/linux-unix-bash-for-loop-one-line-command/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/42.jpg"></a><a href="https://www.cyberciti.biz/faq/linux-unix-bash-for-loop-one-line-command/"><span class="crp_title">HowTo: Use bash For Loop In One Line</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/bash-cycle-loop-forever/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/6.jpg"></a><a href="https://www.cyberciti.biz/faq/bash-cycle-loop-forever/"><span class="crp_title">Linux / UNIX: Bash Loop Forever</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/unix-linux-bsd-appleosx-continue-in-bash-loop/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/12.jpg"></a><a href="https://www.cyberciti.biz/faq/unix-linux-bsd-appleosx-continue-in-bash-loop/"><span class="crp_title">Bash: Continue In a For / While Loop</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/bash-infinite-loop/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/25.jpg"></a><a href="https://www.cyberciti.biz/faq/bash-infinite-loop/"><span class="crp_title">Bash Infinite Loop Examples</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/bash-for-loop-skip-example/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/25.jpg"></a><a href="https://www.cyberciti.biz/faq/bash-for-loop-skip-example/"><span class="crp_title">HowTo: Skip Bash For Loop</span></a></li><li><a class="wp_rp_thumbnail" href="https://www.cyberciti.biz/faq/python-for-loop-examples-statements/"><img alt="" src="https://www.cyberciti.biz/images/rp/13/49.jpg"></a><a href="https://www.cyberciti.biz/faq/python-for-loop-examples-statements/"><span class="crp_title">Python For Loop Examples</span></a></li></ul></div></div><div class="crp_clear"></div></div></section><section id="text-384338391" class="widget widget_text"><h2 class="widget-title">Sign up for my newsletter</h2><div class="textwidget"><p><a href="https://www.cyberciti.biz/subscribe-to-weekly-linux-unix-newsletter-for-sysadmin/"><img title="" src="https://www.cyberciti.biz/media/new/cms/2017/07/inbox-sign-up.001.jpeg" alt="Sign up for my newsletter" border="0" /></a></p></div></section><section id="text-384338394" class="widget widget_text"><div class="textwidget"><p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js" data-cfasync="false"></script><br /> <ins class="adsbygoogle" style="display: block;" data-ad-format="autorelaxed" data-ad-client="ca-pub-7825705102693166" data-ad-slot="8885087266"></ins><br /> <script type="1df16c32f4a4f0b9555eba57-text/javascript">(adsbygoogle = window.adsbygoogle || []).push({});</script></p></div></section><section id="rss-3" class="widget widget_rss"><h2 class="widget-title"><a class="rsswidget" href="https://www.cyberciti.biz/atom/updated.xml"><img class="rss-widget-icon" style="border:0" width="14" height="14" src="https://www.cyberciti.biz/faq/wp-includes/images/rss.png" alt="RSS" /></a> <a class="rsswidget" href="https://www.cyberciti.biz/atom/updated.xml">Recently updated</a></h2><ul><li><a class='rsswidget' href='https://www.cyberciti.biz/faq/find-out-what-processes-are-running-in-the-background-on-linux/'>Find out what processes are running in the background on Linux</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/faq/unix-howto-read-line-by-line-from-file/'>Linux/UNIX: Bash Read a File Line By Line</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/tips/compiling-linux-kernel-26.html'>How to compile and install Linux Kernel 5.1.2 from source code</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/faq/download-a-file-with-curl-on-linux-unix-command-line/'>Download a file with curl on Linux / Unix command line</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/howto/debian-linux/debian-linux-9-4-released-upgrade/'>Debian Linux 9.9 released and here is how to upgrade it</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/tips/how-do-i-find-out-linux-cpu-utilization.html'>How do I Find Out Linux CPU Utilization?</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/faq/linux-tell-which-graphics-vga-card-installed/'>Linux Find Out Graphics Card Installed In My System</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/tips/linux-security.html'>40 Linux Server Hardening Security Tips [2019 edition]</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/faq/howto-change-ssh-port-on-linux-or-unix-server/'>How to change the ssh port on Linux or Unix server</a></li><li><a class='rsswidget' href='https://www.cyberciti.biz/faq/install-configure-openvpn-server-on-debian-9-linux/'>Install and Configure an OpenVPN on Debian 9 In 5 Minutes</a></li></ul></section><section id="text-384338397" class="widget widget_text"><h2 class="widget-title">Corporate Patron</h2><div class="textwidget"><ul><li><a href="https://www.linode.com/" target="_blank" rel="nofollow noopener noreferrer">Linode</a></li><li><a href="https://www.cloudflare.com/" target="_blank" rel="nofollow noopener noreferrer">Cloudflare</a></li><li><a href="https://prospectone.io/" target="_blank" rel="nofollow noopener noreferrer">Prospect One</a></li></ul></div></section></aside></div></div><footer id="colophon" class="site-footer" role="contentinfo"><div class="site-inner"><div class="site-content"><div class="flex-content"><div class="site-branding"> <a href="https://www.cyberciti.biz/faq/" class="custom-logo-link" rel="home"><img width="42" height="46" src="https://www.cyberciti.biz/media/new/faq/2017/06/new-nixcraft-logo-cyberciti.biz_.png" class="custom-logo" alt="nixCraft" /></a> <span class="copyright">@2000-2019 nixCraft. All rights reserved.</span></div><nav class="secondary-navigation" role="navigation" aria-label="Secondary Menu"><div class="menu-bottomfaq-container"><ul id="menu-bottomfaq" class="secondary-menu"><li id="menu-item-146087" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146087"><a href="https://www.cyberciti.biz/tips/privacy">PRIVACY</a></li><li id="menu-item-146088" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146088"><a href="https://www.cyberciti.biz/tips/disclaimer">TERM OF SERVICE</a></li><li id="menu-item-146089" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146089"><a href="https://www.cyberciti.biz/tips/contact-us">CONTACT/EMAIL</a></li><li id="menu-item-146090" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146090"><a href="https://www.cyberciti.biz/tips/donate">DONATIONS</a></li><li id="menu-item-147030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147030"><a href="https://www.cyberciti.biz/search/">Search</a></li></ul></div></nav></div><div class="flex-content"></div></div></div></footer></div> <script type="1df16c32f4a4f0b9555eba57-text/javascript">/* <![CDATA[ */
var discourse = {"url":"https:\/\/www.nixcraft.com"};
/* ]]> */</script> <script type="1df16c32f4a4f0b9555eba57-text/javascript" src='https://www.cyberciti.biz/faq/wp-content/plugins/wp-discourse/js/comments.js?ver=1.9.0'></script> <script type="1df16c32f4a4f0b9555eba57-text/javascript" src='https://www.cyberciti.biz/faq/wp-content/plugins/wp-syntax/js/wp-syntax.js?ver=1.1'></script> <script type="1df16c32f4a4f0b9555eba57-text/javascript" src='https://www.cyberciti.biz/faq/wp-content/themes/cybercity/assets/js/main.js?ver=1.0.0'></script> <script type="1df16c32f4a4f0b9555eba57-text/javascript" src='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/js/skip-link-focus-fix.js?ver=20160816'></script> <script type="1df16c32f4a4f0b9555eba57-text/javascript">/* <![CDATA[ */
var screenReaderText = {"expand":"expand child menu","collapse":"collapse child menu"};
/* ]]> */</script> <script type="1df16c32f4a4f0b9555eba57-text/javascript" src='https://www.cyberciti.biz/faq/wp-content/themes/twentysixteen/js/functions.js?ver=20181230'></script> <script type="1df16c32f4a4f0b9555eba57-text/javascript" src='https://www.cyberciti.biz/faq/wp-includes/js/wp-embed.min.js?ver=5.2.1'></script> <script src="https://ajax.cloudflare.com/cdn-cgi/scripts/a2bd7673/cloudflare-static/rocket-loader.min.js" data-cf-settings="1df16c32f4a4f0b9555eba57-|49" defer=""></script></body></html>